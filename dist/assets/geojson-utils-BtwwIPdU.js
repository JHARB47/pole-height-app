function g(t,e){return Array.from(t.getElementsByTagName(e))}function L(t){return t[0]==="#"?t:`#${t}`}function I(t,e,n){return Array.from(t.getElementsByTagNameNS(n,e))}function f(t){return t==null||t.normalize(),(t==null?void 0:t.textContent)||""}function a(t,e,n){const r=t.getElementsByTagName(e);return r.length?r[0]:null}function m(t,e,n){const r={};if(!t)return r;const o=t.getElementsByTagName(e),i=o.length?o[0]:null;return i&&n?n(i,r):r}function b(t,e,n){const r=f(a(t,e));return r&&n?n(r)||{}:{}}function l(t,e,n){const r=Number.parseFloat(f(a(t,e)));if(!Number.isNaN(r))return n&&n(r),r}function O(t,e){const n={};for(const r of e)b(t,r,o=>{n[r]=o});return n}function G(t){return(t==null?void 0:t.nodeType)===1}function B(t,e){const n={},r=e==="stroke"||e==="fill"?e:`${e}-color`;return t[0]==="#"&&(t=t.substring(1)),t.length===6||t.length===3?n[r]=`#${t}`:t.length===8&&(n[`${e}-opacity`]=Number.parseInt(t.substring(0,2),16)/255,n[r]=`#${t.substring(6,8)}${t.substring(4,6)}${t.substring(2,4)}`),n}function N(t,e,n){const r={};return l(t,e,o=>{r[n]=o}),r}function k(t,e){return m(t,"color",n=>B(f(n),e))}function E(t){return m(t,"Icon",(e,n)=>(b(e,"href",r=>{n.icon=r}),n))}function D(t){return m(t,"IconStyle",e=>Object.assign(k(e,"icon"),N(e,"scale","icon-scale"),N(e,"heading","icon-heading"),m(e,"hotSpot",n=>{const r=Number.parseFloat(n.getAttribute("x")||""),o=Number.parseFloat(n.getAttribute("y")||""),i=n.getAttribute("xunits")||"",s=n.getAttribute("yunits")||"";return!Number.isNaN(r)&&!Number.isNaN(o)?{"icon-offset":[r,o],"icon-offset-units":[i,s]}:{}}),E(e)))}function j(t){return m(t,"LabelStyle",e=>Object.assign(k(e,"label"),N(e,"scale","label-scale")))}function $(t){return m(t,"LineStyle",e=>Object.assign(k(e,"stroke"),N(e,"width","stroke-width")))}function V(t){return m(t,"PolyStyle",(e,n)=>Object.assign(n,m(e,"color",r=>B(f(r),"fill")),b(e,"fill",r=>{if(r==="0")return{"fill-opacity":0}}),b(e,"outline",r=>{if(r==="0")return{"stroke-opacity":0}})))}function T(t){return Object.assign({},V(t),$(t),j(t),D(t))}const Q=/\s*/g,U=/^\s*|\s*$/g,q=/\s+/;function F(t){return t.replace(Q,"").split(",").map(Number.parseFloat).filter(e=>!Number.isNaN(e)).slice(0,3)}function A(t){return t.replace(U,"").split(q).map(F).filter(e=>e.length>=2)}function z(t){let e=g(t,"coord");e.length===0&&(e=I(t,"coord","*"));const n=e.map(r=>f(r).split(" ").map(Number.parseFloat));return n.length===0?null:{geometry:n.length>2?{type:"LineString",coordinates:n}:{type:"Point",coordinates:n[0]},times:g(t,"when").map(r=>f(r))}}function w(t){if(t.length===0)return t;const e=t[0],n=t[t.length-1];let r=!0;for(let o=0;o<Math.max(e.length,n.length);o++)if(e[o]!==n[o]){r=!1;break}return r?t:t.concat([t[0]])}function h(t){return f(a(t,"coordinates"))}function C(t){let e=[],n=[];for(let r=0;r<t.childNodes.length;r++){const o=t.childNodes.item(r);if(G(o))switch(o.tagName){case"MultiGeometry":case"MultiTrack":case"gx:MultiTrack":{const i=C(o);e=e.concat(i.geometries),n=n.concat(i.coordTimes);break}case"Point":{const i=F(h(o));i.length>=2&&e.push({type:"Point",coordinates:i});break}case"LinearRing":case"LineString":{const i=A(h(o));i.length>=2&&e.push({type:"LineString",coordinates:i});break}case"Polygon":{const i=[];for(const s of g(o,"LinearRing")){const u=w(A(h(s)));u.length>=4&&i.push(u)}i.length&&e.push({type:"Polygon",coordinates:i});break}case"Track":case"gx:Track":{const i=z(o);if(!i)break;const{times:s,geometry:u}=i;e.push(u),s.length&&n.push(s);break}}}return{geometries:e,coordTimes:n}}const y=t=>Number(t),x={string:t=>t,int:y,uint:y,short:y,ushort:y,float:y,double:y,bool:t=>!!t};function S(t,e){return m(t,"ExtendedData",(n,r)=>{for(const o of g(n,"Data"))r[o.getAttribute("name")||""]=f(a(o,"value"));for(const o of g(n,"SimpleData")){const i=o.getAttribute("name")||"",s=e[i]||x.string;r[i]=s(f(o))}return r})}function R(t){const e=a(t,"description");for(const n of Array.from((e==null?void 0:e.childNodes)||[]))if(n.nodeType===4)return{description:{"@type":"html",value:f(n)}};return{}}function M(t){return m(t,"TimeSpan",e=>({timespan:{begin:f(a(e,"begin")),end:f(a(e,"end"))}}))}function _(t){return m(t,"TimeStamp",e=>({timestamp:f(a(e,"when"))}))}function v(t,e){return b(t,"styleUrl",n=>(n=L(n),e[n]?Object.assign({styleUrl:n},e[n]):{styleUrl:n}))}var p;(function(t){t.ABSOLUTE="absolute",t.RELATIVE_TO_GROUND="relativeToGround",t.CLAMP_TO_GROUND="clampToGround",t.CLAMP_TO_SEAFLOOR="clampToSeaFloor",t.RELATIVE_TO_SEAFLOOR="relativeToSeaFloor"})(p||(p={}));function H(t){switch(t==null?void 0:t.textContent){case p.ABSOLUTE:return p.ABSOLUTE;case p.CLAMP_TO_GROUND:return p.CLAMP_TO_GROUND;case p.CLAMP_TO_SEAFLOOR:return p.CLAMP_TO_SEAFLOOR;case p.RELATIVE_TO_GROUND:return p.RELATIVE_TO_GROUND;case p.RELATIVE_TO_SEAFLOOR:return p.RELATIVE_TO_SEAFLOOR}return null}function K(t){return a(t,"gx:LatLonQuad")?{geometry:{type:"Polygon",coordinates:[w(A(h(t)))]}}:X(t)}const J=Math.PI/180;function W(t,e,n){const r=[(t[0]+t[2])/2,(t[1]+t[3])/2];return[e[0].map(o=>{const i=o[1]-r[1],s=o[0]-r[0],u=Math.sqrt(i**2+s**2),c=Math.atan2(i,s)+n*J;return[r[0]+Math.cos(c)*u,r[1]+Math.sin(c)*u]})]}function X(t){const e=a(t,"LatLonBox");if(e){const n=l(e,"north"),r=l(e,"west"),o=l(e,"east"),i=l(e,"south"),s=l(e,"rotation");if(typeof n=="number"&&typeof i=="number"&&typeof r=="number"&&typeof o=="number"){const u=[r,i,o,n];let c=[[[r,n],[o,n],[o,i],[r,i],[r,n]]];return typeof s=="number"&&(c=W(u,c,s)),{bbox:u,geometry:{type:"Polygon",coordinates:c}}}}return null}function Y(t,e,n,r){var c;const o=K(t),i=(o==null?void 0:o.geometry)||null;if(!i&&r.skipNullGeometry)return null;const s={type:"Feature",geometry:i,properties:Object.assign({"@geometry-type":"groundoverlay"},O(t,["name","address","visibility","open","phoneNumber","description"]),R(t),v(t,e),T(t),E(t),S(t,n),M(t),_(t))};o!=null&&o.bbox&&(s.bbox=o.bbox),((c=s.properties)==null?void 0:c.visibility)!==void 0&&(s.properties.visibility=s.properties.visibility!=="0");const u=t.getAttribute("id");return u!==null&&u!==""&&(s.id=u),s}function Z(t){const e=a(t,"Region");return e?{coordinateBox:et(e),lod:tt(t)}:null}function tt(t){var n,r,o,i;const e=a(t,"Lod");return e?[(n=l(e,"minLodPixels"))!=null?n:-1,(r=l(e,"maxLodPixels"))!=null?r:-1,(o=l(e,"minFadeExtent"))!=null?o:null,(i=l(e,"maxFadeExtent"))!=null?i:null]:null}function et(t){const e=a(t,"LatLonAltBox");if(e){const n=l(e,"north"),r=l(e,"west"),o=l(e,"east"),i=l(e,"south");if(H(a(e,"altitudeMode")||a(e,"gx:altitudeMode"))&&console.debug("Encountered an unsupported feature of KML for togeojson: please contact developers for support of altitude mode."),typeof n=="number"&&typeof i=="number"&&typeof r=="number"&&typeof o=="number")return{bbox:[r,i,o,n],geometry:{type:"Polygon",coordinates:[[[r,n],[o,n],[o,i],[r,i],[r,n]]]}}}return null}function nt(t){const e=a(t,"Link");return e?O(e,["href","refreshMode","refreshInterval","viewRefreshMode","viewRefreshTime","viewBoundScale","viewFormat","httpQuery"]):{}}function rt(t,e,n,r){var c,d,P;const o=Z(t),i=((c=o==null?void 0:o.coordinateBox)==null?void 0:c.geometry)||null;if(!i&&r.skipNullGeometry)return null;const s={type:"Feature",geometry:i,properties:Object.assign({"@geometry-type":"networklink"},O(t,["name","address","visibility","open","phoneNumber","styleUrl","refreshVisibility","flyToView","description"]),R(t),v(t,e),T(t),E(t),S(t,n),M(t),_(t),nt(t),o!=null&&o.lod?{lod:o.lod}:{})};(d=o==null?void 0:o.coordinateBox)!=null&&d.bbox&&(s.bbox=o.coordinateBox.bbox),((P=s.properties)==null?void 0:P.visibility)!==void 0&&(s.properties.visibility=s.properties.visibility!=="0");const u=t.getAttribute("id");return u!==null&&u!==""&&(s.id=u),s}function ot(t){return t.length===0?null:t.length===1?t[0]:{type:"GeometryCollection",geometries:t}}function it(t,e,n,r){var d;const{coordTimes:o,geometries:i}=C(t),s=ot(i);if(!s&&r.skipNullGeometry)return null;const u={type:"Feature",geometry:s,properties:Object.assign(O(t,["name","address","visibility","open","phoneNumber","description"]),R(t),v(t,e),T(t),S(t,n),M(t),_(t),o.length?{coordinateProperties:{times:o.length===1?o[0]:o}}:{})};((d=u.properties)==null?void 0:d.visibility)!==void 0&&(u.properties.visibility=u.properties.visibility!=="0");const c=t.getAttribute("id");return c!==null&&c!==""&&(u.id=c),u}function st(t){let e=t.getAttribute("id");const n=t.parentNode;return!e&&G(n)&&n.localName==="CascadingStyle"&&(e=n.getAttribute("kml:id")||n.getAttribute("id")),L(e||"")}function ut(t){const e={};for(const n of g(t,"Style"))e[st(n)]=T(n);for(const n of g(t,"StyleMap")){const r=L(n.getAttribute("id")||"");b(n,"styleUrl",o=>{o=L(o),e[o]&&(e[r]=e[o])})}return e}function ct(t){const e={};for(const n of g(t,"SimpleField"))e[n.getAttribute("name")||""]=x[n.getAttribute("type")||""]||x.string;return e}function*at(t,e={skipNullGeometry:!1}){const n=t,r=ut(n),o=ct(n);for(const i of g(n,"Placemark")){const s=it(i,r,o,e);s&&(yield s)}for(const i of g(n,"GroundOverlay")){const s=Y(i,r,o,e);s&&(yield s)}for(const i of g(n,"NetworkLink")){const s=rt(i,r,o,e);s&&(yield s)}}function lt(t,e={skipNullGeometry:!1}){return{type:"FeatureCollection",features:Array.from(at(t,e))}}export{lt as kml,at as kmlGen};
//# sourceMappingURL=geojson-utils-BtwwIPdU.js.map
