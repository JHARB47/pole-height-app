{"version":3,"mappings":"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","names":["ProposedLineCalculator","React","__vitePreload","ProposedLineCalculator$1","CalculatorLoading","jsxs","jsx","LazyProposedLineCalculator","props","Suspense","useDebounce","value","delay","debouncedValue","setDebouncedValue","useState","useEffect","handler","poleHeight","poleClass","setPoleHeight","setPoleClass","jobs","currentJobId","setCurrentJobId","existingPowerHeight","existingPowerVoltage","setExistingPowerHeight","setExistingPowerVoltage","spanDistance","isNewConstruction","setIsNewConstruction","adjacentPoleHeight","attachmentType","cableDiameter","windSpeed","spanEnvironment","streetLightHeight","dripLoopHeight","proposedLineHeight","existingLines","iceThicknessIn","hasTransformer","setHasTransformer","powerReference","setPowerReference","setDripLoopHeight","setStreetLightHeight","setMakeReadyNotes","setAnalysis","setSpanDistance","setAdjacentPoleHeight","setAttachmentType","setCableDiameter","setWindSpeed","setIceThicknessIn","setSpanEnvironment","setProposedLineHeight","presetProfile","setPresetProfile","customMinTopSpace","setCustomMinTopSpace","customRoadClearance","setCustomRoadClearance","customCommToPower","setCustomCommToPower","useTickMarkFormat","setUseTickMarkFormat","projectName","setProjectName","applicantName","setApplicantName","jobNumber","setJobNumber","jobOwner","setJobOwner","submissionProfiles","currentSubmissionProfile","setCurrentSubmissionProfile","poleLatitude","setPoleLatitude","poleLongitude","setPoleLongitude","useAppStore","useShallow","s","showReport","setShowReport","showBatchReport","setShowBatchReport","showHelp","setShowHelp","helpSection","setHelpSection","activeSection","setActiveSection","openSections","setOpenSections","raw","els","id","obs","entries","visible","entry","a","b","_b","_a","el","notes","line","fmt","val","formatFeetInches","parseFeet","heightDiffInches","cost","activeJob","j","profileName","baseProfile","p","mergedProfile","results","warnings","errors","computeAnalysis","coordinateValidation","setCoordinateValidation","isValidating","setIsValidating","debouncedLatitude","debouncedLongitude","validation","validatePoleCoordinates","useDeviceGPS","pos","resolve","reject","latitude","longitude","e","link","i","arr","SectionSaveButton","Fragment","SectionTips","Input","LogoUpload","error","warning","Select","DEFAULTS","job","ProfileTuner","c","Checkbox","ImportPanel","SpansEditor","ExistingLinesEditor","FieldActionsCompact","FieldCollection","section","ScenarioButtons","ExportButtons","r","InlineResultsErrorBoundary","PrintableReport","BatchReport","ResultsPanel","AgencyTemplatesPanel","FormAutofillPanel","HelpModal","info","content","t","PropTypes","sectionKey","align","store","ts","label","includePhotos","setIncludePhotos","exportGeo","type","buildGeoJSON","exportGeoJSON","exportKML","exportKMZ","buildGeoJSON2","n","jobPoles","importedPoles","byId","poles","ip","jp","spans","idx","fc","exportCollected","header","rows","_c","_d","_e","computeVarianceIn","_f","evaluateVariancePass","_g","csv","v","blob","url","exportFirst25","subset","exportSpansZip","JSZip","__vite_default__","zip","polesAll","effectiveProfile","baseName","base","buildManifest","csvFrom","photos","index","safeId","dataUrl","m","mime","base64","ext","file","exportByProfile","name","exportAepZipInternal","scoped","exportRowsByProfileInternal","suffix","withVariance","fileLabel","_h","getAttachToleranceIn","asBuiltAttach","plannedAttach","deltaIn","tol","AutoMapPreviewModal","open","onClose","current","proposal","onApply","groups","diff","g","k","options","o","updateSubmissionProfile","baseProfileName","x","effective","onChangeGlobal","key","num","onChangeJob","onResetJobOverrides","Editor","field","unit","engineeringNotes","costAnalysis","makeReadyNotes","clearances","formatFeetInchesTickMarks","formatFeetInchesVerbose","SpanDiagram","CompliancePanel","w","items","setItems","getTemplatesForEnvironment","list","q","basePdf","setBasePdf","layoutText","setLayoutText","status","setStatus","autoPreview","setAutoPreview","env","enabled","fields","setFields","presetName","setPresetName","summary","makePermitSummary","buildMM109Fields","buildCSXFields","buildStateHighwayFields","f","prev","onFill","layout","buf","fillPdfWithFields","outBytes","presetsForEnv","jobId","all","onSavePreset","onLoadPreset","onDeletePreset","onAutoLayout","getPdfMeta","fillPdfAuto","meta","pretty","onFillByForm","fillAcroFormByName","mid","groundTarget","groundOK","commToPowerTarget","powerHt","proposed","sep","sepOK","inchesUsed","rec","logoDataUrl","byCompany","agg","acc","next","cur","snapshot","load","snap","onCSV","resultsToCSV","onPDF","PermitPackButton","InteropExportButton","pdfReady","setPdfReady","hovering","setHovering","hoverTimerRef","handleMouseEnter","handleMouseLeave","onPermit","buildMM109PDF","buildCSXPDF","detectPermitIssues","buildTemplatesText","templatesTxt","issues","issuesText","scopedPoles","done","pass","fail","withPhoto","pciTxt","_i","_j","_k","_l","_m","_n","_o","_p","_q","evalRows","ok","_r","_s","_t","_u","evalCsv","qaRows","_v","_w","_x","_y","_z","_A","_B","_C","_D","_E","_F","_G","qaCsv","h","margin","groundY","scaleY","ft","maxFt","y","x1","x2","y1","y2","midY","targetY","_I","_H","path","scaleFt","scalePx","barX","barY","svg","_K","_J","_N","_M","_L","_O","_P","_Q","pdf","scopedPolesForReadme","pciDone","pciPass","pciFail","pciPhotos","bucket","byBucket","planned","built","_R","qaM","qaCounts","counts","buckets","src","d","readme","_S","checklist","isTargetEnv","setOpen","format","setFormat","preset","setPreset","includePoles","setIncludePoles","includeSpans","setIncludeSpans","includeLines","setIncludeLines","exportError","setExportError","onExport","lines","buildPolesCSV","buildSpansCSV","buildExistingLinesCSV","buildFirstEnergyJointUseCSV","kml","buildKML","buildGeoForShp","exportShapefile","shpBlob","EXPORT_PRESETS","openHelp","showBottomActions","poleId","setPoleId","saving","setSaving","currentPhotoDataUrl","setCurrentPhotoDataUrl","fileInputRefLibrary","fileInputRefCamera","filterStatus","setFilterStatus","filterPhoto","setFilterPhoto","filterPass","setFilterPass","exifTimestamp","setExifTimestamp","handleRowGPS","rowIndex","onDone","item","onSaveDraft","onSelectPhoto","reader","exifr","exif","lat","lon","dt","exportAepZip","exportRowsByProfile","verdict","total","exportFilteredByProfile","filtered","manifestRows","exportDoneOnly","keep","exportFailOnly","midspanChecks","out","row","incoming","outgoing","spanBase","pullFt","computePullAutofill","input","poleById","map","from","to","autoLen","toRad","dLat","dLon","preferAuto","inputs","it","setFile","mapping","setMapping","MAPPING_PRESETS","batchPreview","setBatchPreview","csvText","setCsvText","csvPolesText","setCsvPolesText","csvSpansText","setCsvSpansText","poleImportErrors","setPoleImportErrors","spanImportErrors","setSpanImportErrors","showConfig","setShowConfig","showAutoPreview","setShowAutoPreview","attrKeys","setAttrKeys","onImport","importGeospatialFile","parts","splitFeaturesByGeometry","pk","getAttributeKeys","lk","data","mapGeoJSONToAppData","update","prof","oldName","newName","choose","keywords","text","parsed","group","parsePolesCSV","parsePolesCSVValidated","downloadErrorsCSV","parseSpansCSV","parseSpansCSVValidated","parseExistingLinesCSV","MappingConfigModal","onChange","onSave","setName","setField","setLogoDataUrl","onFile","initialSection","downloadSampleCSV","sampleCSV","downloadSampleKML","sampleKML"],"ignoreList":[],"sources":["../../src/components/LazyProposedLineCalculator.jsx","../../src/hooks/useDebounce.js","../../src/components/ProposedLineCalculator.jsx"],"sourcesContent":["import React, { Suspense } from \"react\";\n\n// Lazy load the heavy ProposedLineCalculator component\nconst ProposedLineCalculator = React.lazy(\n  () => import(\"./ProposedLineCalculator\"),\n);\n\n// Loading fallback component\nfunction CalculatorLoading() {\n  return (\n    <div className=\"flex items-center justify-center p-8\">\n      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      <span className=\"ml-3 text-gray-600\">Loading calculator...</span>\n    </div>\n  );\n}\n\n// Wrapper component with Suspense that forwards all props\nexport default function LazyProposedLineCalculator(props) {\n  return (\n    <Suspense fallback={<CalculatorLoading />}>\n      <ProposedLineCalculator {...props} />\n    </Suspense>\n  );\n}\n","/**\n * useDebounce Hook\n * Debounces a value to reduce computation on rapid changes (e.g., text input)\n */\n\nimport { useState, useEffect, useCallback, useRef } from \"react\";\n\n/**\n * Debounces a value with configurable delay\n * @param {*} value - The value to debounce\n * @param {number} delay - Delay in milliseconds (default: 500ms)\n * @returns {*} - The debounced value\n */\nexport function useDebounce(value, delay = 500) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    // Set up the timeout to update debounced value\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Cleanup function to cancel the timeout if value changes\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\n/**\n * Debounces a callback function\n * @param {Function} callback - The function to debounce\n * @param {number} delay - Delay in milliseconds (default: 500ms)\n * @returns {Function} - The debounced function\n */\nexport function useDebouncedCallback(callback, delay = 500) {\n  const timeoutRef = useRef(null);\n  const callbackRef = useRef(callback);\n\n  // Update callback ref when callback changes\n  useEffect(() => {\n    callbackRef.current = callback;\n  }, [callback]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  const debouncedCallback = useCallback(\n    (...args) => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        callbackRef.current(...args);\n      }, delay);\n    },\n    [delay],\n  );\n\n  return debouncedCallback;\n}\n","// @ts-nocheck\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useAppStore from \"../utils/store\";\nimport { useShallow } from \"zustand/react/shallow\";\nimport {\n  DEFAULTS,\n  parseFeet,\n  formatFeetInches,\n  formatFeetInchesTickMarks,\n  formatFeetInchesVerbose,\n  resultsToCSV,\n  computeAnalysis,\n  computePullAutofill,\n} from \"../utils/calculations\";\nimport ExistingLinesEditor from \"./ExistingLinesEditor\";\nimport { WV_COMPANIES } from \"../utils/constants\";\nimport SpanDiagram from \"./SpanDiagram\";\nimport {\n  importGeospatialFile,\n  mapGeoJSONToAppData,\n  MAPPING_PRESETS,\n  parseExistingLinesCSV,\n  getAttributeKeys,\n  splitFeaturesByGeometry,\n  parsePolesCSV,\n  parseSpansCSV,\n  parsePolesCSVValidated,\n  parseSpansCSVValidated,\n} from \"../utils/importers\";\nimport { downloadErrorsCSV } from \"../utils/validationExport\";\nimport { buildManifest, csvFrom } from \"../utils/manifests\";\nimport { makePermitSummary } from \"../utils/permitSummary\";\nimport {\n  EXPORT_PRESETS,\n  buildPolesCSV,\n  buildSpansCSV,\n  buildExistingLinesCSV,\n  buildGeoJSON,\n  buildKML,\n  buildFirstEnergyJointUseCSV,\n} from \"../utils/exporters\";\nimport { validatePoleCoordinates } from \"../utils/gisValidation\";\nimport { useDebounce } from \"../hooks/useDebounce\";\n// Geodata utilities are imported dynamically in onPermit to keep geospatial libs lazy-loaded\nimport SpansEditor from \"./SpansEditor\";\n\nexport default function ProposedLineCalculator() {\n  const {\n    poleHeight,\n    poleClass,\n    setPoleHeight,\n    setPoleClass,\n    jobs,\n    currentJobId,\n    setCurrentJobId,\n    existingPowerHeight,\n    existingPowerVoltage,\n    setExistingPowerHeight,\n    setExistingPowerVoltage,\n    spanDistance,\n    isNewConstruction,\n    setIsNewConstruction,\n    adjacentPoleHeight,\n    attachmentType,\n    cableDiameter,\n    windSpeed,\n    spanEnvironment,\n    streetLightHeight,\n    dripLoopHeight,\n    proposedLineHeight,\n    existingLines,\n    iceThicknessIn,\n    hasTransformer,\n    setHasTransformer,\n    powerReference,\n    setPowerReference,\n    // setHasStreetlight,\n    setDripLoopHeight,\n    setStreetLightHeight,\n    setMakeReadyNotes,\n    setAnalysis,\n    setSpanDistance,\n    setAdjacentPoleHeight,\n    setAttachmentType,\n    setCableDiameter,\n    setWindSpeed,\n    setIceThicknessIn,\n    setSpanEnvironment,\n    setProposedLineHeight,\n    presetProfile,\n    setPresetProfile,\n    // scenarioA,\n    // setScenarioA,\n    // scenarioB,\n    // setScenarioB,\n    customMinTopSpace,\n    setCustomMinTopSpace,\n    customRoadClearance,\n    setCustomRoadClearance,\n    customCommToPower,\n    setCustomCommToPower,\n    useTickMarkFormat,\n    setUseTickMarkFormat,\n    projectName,\n    setProjectName,\n    applicantName,\n    setApplicantName,\n    jobNumber,\n    setJobNumber,\n    jobOwner,\n    setJobOwner,\n    submissionProfiles,\n    currentSubmissionProfile,\n    setCurrentSubmissionProfile,\n    poleLatitude,\n    setPoleLatitude,\n    poleLongitude,\n    setPoleLongitude,\n  } = useAppStore(\n    useShallow((s) => ({\n      poleHeight: s.poleHeight,\n      poleClass: s.poleClass,\n      setPoleHeight: s.setPoleHeight,\n      setPoleClass: s.setPoleClass,\n      jobs: s.jobs,\n      currentJobId: s.currentJobId,\n      setCurrentJobId: s.setCurrentJobId,\n      existingPowerHeight: s.existingPowerHeight,\n      existingPowerVoltage: s.existingPowerVoltage,\n      setExistingPowerHeight: s.setExistingPowerHeight,\n      setExistingPowerVoltage: s.setExistingPowerVoltage,\n      spanDistance: s.spanDistance,\n      isNewConstruction: s.isNewConstruction,\n      setIsNewConstruction: s.setIsNewConstruction,\n      adjacentPoleHeight: s.adjacentPoleHeight,\n      attachmentType: s.attachmentType,\n      cableDiameter: s.cableDiameter,\n      windSpeed: s.windSpeed,\n      spanEnvironment: s.spanEnvironment,\n      streetLightHeight: s.streetLightHeight,\n      dripLoopHeight: s.dripLoopHeight,\n      proposedLineHeight: s.proposedLineHeight,\n      existingLines: s.existingLines,\n      iceThicknessIn: s.iceThicknessIn,\n      hasTransformer: s.hasTransformer,\n      setHasTransformer: s.setHasTransformer,\n      powerReference: s.powerReference,\n      setPowerReference: s.setPowerReference,\n      setDripLoopHeight: s.setDripLoopHeight,\n      setStreetLightHeight: s.setStreetLightHeight,\n      setAnalysis: s.setAnalysis,\n      setMakeReadyNotes: s.setMakeReadyNotes,\n      // results-related setters are batched via setAnalysis\n      setSpanDistance: s.setSpanDistance,\n      setAdjacentPoleHeight: s.setAdjacentPoleHeight,\n      setAttachmentType: s.setAttachmentType,\n      setCableDiameter: s.setCableDiameter,\n      setWindSpeed: s.setWindSpeed,\n      setIceThicknessIn: s.setIceThicknessIn,\n      setSpanEnvironment: s.setSpanEnvironment,\n      setProposedLineHeight: s.setProposedLineHeight,\n      presetProfile: s.presetProfile,\n      setPresetProfile: s.setPresetProfile,\n      customMinTopSpace: s.customMinTopSpace,\n      setCustomMinTopSpace: s.setCustomMinTopSpace,\n      customRoadClearance: s.customRoadClearance,\n      setCustomRoadClearance: s.setCustomRoadClearance,\n      customCommToPower: s.customCommToPower,\n      setCustomCommToPower: s.setCustomCommToPower,\n      useTickMarkFormat: s.useTickMarkFormat,\n      setUseTickMarkFormat: s.setUseTickMarkFormat,\n      projectName: s.projectName,\n      setProjectName: s.setProjectName,\n      applicantName: s.applicantName,\n      setApplicantName: s.setApplicantName,\n      jobNumber: s.jobNumber,\n      setJobNumber: s.setJobNumber,\n      jobOwner: s.jobOwner,\n      setJobOwner: s.setJobOwner,\n      submissionProfiles: s.submissionProfiles,\n      currentSubmissionProfile: s.currentSubmissionProfile,\n      setCurrentSubmissionProfile: s.setCurrentSubmissionProfile,\n      poleLatitude: s.poleLatitude,\n      setPoleLatitude: s.setPoleLatitude,\n      poleLongitude: s.poleLongitude,\n      setPoleLongitude: s.setPoleLongitude,\n    })),\n  );\n  const [showReport, setShowReport] = React.useState(false);\n  const [showBatchReport, setShowBatchReport] = React.useState(false);\n  const [showHelp, setShowHelp] = React.useState(false);\n  const [helpSection, setHelpSection] = React.useState(null);\n  // Validation import states are managed within ImportPanel to avoid leaking scoped state here\n  // Scrollspy + collapsible sections state\n  const [activeSection, setActiveSection] = React.useState(\"job\");\n  const [openSections, setOpenSections] = React.useState(() => {\n    try {\n      const raw = localStorage.getItem(\"ppw:openSections\");\n      return raw\n        ? JSON.parse(raw)\n        : {\n            job: true,\n            map: true,\n            spans: true,\n            existing: true,\n            field: true,\n            results: true,\n          };\n    } catch {\n      return {\n        job: true,\n        map: true,\n        spans: true,\n        existing: true,\n        field: true,\n        results: true,\n      };\n    }\n  });\n  useEffect(() => {\n    try {\n      localStorage.setItem(\"ppw:openSections\", JSON.stringify(openSections));\n    } catch {\n      /* ignore storage errors */\n    }\n  }, [openSections]);\n  useEffect(() => {\n    const ids = [\"job\", \"map\", \"spans\", \"existing\", \"field\", \"results\"];\n    const els = ids.map((id) => document.getElementById(id)).filter(Boolean);\n    if (!els.length) return;\n    const obs = new IntersectionObserver(\n      (entries) => {\n        // pick the most visible entry near top\n        const visible = entries\n          .filter((entry) => entry.isIntersecting)\n          .sort((a, b) => a.boundingClientRect.top - b.boundingClientRect.top);\n        if (visible[0]?.target?.id) setActiveSection(visible[0].target.id);\n      },\n      { rootMargin: \"-40% 0px -55% 0px\", threshold: [0, 0.25, 0.5, 0.75, 1] },\n    );\n    els.forEach((el) => el && obs.observe(el));\n    return () => obs.disconnect();\n  }, [showReport, showBatchReport]);\n\n  // Make-ready notes & estimate\n  useEffect(() => {\n    const notes = existingLines\n      .filter((line) => line.makeReady && line.makeReadyHeight && line.height)\n      .map((line) => {\n        const fmt = (val) => formatFeetInches(parseFeet(val));\n        const heightDiffInches =\n          (parseFeet(line.makeReadyHeight) - parseFeet(line.height)) * 12;\n        const cost = Math.abs(Math.round(heightDiffInches)) * 12.5;\n        return `LWR (${line.companyName || line.type}) FROM ${fmt(line.height)} TO ${fmt(line.makeReadyHeight)} - Est. Cost: $${cost}`;\n      });\n    setMakeReadyNotes(notes.join(\"\\n\"));\n  }, [existingLines, setMakeReadyNotes]);\n\n  // Main calculation effect (now driven by pure computeAnalysis)\n  useEffect(() => {\n    // Prefer job-level submission profile/overrides if available\n    const activeJob = (useAppStore.getState().jobs || []).find(\n      (j) => j.id === useAppStore.getState().currentJobId,\n    );\n    const profileName =\n      activeJob?.submissionProfileName || currentSubmissionProfile;\n    const baseProfile = (submissionProfiles || []).find(\n      (p) => p.name === profileName,\n    );\n    const mergedProfile = baseProfile\n      ? {\n          ...baseProfile,\n          ...(activeJob?.submissionProfileOverrides || {}),\n        }\n      : undefined;\n    const { results, warnings, notes, cost, errors } = computeAnalysis({\n      poleHeight,\n      poleClass,\n      poleLatitude,\n      poleLongitude,\n      existingPowerHeight,\n      existingPowerVoltage,\n      spanDistance,\n      isNewConstruction,\n      adjacentPoleHeight,\n      attachmentType,\n      cableDiameter,\n      windSpeed,\n      spanEnvironment,\n      streetLightHeight,\n      dripLoopHeight,\n      proposedLineHeight,\n      existingLines,\n      iceThicknessIn,\n      hasTransformer,\n      presetProfile,\n      customMinTopSpace,\n      customRoadClearance,\n      customCommToPower,\n      powerReference,\n      jobOwner,\n      submissionProfile: mergedProfile,\n    });\n    if (errors) {\n      setAnalysis({ results: null, warnings: [], notes: [], cost: null });\n      return;\n    }\n    setAnalysis({ results, warnings, notes, cost });\n  }, [\n    poleHeight,\n    poleClass,\n    poleLatitude,\n    poleLongitude,\n    existingPowerHeight,\n    existingPowerVoltage,\n    spanDistance,\n    isNewConstruction,\n    adjacentPoleHeight,\n    attachmentType,\n    cableDiameter,\n    windSpeed,\n    spanEnvironment,\n    streetLightHeight,\n    dripLoopHeight,\n    proposedLineHeight,\n    existingLines,\n    iceThicknessIn,\n    hasTransformer,\n    presetProfile,\n    customMinTopSpace,\n    customRoadClearance,\n    customCommToPower,\n    powerReference,\n    jobOwner,\n    submissionProfiles,\n    currentSubmissionProfile,\n    setAnalysis,\n  ]);\n\n  // GIS Validation state with debouncing for better performance\n  const [coordinateValidation, setCoordinateValidation] = React.useState({\n    valid: true,\n    errors: [],\n    warnings: [],\n  });\n  const [isValidating, setIsValidating] = React.useState(false);\n\n  // Debounce coordinates to avoid validating on every keystroke (300ms delay)\n  const debouncedLatitude = useDebounce(poleLatitude, 300);\n  const debouncedLongitude = useDebounce(poleLongitude, 300);\n\n  // Validate coordinates whenever debounced values change\n  React.useEffect(() => {\n    if (debouncedLatitude || debouncedLongitude) {\n      setIsValidating(true);\n      const validation = validatePoleCoordinates({\n        id: \"current-pole\",\n        latitude: debouncedLatitude,\n        longitude: debouncedLongitude,\n      });\n      setCoordinateValidation(validation);\n      setIsValidating(false);\n    } else {\n      setCoordinateValidation({ valid: true, errors: [], warnings: [] });\n      setIsValidating(false);\n    }\n  }, [debouncedLatitude, debouncedLongitude]);\n\n  // Simple results panel + inputs\n  const useDeviceGPS = async () => {\n    if (!(\"geolocation\" in navigator)) {\n      alert(\"Geolocation is not supported by this browser.\");\n      return;\n    }\n    try {\n      const pos = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 10000,\n        });\n      });\n      const { latitude, longitude } = pos.coords || {};\n      if (latitude != null && longitude != null) {\n        setPoleLatitude(latitude.toFixed(6));\n        setPoleLongitude(longitude.toFixed(6));\n      }\n    } catch (e) {\n      alert(\n        `Failed to get location: ${e instanceof Error ? e.message : String(e)}`,\n      );\n    }\n  };\n\n  return (\n    <div className=\"p-3 md:p-4 space-y-4\">\n      {/* Workflow nav */}\n      <nav className=\"workflow-nav no-print\">\n        <div className=\"mx-auto max-w-6xl px-3 md:px-6 flex items-center gap-1 overflow-x-auto\">\n          {[\n            { id: \"job\", label: \"Job\" },\n            { id: \"map\", label: \"Import/Map\" },\n            { id: \"spans\", label: \"Spans\" },\n            { id: \"existing\", label: \"Existing Lines\" },\n            { id: \"field\", label: \"Field\" },\n            { id: \"results\", label: \"Results\" },\n          ].map((link, i, arr) => (\n            <React.Fragment key={link.id}>\n              <a\n                href={`#${link.id}`}\n                aria-current={activeSection === link.id ? \"step\" : undefined}\n                className={\n                  `px-2 py-1 rounded whitespace-nowrap ` +\n                  (activeSection === link.id\n                    ? \"bg-blue-50 text-blue-700 font-semibold\"\n                    : \"text-gray-700 hover:bg-gray-50\")\n                }\n              >\n                {link.label}\n              </a>\n              {i < arr.length - 1 ? (\n                <span className=\"text-gray-300\">•</span>\n              ) : null}\n            </React.Fragment>\n          ))}\n        </div>\n      </nav>\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-2\">\n          <h1 className=\"text-lg md:text-xl font-semibold\">PolePlan Pro</h1>\n          <span className=\"hidden sm:inline text-xs text-gray-600\">Job:</span>\n          <select\n            className=\"hidden sm:inline text-sm border rounded px-3 py-2 bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            value={currentJobId || \"\"}\n            onChange={(e) => setCurrentJobId(e.target.value)}\n          >\n            <option value=\"\">-- None --</option>\n            {(jobs || []).map((j) => (\n              <option key={j.id} value={j.id}>\n                {j.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"text-xs text-gray-600 hidden sm:block\">\n          Click{\" \"}\n          <button\n            className=\"text-blue-600 hover:text-blue-800 underline\"\n            onClick={() => setShowHelp(true)}\n          >\n            Here\n          </button>{\" \"}\n          for Use Directions\n        </div>\n      </div>\n      {/* Invisible anchor for #job and optional collapse */}\n      <div id=\"job\" className=\"anchor-offset\" />\n      {!showReport && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 no-print app-section\">\n          <div className=\"flex items-start justify-between md:col-span-2 xl:col-span-3\">\n            <div>\n              <div className=\"section-title\">Job Setup</div>\n              <div className=\"section-subtitle\">\n                Project info, GPS, design parameters, and profiles.\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <SectionSaveButton sectionKey=\"job\" align=\"right\" />\n              <button\n                type=\"button\"\n                className=\"ml-2 px-3 py-2 text-sm border rounded bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\"\n                onClick={() => setOpenSections((s) => ({ ...s, job: !s.job }))}\n                aria-expanded={!!openSections.job}\n              >\n                {openSections.job ? \"Collapse\" : \"Expand\"}\n              </button>\n            </div>\n          </div>\n          {!openSections.job ? null : (\n            <>\n              <SectionTips section=\"job\" />\n              <Input\n                label=\"Project Name\"\n                value={projectName}\n                onChange={(e) => setProjectName(e.target.value)}\n              />\n              <Input\n                label=\"Applicant\"\n                value={applicantName}\n                onChange={(e) => setApplicantName(e.target.value)}\n              />\n              <Input\n                label=\"Job #\"\n                value={jobNumber}\n                onChange={(e) => setJobNumber(e.target.value)}\n              />\n              <LogoUpload />\n              <div className=\"md:col-span-2 xl:col-span-3 grid grid-cols-1 lg:grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg border\">\n                <Input\n                  label=\"Pole Latitude\"\n                  value={poleLatitude}\n                  onChange={(e) => setPoleLatitude(e.target.value)}\n                  placeholder=\"e.g., 40.123456\"\n                />\n                <div className=\"grid grid-cols-[1fr_auto] gap-3 items-end\">\n                  <Input\n                    label=\"Pole Longitude\"\n                    value={poleLongitude}\n                    onChange={(e) => setPoleLongitude(e.target.value)}\n                    placeholder=\"e.g., -82.987654\"\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"h-11 px-4 border rounded text-sm bg-blue-50 hover:bg-blue-100 border-blue-300 text-blue-700 font-medium whitespace-nowrap\"\n                    onClick={useDeviceGPS}\n                    title=\"Use device GPS\"\n                  >\n                    Use GPS\n                  </button>\n                </div>\n                {/* GIS Validation Feedback */}\n                {(poleLatitude || poleLongitude) && (\n                  <div className=\"md:col-span-2\">\n                    {isValidating && (\n                      <div className=\"p-2 bg-blue-50 border border-blue-300 rounded text-sm\">\n                        <div className=\"font-medium text-blue-800 flex items-center gap-1\">\n                          <span className=\"animate-pulse\">🔄</span> Validating\n                          coordinates...\n                        </div>\n                      </div>\n                    )}\n                    {!isValidating &&\n                      !coordinateValidation.valid &&\n                      coordinateValidation.errors.length > 0 && (\n                        <div className=\"p-2 bg-red-50 border border-red-300 rounded text-sm\">\n                          <div className=\"font-medium text-red-800 flex items-center gap-1\">\n                            <span>❌</span> Invalid Coordinates\n                          </div>\n                          <ul className=\"mt-1 text-red-700 list-disc pl-5\">\n                            {coordinateValidation.errors.map((error, i) => (\n                              <li key={i}>{error}</li>\n                            ))}\n                          </ul>\n                        </div>\n                      )}\n                    {!isValidating &&\n                      coordinateValidation.valid &&\n                      coordinateValidation.warnings &&\n                      coordinateValidation.warnings.length > 0 && (\n                        <div className=\"p-2 bg-yellow-50 border border-yellow-300 rounded text-sm\">\n                          <div className=\"font-medium text-yellow-800 flex items-center gap-1\">\n                            <span>⚠️</span> Warning\n                          </div>\n                          <ul className=\"mt-1 text-yellow-700 list-disc pl-5\">\n                            {coordinateValidation.warnings.map((warning, i) => (\n                              <li key={i}>{warning}</li>\n                            ))}\n                          </ul>\n                        </div>\n                      )}\n                    {!isValidating &&\n                      coordinateValidation.valid &&\n                      (!coordinateValidation.warnings ||\n                        coordinateValidation.warnings.length === 0) && (\n                        <div className=\"p-2 bg-green-50 border border-green-300 rounded text-sm\">\n                          <div className=\"font-medium text-green-800 flex items-center gap-1\">\n                            <span>✅</span> Valid Coordinates\n                          </div>\n                          <div className=\"text-green-700 text-xs mt-1\">\n                            WGS84: {poleLatitude}, {poleLongitude}\n                          </div>\n                        </div>\n                      )}\n                  </div>\n                )}\n              </div>\n              <Select\n                label=\"Preset Profile\"\n                value={presetProfile}\n                onChange={(e) => setPresetProfile(e.target.value)}\n                options={[\n                  { label: \"None\", value: \"\" },\n                  ...Object.values(DEFAULTS.presets).map((p) => ({\n                    label: p.label,\n                    value: p.value,\n                  })),\n                ]}\n              />\n              <Select\n                label=\"Submission Profile\"\n                value={\n                  (useAppStore.getState().jobs || []).find(\n                    (j) => j.id === useAppStore.getState().currentJobId,\n                  )?.submissionProfileName || currentSubmissionProfile\n                }\n                onChange={(e) => {\n                  const job = (useAppStore.getState().jobs || []).find(\n                    (j) => j.id === useAppStore.getState().currentJobId,\n                  );\n                  if (job) {\n                    useAppStore.getState().updateJob(job.id, {\n                      submissionProfileName: e.target.value,\n                    });\n                  } else {\n                    setCurrentSubmissionProfile(e.target.value);\n                  }\n                }}\n                options={(submissionProfiles || []).map((p) => ({\n                  label: p.label,\n                  value: p.name,\n                }))}\n              />\n              {/* Quick profile tuning */}\n              <ProfileTuner />\n              <label className=\"text-sm text-gray-700 grid gap-2\">\n                <span className=\"font-medium whitespace-nowrap text-left\">\n                  Owner (utility)\n                </span>\n                <input\n                  list=\"wv-power-companies-inline\"\n                  className=\"border rounded px-3 py-2 min-w-0 w-full text-base leading-normal bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  value={jobOwner}\n                  onChange={(e) => setJobOwner(e.target.value)}\n                  placeholder=\"e.g., Mon Power, Penelec\"\n                />\n                <datalist id=\"wv-power-companies-inline\">\n                  {WV_COMPANIES.power.map((c) => (\n                    <option key={`p-${c.name}`} value={c.short || c.name}>\n                      {c.name}\n                    </option>\n                  ))}\n                </datalist>\n              </label>\n              <Input\n                label=\"Pole Height (ft)\"\n                value={poleHeight}\n                onChange={(e) => setPoleHeight(e.target.value)}\n              />\n              <Input\n                label=\"Pole Class\"\n                value={poleClass}\n                onChange={(e) => setPoleClass(e.target.value)}\n                placeholder=\"e.g., Class 4\"\n              />\n              <Select\n                label=\"Construction\"\n                value={isNewConstruction ? \"new\" : \"existing\"}\n                onChange={(e) => setIsNewConstruction(e.target.value === \"new\")}\n                options={[\n                  { label: \"New\", value: \"new\" },\n                  { label: \"Existing\", value: \"existing\" },\n                ]}\n              />\n              <Select\n                label=\"Power Voltage\"\n                value={existingPowerVoltage}\n                onChange={(e) => setExistingPowerVoltage(e.target.value)}\n                options={[\n                  { label: \"Distribution\", value: \"distribution\" },\n                  { label: \"Transmission\", value: \"transmission\" },\n                  { label: \"Communication\", value: \"communication\" },\n                ]}\n              />\n              <Input\n                label=\"Existing Power Height (ft/in)\"\n                value={existingPowerHeight}\n                onChange={(e) => setExistingPowerHeight(e.target.value)}\n              />\n              <Checkbox\n                label=\"Transformer present\"\n                checked={!!hasTransformer}\n                onChange={(e) => setHasTransformer(e.target.checked)}\n              />\n              <Input\n                label=\"Street Light Height (ft/in)\"\n                value={streetLightHeight}\n                onChange={(e) => setStreetLightHeight(e.target.value)}\n              />\n              <Input\n                label=\"Drip Loop Height (ft/in)\"\n                value={dripLoopHeight}\n                onChange={(e) => setDripLoopHeight(e.target.value)}\n              />\n              <Select\n                label=\"Power Reference\"\n                value={powerReference}\n                onChange={(e) => setPowerReference(e.target.value)}\n                options={[\n                  { label: \"Auto\", value: \"auto\" },\n                  { label: \"Neutral\", value: \"neutral\" },\n                  { label: \"Secondary\", value: \"secondary\" },\n                  { label: \"Drip Loop\", value: \"dripLoop\" },\n                  { label: \"Power Conductor\", value: \"power\" },\n                ]}\n              />\n              <Input\n                label=\"Span (ft)\"\n                value={spanDistance}\n                onChange={(e) => setSpanDistance(e.target.value)}\n              />\n              <Input\n                label=\"Adjacent Pole (ft)\"\n                value={adjacentPoleHeight}\n                onChange={(e) => setAdjacentPoleHeight(e.target.value)}\n              />\n              <Select\n                label=\"Cable\"\n                value={attachmentType}\n                onChange={(e) => setAttachmentType(e.target.value)}\n                options={DEFAULTS.cableTypes.map((c) => ({\n                  label: c.label,\n                  value: c.value,\n                }))}\n              />\n              <Input\n                label=\"Cable Diameter (in)\"\n                value={cableDiameter}\n                onChange={(e) => setCableDiameter(e.target.value)}\n                placeholder=\"auto from cable\"\n              />\n              <Input\n                label=\"Wind (mph)\"\n                value={windSpeed}\n                onChange={(e) => setWindSpeed(e.target.value)}\n              />\n              <Input\n                label=\"Ice (in)\"\n                value={iceThicknessIn}\n                onChange={(e) => setIceThicknessIn(e.target.value)}\n              />\n              <Select\n                label=\"Environment\"\n                value={spanEnvironment}\n                onChange={(e) => setSpanEnvironment(e.target.value)}\n                options={[\n                  { label: \"Road\", value: \"road\" },\n                  { label: \"Interstate\", value: \"interstate\" },\n                  {\n                    label: \"Interstate (New Crossing)\",\n                    value: \"interstateNewCrossing\",\n                  },\n                  { label: \"Residential\", value: \"residential\" },\n                  { label: \"Pedestrian\", value: \"pedestrian\" },\n                  { label: \"Field\", value: \"field\" },\n                  { label: \"Residential Yard\", value: \"residentialYard\" },\n                  {\n                    label: \"Residential Driveway\",\n                    value: \"residentialDriveway\",\n                  },\n                  {\n                    label: \"Non-Residential Driveway / Alley / Parking\",\n                    value: \"nonResidentialDriveway\",\n                  },\n                  { label: \"Waterway\", value: \"waterway\" },\n                  { label: \"WV Highway\", value: \"wvHighway\" },\n                  { label: \"PA Highway\", value: \"paHighway\" },\n                  { label: \"OH Highway\", value: \"ohHighway\" },\n                  { label: \"MD Highway\", value: \"mdHighway\" },\n                  { label: \"Railroad Crossing (CSX)\", value: \"railroad\" },\n                ]}\n              />\n              <Input\n                label=\"Proposed Line (ft/in)\"\n                value={proposedLineHeight}\n                onChange={(e) => setProposedLineHeight(e.target.value)}\n              />\n              <Input\n                label=\"Override Min Top Space (ft)\"\n                value={customMinTopSpace}\n                onChange={(e) => setCustomMinTopSpace(e.target.value)}\n                placeholder=\"optional\"\n              />\n              <Input\n                label=\"Override Road Clearance (ft)\"\n                value={customRoadClearance}\n                onChange={(e) => setCustomRoadClearance(e.target.value)}\n                placeholder=\"optional\"\n              />\n              <Input\n                label=\"Override Comm-Power (ft)\"\n                value={customCommToPower}\n                onChange={(e) => setCustomCommToPower(e.target.value)}\n                placeholder=\"optional\"\n              />\n              <Select\n                label=\"Display Format\"\n                value={useTickMarkFormat ? \"ticks\" : \"verbose\"}\n                onChange={(e) =>\n                  setUseTickMarkFormat(e.target.value === \"ticks\")\n                }\n                options={[\n                  { label: \"Verbose (15ft 6in)\", value: \"verbose\" },\n                  { label: \"Tick Marks (15' 6\\\")\", value: \"ticks\" },\n                ]}\n              />\n            </>\n          )}\n          {openSections.job ? (\n            <SectionSaveButton sectionKey=\"job\" align=\"bottom\" />\n          ) : null}\n        </div>\n      )}\n\n      {!showReport && (\n        <>\n          <div id=\"map\" className=\"app-section anchor-offset\">\n            <div className=\"flex items-start justify-between\">\n              <div>\n                <div className=\"section-title\">Import & Mapping</div>\n                <div className=\"section-subtitle\">\n                  Load KML/KMZ/Shapefile or CSV, map attributes, and\n                  batch-apply.\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <SectionSaveButton sectionKey=\"map\" align=\"right\" />\n                <button\n                  type=\"button\"\n                  className=\"ml-2 px-2 py-1 text-xs border rounded\"\n                  onClick={() =>\n                    setOpenSections((s) => ({ ...s, map: !s.map }))\n                  }\n                  aria-expanded={!!openSections.map}\n                >\n                  {openSections.map ? \"Collapse\" : \"Expand\"}\n                </button>\n              </div>\n            </div>\n            {openSections.map ? <ImportPanel /> : null}\n            {openSections.map ? <SectionTips section=\"map\" /> : null}\n            {openSections.map ? (\n              <SectionSaveButton sectionKey=\"map\" align=\"bottom\" />\n            ) : null}\n          </div>\n          <div id=\"spans\" className=\"app-section anchor-offset\">\n            <div className=\"flex items-start justify-between\">\n              <div>\n                <div className=\"section-title\">Spans</div>\n                <div className=\"section-subtitle\">\n                  Per‑span environment, auto/manual length, and quick\n                  calculations.\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <SectionSaveButton sectionKey=\"spans\" align=\"right\" />\n                <button\n                  type=\"button\"\n                  className=\"ml-2 px-2 py-1 text-xs border rounded\"\n                  onClick={() =>\n                    setOpenSections((s) => ({ ...s, spans: !s.spans }))\n                  }\n                  aria-expanded={!!openSections.spans}\n                >\n                  {openSections.spans ? \"Collapse\" : \"Expand\"}\n                </button>\n              </div>\n            </div>\n            {openSections.spans ? <SpansEditor /> : null}\n            {openSections.spans ? <SectionTips section=\"spans\" /> : null}\n            {openSections.spans ? (\n              <SectionSaveButton sectionKey=\"spans\" align=\"bottom\" />\n            ) : null}\n          </div>\n          <div id=\"existing\" className=\"app-section anchor-offset\">\n            <div className=\"flex items-start justify-between\">\n              <div>\n                <div className=\"section-title\">Existing Lines</div>\n                <div className=\"section-subtitle\">\n                  Track existing attachments and make‑ready.\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <SectionSaveButton sectionKey=\"existing\" align=\"right\" />\n                <button\n                  type=\"button\"\n                  className=\"ml-2 px-2 py-1 text-xs border rounded\"\n                  onClick={() =>\n                    setOpenSections((s) => ({ ...s, existing: !s.existing }))\n                  }\n                  aria-expanded={!!openSections.existing}\n                >\n                  {openSections.existing ? \"Collapse\" : \"Expand\"}\n                </button>\n              </div>\n            </div>\n            {openSections.existing ? <ExistingLinesEditor /> : null}\n            {openSections.existing ? <SectionTips section=\"existing\" /> : null}\n            {openSections.existing ? (\n              <SectionSaveButton sectionKey=\"existing\" align=\"bottom\" />\n            ) : null}\n          </div>\n          <div id=\"field\" className=\"app-section anchor-offset\">\n            <div className=\"flex items-start justify-between\">\n              <div>\n                <div className=\"section-title\">Field Collection</div>\n                <div className=\"section-subtitle\">\n                  Mobile capture with GPS, photos, and Draft/Done workflow.\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <FieldActionsCompact />\n                <SectionSaveButton sectionKey=\"field\" align=\"right\" />\n                <button\n                  type=\"button\"\n                  className=\"ml-2 px-2 py-1 text-xs border rounded\"\n                  onClick={() =>\n                    setOpenSections((s) => ({ ...s, field: !s.field }))\n                  }\n                  aria-expanded={!!openSections.field}\n                >\n                  {openSections.field ? \"Collapse\" : \"Expand\"}\n                </button>\n              </div>\n            </div>\n            {openSections.field ? (\n              <FieldCollection\n                openHelp={(section) => {\n                  setHelpSection(section);\n                  setShowHelp(true);\n                }}\n                showBottomActions={false}\n              />\n            ) : null}\n            {openSections.field ? <SectionTips section=\"field\" /> : null}\n            {openSections.field ? (\n              <SectionSaveButton sectionKey=\"field\" align=\"bottom\" />\n            ) : null}\n          </div>\n        </>\n      )}\n\n      <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 no-print\">\n        <ScenarioButtons />\n        <ExportButtons />\n        <button\n          className=\"px-2 py-1 border rounded text-sm\"\n          onClick={() => {\n            setShowBatchReport(false);\n            setShowReport((r) => !r);\n          }}\n          disabled={!showReport && !useAppStore.getState().results}\n          title={\n            !showReport && !useAppStore.getState().results\n              ? \"Run analysis to view report\"\n              : undefined\n          }\n        >\n          {showReport ? \"Back to Editor\" : \"View Report\"}\n        </button>\n        <button\n          className=\"px-2 py-1 border rounded text-sm\"\n          onClick={() => {\n            setShowReport(false);\n            setShowBatchReport((b) => !b);\n          }}\n          disabled={!useAppStore.getState().importedSpans.length}\n        >\n          {showBatchReport ? \"Back to Editor\" : \"Batch Report\"}\n        </button>\n      </div>\n\n      <div id=\"results\" className=\"app-section anchor-offset\">\n        <div className=\"flex items-start justify-between\">\n          <div>\n            <div className=\"section-title\">Results</div>\n            <div className=\"section-subtitle\">\n              Summary outputs, reports, and exports.\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <SectionSaveButton sectionKey=\"results\" align=\"right\" />\n            <button\n              type=\"button\"\n              className=\"ml-2 px-2 py-1 text-xs border rounded\"\n              onClick={() =>\n                setOpenSections((s) => ({ ...s, results: !s.results }))\n              }\n              aria-expanded={!!openSections.results}\n            >\n              {openSections.results ? \"Collapse\" : \"Expand\"}\n            </button>\n          </div>\n        </div>\n        {openSections.results ? (\n          <InlineResultsErrorBoundary>\n            {showReport ? (\n              <PrintableReport />\n            ) : showBatchReport ? (\n              <BatchReport />\n            ) : (\n              <ResultsPanel />\n            )}\n          </InlineResultsErrorBoundary>\n        ) : null}\n        {openSections.results ? <SectionTips section=\"results\" /> : null}\n        {openSections.results ? (\n          <SectionSaveButton sectionKey=\"results\" align=\"bottom\" />\n        ) : null}\n      </div>\n      <AgencyTemplatesPanel />\n      <FormAutofillPanel />\n\n      <HelpModal\n        open={showHelp}\n        onClose={() => setShowHelp(false)}\n        initialSection={helpSection}\n      />\n    </div>\n  );\n}\n\nclass InlineResultsErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, info) {\n    // Keep this local to avoid noisy console unless something actually breaks\n    console.error(\"Results render error:\", error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"border border-red-300 bg-red-50 text-red-800 rounded p-2\">\n          <div className=\"font-medium\">Results couldn’t render.</div>\n          <div className=\"text-xs break-anywhere\">\n            {String(this.state.error)}\n          </div>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\n// Reusable inline tips for each section\nfunction SectionTips({ section }) {\n  const content = React.useMemo(() => {\n    switch (section) {\n      case \"job\":\n        return [\n          \"Set Owner to Mon Power when using FirstEnergy presets; this drives FE-specific targets.\",\n          \"Use the GPS button in Job Setup for accurate coordinates; each Field row can also capture GPS.\",\n          \"Submission Profile controls clearances (Comm→Power, Road, Min Top Space) and midspan targets.\",\n          \"Power Reference selects which power point is used (Neutral/Secondary/Drip Loop/Conductor).\",\n          \"Override fields are optional and apply on top of the active submission profile.\",\n          \"Switch Display Format to Tick Marks for 15' 6\\\" style readouts in Results.\",\n        ];\n      case \"map\":\n        return [\n          \"Imports support CSV, KML/KMZ, and Shapefiles; use presets for ArcGIS, ikeGPS, and Katapult Pro.\",\n          \"Prefer auto span length from coordinates when endpoints are present; manual is respected when set.\",\n          \"Use Auto-map to preview and apply field mappings; review differences before applying.\",\n        ];\n      case \"spans\":\n        return [\n          \"Set environment per span to drive midspan clearance targets (road, residential, pedestrian, etc.).\",\n          \"Prefer auto length from endpoints (Haversine). You can override with a manual length if needed.\",\n          \"Use Compute/Recompute to refresh cached midspans; map links open in a new tab for quick checks.\",\n        ];\n      case \"existing\":\n        return [\n          \"Capture existing attachments and propose make-ready heights. Cost is estimated at ~$12.50 per inch.\",\n          \"Use clear company names (e.g., Comcast) to improve make-ready summaries in the Results and Report.\",\n        ];\n      case \"field\":\n        return [\n          \"One row per pole. Use GPS per row and attach a photo; EXIF GPS and timestamp are read when available.\",\n          \"Use Draft/Done to track status. “First 25” export aligns to typical FE SPANS limits.\",\n          \"Variance PASS/FAIL compares as-built vs planned attach using the active preset tolerance.\",\n          \"Scope is per Job. Set the current job at the top; exports include job profile metadata.\",\n          \"As a PWA, the app works offline. Sync by exporting CSV/ZIP when connectivity is available.\",\n        ];\n      case \"results\":\n        return [\n          \"Standards Compliance shows PASS/FAIL for midspan ground clearance and Comm→Power separation.\",\n          \"The “Basis” explains what controlled the recommended attach height in this scenario.\",\n          \"Switch display format (Verbose vs Tick Marks) in Job Setup to change readouts.\",\n          \"Use Export CSV/PDF or generate a Permit Pack for WV/PA/OH/MD Highway or Railroad.\",\n        ];\n      default:\n        return [];\n    }\n  }, [section]);\n\n  if (!content.length) return null;\n  return (\n    <details className=\"mt-2 mb-1\">\n      <summary className=\"cursor-pointer text-xs font-medium text-blue-800\">\n        Tips\n      </summary>\n      <ul className=\"mt-1 text-xs text-blue-900 bg-blue-50 border border-blue-200 rounded p-2 list-disc pl-5\">\n        {content.map((t, i) => (\n          <li key={i} className=\"mb-0.5\">\n            {t}\n          </li>\n        ))}\n      </ul>\n    </details>\n  );\n}\n\n// Add PropTypes validations\nSectionTips.propTypes = {\n  section: PropTypes.string.isRequired,\n};\n\nfunction SectionSaveButton({ sectionKey, align }) {\n  const store = useAppStore();\n  const ts = store.uiSectionSaved?.[sectionKey];\n  const label = ts ? `Saved ${new Date(ts).toLocaleTimeString()}` : \"Save\";\n  return (\n    <div\n      className={\n        align === \"bottom\" ? \"mt-2 flex items-center gap-2 justify-end\" : \"\"\n      }\n    >\n      <button\n        type=\"button\"\n        className=\"px-2 py-1 text-xs border rounded\"\n        onClick={() => store.setSectionSaved?.(sectionKey)}\n        title={\n          ts\n            ? `Last saved: ${new Date(ts).toLocaleString()}`\n            : \"Save section state\"\n        }\n      >\n        {label}\n      </button>\n    </div>\n  );\n}\n\nSectionSaveButton.propTypes = {\n  sectionKey: PropTypes.string.isRequired,\n  align: PropTypes.string,\n};\n\nfunction FieldActionsCompact() {\n  // A compact action bar for Field Collection placed in the section header\n  const store = useAppStore();\n  const [includePhotos, setIncludePhotos] = React.useState(true);\n  const exportGeo = async (type) => {\n    const { buildGeoJSON, exportGeoJSON, exportKML, exportKMZ } = await import(\n      \"../utils/geodata\"\n    );\n    const job =\n      (store.jobs || []).find((j) => j.id === store.currentJobId) || {};\n    const jobPoles = (store.collectedPoles || []).filter(\n      (p) => !store.currentJobId || p.jobId === store.currentJobId,\n    );\n    const importedPoles = store.importedPoles || [];\n    const byId = new Map();\n    for (const p of importedPoles) if (p?.id) byId.set(String(p.id), p);\n    for (const p of jobPoles) if (p?.id) byId.set(String(p.id), p);\n    const poles = jobPoles.length\n      ? Array.from(\n          new Set([\n            ...jobPoles,\n            ...importedPoles.filter(\n              (ip) =>\n                ip &&\n                ip.id &&\n                !jobPoles.find((jp) => String(jp.id) === String(ip.id)),\n            ),\n          ]),\n        )\n      : importedPoles;\n    let spans = [];\n    if ((store.importedSpans || []).length) {\n      spans = (store.importedSpans || []).map((s, idx) => ({\n        id: s.id || `S${idx + 1}`,\n        fromId: s.fromId,\n        toId: s.toId,\n        length: s.length,\n        proposedAttach: s.proposedAttach,\n        environment: s.environment,\n      }));\n    }\n    const fc = buildGeoJSON({ poles, spans, job });\n    if (!fc.features.length)\n      return alert(\"No geolocated poles/spans to export\");\n    if (type === \"geojson\")\n      return exportGeoJSON(fc, `${job.name || \"job\"}-geodata.geojson`);\n    if (type === \"kml\")\n      return exportKML(fc, `${job.name || \"job\"}-geodata.kml`);\n    if (type === \"kmz\")\n      return exportKMZ(fc, `${job.name || \"job\"}-geodata.kmz`);\n  };\n  const exportCollected = () => {\n    const activeJob = (store.jobs || []).find(\n      (j) => j.id === store.currentJobId,\n    );\n    const header = [\n      \"id\",\n      \"latitude\",\n      \"longitude\",\n      \"height\",\n      \"class\",\n      \"powerHeight\",\n      \"voltage\",\n      \"hasTransformer\",\n      \"spanDistance\",\n      \"incomingBearingDeg\",\n      \"outgoingBearingDeg\",\n      \"PULL_ft\",\n      \"adjacentPoleHeight\",\n      \"attachmentType\",\n      \"status\",\n      \"hasPhoto\",\n      \"timestamp\",\n      \"asBuiltAttachHeight\",\n      \"asBuiltPowerHeight\",\n      \"varianceIn\",\n      \"variancePass\",\n      \"commCompany\",\n    ];\n    const rows = (store.collectedPoles || [])\n      .filter((p) => !store.currentJobId || p.jobId === store.currentJobId)\n      .map((p) => [\n        p.id || \"\",\n        p.latitude || \"\",\n        p.longitude || \"\",\n        p.height || \"\",\n        p.poleClass || \"\",\n        p.powerHeight || \"\",\n        p.voltage || \"\",\n        p.hasTransformer ? \"Y\" : \"N\",\n        p.spanDistance || \"\",\n        p.incomingBearingDeg ?? \"\",\n        p.outgoingBearingDeg ?? \"\",\n        p.PULL_ft ?? \"\",\n        p.adjacentPoleHeight || \"\",\n        p.attachmentType || \"\",\n        p.status || \"draft\",\n        p.photoDataUrl ? \"Y\" : \"N\",\n        p.timestamp || \"\",\n        p.asBuilt?.attachHeight || \"\",\n        p.asBuilt?.powerHeight || \"\",\n        computeVarianceIn(p.asBuilt?.attachHeight, p.height),\n        evaluateVariancePass(\n          p.asBuilt?.attachHeight,\n          p.height,\n          store.presetProfile,\n        ),\n        activeJob?.commCompany || \"\",\n      ]);\n    const csv = [\n      header.join(\",\"),\n      ...rows.map((r) =>\n        r.map((v) => `${String(v).replaceAll('\"', '\"\"')}`).join(\",\"),\n      ),\n    ].join(\"\\n\");\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"collected-poles.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const exportFirst25 = () => {\n    const subset = (store.collectedPoles || [])\n      .filter((p) => !store.currentJobId || p.jobId === store.currentJobId)\n      .slice(0, 25);\n    const header = [\n      \"id\",\n      \"latitude\",\n      \"longitude\",\n      \"height\",\n      \"class\",\n      \"powerHeight\",\n      \"voltage\",\n      \"hasTransformer\",\n      \"spanDistance\",\n      \"incomingBearingDeg\",\n      \"outgoingBearingDeg\",\n      \"PULL_ft\",\n      \"adjacentPoleHeight\",\n      \"attachmentType\",\n      \"status\",\n      \"hasPhoto\",\n      \"timestamp\",\n      \"asBuiltAttachHeight\",\n      \"asBuiltPowerHeight\",\n      \"varianceIn\",\n      \"variancePass\",\n    ];\n    const rows = subset.map((p) => [\n      p.id || \"\",\n      p.latitude || \"\",\n      p.longitude || \"\",\n      p.height || \"\",\n      p.poleClass || \"\",\n      p.powerHeight || \"\",\n      p.voltage || \"\",\n      p.hasTransformer ? \"Y\" : \"N\",\n      p.spanDistance || \"\",\n      p.incomingBearingDeg ?? \"\",\n      p.outgoingBearingDeg ?? \"\",\n      p.PULL_ft ?? \"\",\n      p.adjacentPoleHeight || \"\",\n      p.attachmentType || \"\",\n      p.status || \"draft\",\n      p.photoDataUrl ? \"Y\" : \"N\",\n      p.timestamp || \"\",\n      p.asBuilt?.attachHeight || \"\",\n      p.asBuilt?.powerHeight || \"\",\n      computeVarianceIn(p.asBuilt?.attachHeight, p.height),\n      evaluateVariancePass(\n        p.asBuilt?.attachHeight,\n        p.height,\n        store.presetProfile,\n      ),\n    ]);\n    const csv = [\n      header.join(\",\"),\n      ...rows.map((r) =>\n        r.map((v) => `${String(v).replaceAll('\"', '\"\"')}`).join(\",\"),\n      ),\n    ].join(\"\\n\");\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"collected-poles-first-25.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const exportSpansZip = async () => {\n    try {\n      const JSZip = (await import(\"jszip\")).default;\n      const zip = new JSZip();\n      const polesAll = (store.collectedPoles || []).filter(\n        (p) => !store.currentJobId || p.jobId === store.currentJobId,\n      );\n      const activeJob = (store.jobs || []).find(\n        (j) => j.id === store.currentJobId,\n      );\n      const effectiveProfile = (() => {\n        const baseName =\n          activeJob?.submissionProfileName || store.currentSubmissionProfile;\n        const base =\n          (store.submissionProfiles || []).find((p) => p.name === baseName) ||\n          {};\n        return {\n          ...base,\n          ...(activeJob?.submissionProfileOverrides || {}),\n          name: base?.name,\n        };\n      })();\n      const poles = polesAll.map((p) => ({\n        ...p,\n        _varianceIn: computeVarianceIn(p.asBuilt?.attachHeight, p.height),\n        _variancePass: evaluateVariancePass(\n          p.asBuilt?.attachHeight,\n          p.height,\n          store.presetProfile,\n        ),\n      }));\n      const { header, rows } = buildManifest(\"firstEnergy\", poles, activeJob);\n      zip.file(\"manifest.csv\", csvFrom(header, rows));\n      zip.file(\n        \"job-profile.json\",\n        JSON.stringify(\n          {\n            jobId: activeJob?.id || \"\",\n            jobName: activeJob?.name || \"\",\n            owner: activeJob?.jobOwner || store.jobOwner || \"\",\n            commCompany: activeJob?.commCompany || \"\",\n            submissionProfile: effectiveProfile,\n            includePhotos,\n          },\n          null,\n          2,\n        ),\n      );\n      if (includePhotos) {\n        const photos = zip.folder(\"photos\");\n        const index = [];\n        for (const p of poles) {\n          if (!p.photoDataUrl) continue;\n          const safeId = p.id\n            ? String(p.id).replaceAll(/[^A-Za-z0-9_-]/g, \"_\")\n            : `row-${index.length + 1}`;\n          const dataUrl = String(p.photoDataUrl);\n          const m = dataUrl.match(/^data:(.+);base64,(.*)$/);\n          const mime = m?.[1] || \"image/jpeg\";\n          const base64 = m?.[2] || dataUrl.split(\",\")[1];\n          const ext = mime.includes(\"png\")\n            ? \"png\"\n            : mime.includes(\"webp\")\n              ? \"webp\"\n              : \"jpg\";\n          const file = `${safeId}.${ext}`;\n          if (base64 && photos) {\n            photos.file(file, base64, { base64: true });\n            index.push(`${safeId},${file},${mime}`);\n          }\n        }\n        if (index.length && photos)\n          photos.file(\"index.csv\", [\"id,file,mime\", ...index].join(\"\\n\"));\n      }\n      const blob = await zip.generateAsync({ type: \"blob\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `fe-spans.zip`;\n      a.click();\n      URL.revokeObjectURL(url);\n    } catch (e) {\n      alert(`ZIP export failed: ${e?.message || e}`);\n    }\n  };\n  const exportByProfile = async () => {\n    const job = (store.jobs || []).find((j) => j.id === store.currentJobId);\n    const name = job?.submissionProfileName || store.currentSubmissionProfile;\n    if (name === \"firstEnergy\") return exportSpansZip();\n    if (name === \"aep\") return exportAepZipInternal();\n    if (name === \"duke\") {\n      const scoped = (store.collectedPoles || []).filter(\n        (p) => !store.currentJobId || p.jobId === store.currentJobId,\n      );\n      return exportRowsByProfileInternal(scoped, \"\");\n    }\n    return exportAepZipInternal();\n  };\n  const exportRowsByProfileInternal = async (subset, suffix) => {\n    const JSZip = (await import(\"jszip\")).default;\n    const zip = new JSZip();\n    const activeJob = (store.jobs || []).find(\n      (j) => j.id === store.currentJobId,\n    );\n    const name =\n      activeJob?.submissionProfileName || store.currentSubmissionProfile;\n    const effectiveProfile = (() => {\n      const base =\n        (store.submissionProfiles || []).find((p) => p.name === name) || {};\n      return {\n        ...base,\n        ...(activeJob?.submissionProfileOverrides || {}),\n        name: base?.name,\n      };\n    })();\n    const withVariance = subset.map((p) => ({\n      ...p,\n      _varianceIn: computeVarianceIn(p.asBuilt?.attachHeight, p.height),\n      _variancePass: evaluateVariancePass(\n        p.asBuilt?.attachHeight,\n        p.height,\n        store.presetProfile,\n      ),\n    }));\n    const { header, rows, fileLabel } = buildManifest(\n      name,\n      withVariance,\n      activeJob,\n    );\n    zip.file(\"manifest.csv\", csvFrom(header, rows));\n    zip.file(\n      \"job-profile.json\",\n      JSON.stringify(\n        {\n          jobId: activeJob?.id || \"\",\n          jobName: activeJob?.name || \"\",\n          owner: activeJob?.jobOwner || store.jobOwner || \"\",\n          commCompany: activeJob?.commCompany || \"\",\n          submissionProfile: effectiveProfile,\n          includePhotos,\n        },\n        null,\n        2,\n      ),\n    );\n    const blob = await zip.generateAsync({ type: \"blob\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `${fileLabel}${suffix || \"\"}.zip`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const exportAepZipInternal = async () => {\n    try {\n      const JSZip = (await import(\"jszip\")).default;\n      const zip = new JSZip();\n      const poles = (store.collectedPoles || []).filter(\n        (p) => !store.currentJobId || p.jobId === store.currentJobId,\n      );\n      const activeJob = (store.jobs || []).find(\n        (j) => j.id === store.currentJobId,\n      );\n      const effectiveProfile = (() => {\n        const baseName =\n          activeJob?.submissionProfileName || store.currentSubmissionProfile;\n        const base =\n          (store.submissionProfiles || []).find((p) => p.name === baseName) ||\n          {};\n        return {\n          ...base,\n          ...(activeJob?.submissionProfileOverrides || {}),\n          name: base?.name,\n        };\n      })();\n      const { header, rows, fileLabel } = buildManifest(\n        \"aep\",\n        poles,\n        activeJob,\n      );\n      zip.file(\"manifest.csv\", csvFrom(header, rows));\n      zip.file(\n        \"job-profile.json\",\n        JSON.stringify(\n          {\n            jobId: activeJob?.id || \"\",\n            jobName: activeJob?.name || \"\",\n            owner: activeJob?.jobOwner || store.jobOwner || \"\",\n            commCompany: activeJob?.commCompany || \"\",\n            submissionProfile: effectiveProfile,\n            includePhotos,\n          },\n          null,\n          2,\n        ),\n      );\n      const blob = await zip.generateAsync({ type: \"blob\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${fileLabel}.zip`;\n      a.click();\n      URL.revokeObjectURL(url);\n    } catch (e) {\n      alert(`ZIP export failed: ${e?.message || e}`);\n    }\n  };\n\n  return (\n    <div className=\"flex items-center gap-2 text-xs\">\n      <label\n        className=\"inline-flex items-center gap-1\"\n        title=\"Include photos when available in ZIP exports\"\n      >\n        <input\n          type=\"checkbox\"\n          checked={includePhotos}\n          onChange={(e) => setIncludePhotos(e.target.checked)}\n        />\n        Photos\n      </label>\n      <button\n        className=\"px-2 py-1 border rounded\"\n        onClick={exportCollected}\n        disabled={!store.collectedPoles?.length}\n      >\n        Export CSV\n      </button>\n      <button\n        className=\"px-2 py-1 border rounded\"\n        onClick={exportFirst25}\n        disabled={(store.collectedPoles?.length || 0) < 1}\n      >\n        First 25\n      </button>\n      <button\n        className=\"px-2 py-1 border rounded\"\n        onClick={exportSpansZip}\n        disabled={(store.collectedPoles?.length || 0) < 1}\n      >\n        FE SPANS\n      </button>\n      <button\n        className=\"px-2 py-1 border rounded\"\n        onClick={exportByProfile}\n        disabled={(store.collectedPoles?.length || 0) < 1}\n      >\n        Utility ZIP\n      </button>\n      <div className=\"flex items-center gap-1\">\n        <span>Geo:</span>\n        <button\n          className=\"px-2 py-1 border rounded\"\n          onClick={() => exportGeo(\"geojson\")}\n          disabled={(store.collectedPoles?.length || 0) < 1}\n        >\n          GeoJSON\n        </button>\n        <button\n          className=\"px-2 py-1 border rounded\"\n          onClick={() => exportGeo(\"kml\")}\n          disabled={(store.collectedPoles?.length || 0) < 1}\n        >\n          KML\n        </button>\n        <button\n          className=\"px-2 py-1 border rounded\"\n          onClick={() => exportGeo(\"kmz\")}\n          disabled={(store.collectedPoles?.length || 0) < 1}\n        >\n          KMZ\n        </button>\n      </div>\n      <button\n        className=\"px-2 py-1 border rounded\"\n        onClick={() => store.setCollectedPoles?.([])}\n        disabled={!store.collectedPoles?.length}\n      >\n        Clear\n      </button>\n    </div>\n  );\n}\n// --- As-built variance helpers (FirstEnergy/Mon Power defaults) ---\nfunction getAttachToleranceIn(presetProfile) {\n  const p = DEFAULTS.presets[presetProfile];\n  return p?.asBuiltTolerances?.attachHeightIn ?? 2; // default 2 inches\n}\nfunction computeVarianceIn(asBuiltAttach, plannedAttach) {\n  const a = parseFeet(asBuiltAttach);\n  const p = parseFeet(plannedAttach);\n  if (a == null || p == null) return \"\";\n  const deltaIn = Math.round((a - p) * 12);\n  return String(deltaIn);\n}\nfunction evaluateVariancePass(asBuiltAttach, plannedAttach, presetProfile) {\n  const a = parseFeet(asBuiltAttach);\n  const p = parseFeet(plannedAttach);\n  if (a == null || p == null) return \"\";\n  const tol = getAttachToleranceIn(presetProfile);\n  const deltaAbs = Math.abs((a - p) * 12);\n  return deltaAbs <= tol ? \"PASS\" : \"FAIL\";\n}\n\nfunction AutoMapPreviewModal({ open, onClose, current, proposal, onApply }) {\n  if (!open || !proposal) return null;\n  const groups = [\"pole\", \"span\", \"line\"];\n  const diff = (a, b) => (a === b ? \"text-gray-600\" : \"text-blue-700\");\n  return (\n    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded shadow-lg w-[90vw] max-w-2xl p-4\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <div className=\"font-medium\">Auto-map Preview</div>\n          <button className=\"text-sm\" onClick={onClose}>\n            Close\n          </button>\n        </div>\n        <div className=\"text-xs text-gray-600 mb-3\">\n          Review proposed field mappings and click Apply to use them.\n        </div>\n        <div className=\"grid md:grid-cols-3 gap-3 text-sm\">\n          {groups.map((g) => (\n            <div key={g} className=\"border rounded p-2\">\n              <div className=\"font-medium mb-1\">{g}</div>\n              {Object.entries(proposal[g] || {}).map(([k, v]) => (\n                <div key={k} className=\"grid gap-0.5 mb-1\">\n                  <div className=\"text-xs uppercase text-gray-500\">{k}</div>\n                  <div className=\"text-xs text-gray-600\">\n                    Current:{\" \"}\n                    <span className=\"font-mono\">{current[g]?.[k] || \"\"}</span>\n                  </div>\n                  <div className={`text-xs ${diff(current[g]?.[k], v)}`}>\n                    Proposed: <span className=\"font-mono\">{v}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n        <div className=\"flex items-center gap-2 mt-3\">\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={onApply}\n          >\n            Apply\n          </button>\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={onClose}\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nAutoMapPreviewModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  current: PropTypes.object,\n  proposal: PropTypes.object,\n  onApply: PropTypes.func.isRequired,\n};\n\nfunction Input({ label, ...props }) {\n  return (\n    <label className=\"text-sm text-gray-700 grid gap-2\">\n      <span className=\"font-medium whitespace-nowrap text-left\">{label}</span>\n      <input\n        className=\"border rounded px-3 py-2 min-w-0 w-full text-base leading-normal bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n        {...props}\n      />\n    </label>\n  );\n}\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n\nfunction Select({ label, options, ...props }) {\n  return (\n    <label className=\"text-sm text-gray-700 grid gap-2\">\n      <span className=\"font-medium whitespace-nowrap text-left\">{label}</span>\n      <select\n        className=\"border rounded px-3 py-2 min-w-0 w-full text-base leading-normal bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n        {...props}\n      >\n        {options.map((o) => (\n          <option key={o.value} value={o.value}>\n            {o.label}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n\nSelect.propTypes = {\n  label: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nfunction Checkbox({ label, ...props }) {\n  return (\n    <label className=\"text-sm text-gray-700 inline-flex items-center gap-3 mt-6 cursor-pointer\">\n      <input\n        type=\"checkbox\"\n        className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500 focus:ring-2\"\n        {...props}\n      />\n      <span className=\"font-medium select-none\">{label}</span>\n    </label>\n  );\n}\n\nCheckbox.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n\nfunction ProfileTuner() {\n  const store = useAppStore();\n  const {\n    submissionProfiles,\n    currentSubmissionProfile,\n    updateSubmissionProfile,\n  } = store;\n  const activeJob = (store.jobs || []).find((j) => j.id === store.currentJobId);\n  const baseProfileName =\n    activeJob?.submissionProfileName || currentSubmissionProfile;\n  const base = (submissionProfiles || []).find(\n    (x) => x.name === baseProfileName,\n  );\n  if (!base) return null;\n  const effective = {\n    ...base,\n    ...(activeJob?.submissionProfileOverrides || {}),\n  };\n\n  const onChangeGlobal = (key, val) => {\n    const num = Number(val);\n    if (!Number.isFinite(num)) return;\n    updateSubmissionProfile(base.name, { [key]: num });\n  };\n  const onChangeJob = (key, val) => {\n    const num = Number(val);\n    if (!Number.isFinite(num)) return;\n    store.updateJob(activeJob.id, {\n      submissionProfileOverrides: {\n        ...(activeJob.submissionProfileOverrides || {}),\n        [key]: num,\n      },\n    });\n  };\n  const onResetJobOverrides = () => {\n    if (!activeJob) return;\n    store.updateJob(activeJob.id, { submissionProfileOverrides: {} });\n  };\n\n  const Editor = ({ label, field, unit }) => (\n    <label className=\"text-sm text-gray-700 grid gap-2\">\n      <span className=\"font-medium whitespace-nowrap text-left\">{label}</span>\n      <input\n        className=\"border rounded px-3 py-2 min-w-0 w-full text-base leading-normal bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n        value={effective[field] ?? \"\"}\n        onChange={(e) =>\n          activeJob\n            ? onChangeJob(field, e.target.value)\n            : onChangeGlobal(field, e.target.value)\n        }\n        placeholder={activeJob ? \"override (blank uses profile)\" : \"\"}\n      />\n      <span className=\"text-xs text-gray-500 -mt-1\">{unit}</span>\n    </label>\n  );\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n      <Editor label=\"Comm→Power\" field=\"commToPowerIn\" unit={\"in\"} />\n      <Editor label=\"Min Top Space\" field=\"minTopSpaceFt\" unit={\"ft\"} />\n      <Editor label=\"Road Clearance\" field=\"roadClearanceFt\" unit={\"ft\"} />\n      <Editor label=\"Road Midspan Target\" field=\"envRoadFt\" unit={\"ft\"} />\n      <Editor\n        label=\"Residential Midspan Target\"\n        field=\"envResidentialFt\"\n        unit={\"ft\"}\n      />\n      <Editor\n        label=\"Pedestrian Midspan Target\"\n        field=\"envPedestrianFt\"\n        unit={\"ft\"}\n      />\n      <Editor label=\"Field Midspan Target\" field=\"envFieldFt\" unit={\"ft\"} />\n      <Editor\n        label=\"Residential Yard Target\"\n        field=\"envResidentialYardFt\"\n        unit={\"ft\"}\n      />\n      <Editor\n        label=\"Residential Driveway Target\"\n        field=\"envResidentialDrivewayFt\"\n        unit={\"ft\"}\n      />\n      <Editor\n        label=\"Waterway Midspan Target\"\n        field=\"envWaterwayFt\"\n        unit={\"ft\"}\n      />\n      <Editor label=\"WV Highway Target\" field=\"envWVHighwayFt\" unit={\"ft\"} />\n      <Editor label=\"PA Highway Target\" field=\"envPAHighwayFt\" unit={\"ft\"} />\n      <Editor label=\"OH Highway Target\" field=\"envOHHighwayFt\" unit={\"ft\"} />\n      <Editor label=\"MD Highway Target\" field=\"envMDHighwayFt\" unit={\"ft\"} />\n      <Editor\n        label=\"Non-Residential Driveway Target\"\n        field=\"envNonResidentialDrivewayFt\"\n        unit={\"ft\"}\n      />\n      <Editor label=\"Interstate Target\" field=\"envInterstateFt\" unit={\"ft\"} />\n      <Editor\n        label=\"Interstate (New Crossing) Target\"\n        field=\"envInterstateNewCrossingFt\"\n        unit={\"ft\"}\n      />\n      <Editor\n        label=\"Railroad Crossing Target\"\n        field=\"envRailroadFt\"\n        unit={\"ft\"}\n      />\n      <Editor\n        label=\"Min Comm Attach Height\"\n        field=\"minCommAttachFt\"\n        unit={\"ft\"}\n      />\n      {activeJob ? (\n        <div className=\"md:col-span-2 xl:col-span-3 text-sm text-blue-700 bg-blue-100 p-3 rounded border border-blue-200\">\n          Using job-specific overrides.{\" \"}\n          <button\n            className=\"underline font-medium hover:no-underline\"\n            onClick={onResetJobOverrides}\n          >\n            Reset overrides\n          </button>\n        </div>\n      ) : (\n        <div className=\"md:col-span-2 xl:col-span-3 text-sm text-gray-600 bg-gray-100 p-3 rounded border\">\n          Editing global submission profile defaults.\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction ResultsPanel() {\n  const {\n    results,\n    warnings,\n    engineeringNotes,\n    costAnalysis,\n    makeReadyNotes,\n    useTickMarkFormat,\n  } = useAppStore();\n  if (!results)\n    return <div className=\"text-gray-600\">Enter inputs to see results.</div>;\n  const { clearances } = results;\n  const fmt = useTickMarkFormat\n    ? formatFeetInchesTickMarks\n    : formatFeetInchesVerbose;\n  return (\n    <div className=\"grid gap-4\">\n      <div className=\"rounded border p-3\">\n        <div className=\"font-medium mb-2\">Pole</div>\n        <div className=\"text-sm text-gray-700\">\n          <div>Height: {fmt(results.pole.inputHeight)}</div>\n          <div>Buried: {fmt(results.pole.buriedFt)}</div>\n          <div>Above ground: {fmt(results.pole.aboveGroundFt)}</div>\n          <div>Class: {results.pole.classInfo}</div>\n          {results.pole.latitude != null && results.pole.longitude != null ? (\n            <div>\n              GPS: {results.pole.latitude}, {results.pole.longitude}\n            </div>\n          ) : null}\n        </div>\n      </div>\n      <div className=\"section-divider\" />\n      <div className=\"rounded border p-3\">\n        <div className=\"font-medium mb-2\">Attachment & Span</div>\n        <div className=\"text-sm text-gray-700\">\n          <div>Proposed attach: {fmt(results.attach.proposedAttachFt)}</div>\n          {results.attach.recommendation ? (\n            <div className=\"text-xs text-gray-600\">\n              Basis: {results.attach.recommendation.basis} —{\" \"}\n              {results.attach.recommendation.detail}\n            </div>\n          ) : null}\n          <div>Span: {results.span.spanFt} ft</div>\n          <div>Wind: {results.span.wind} mph</div>\n          <div>Sag: {fmt(results.span.sagFt)}</div>\n          <div>Midspan: {fmt(results.span.midspanFt)}</div>\n          <div className=\"my-2\">\n            <SpanDiagram\n              attachFt={results.attach.proposedAttachFt}\n              midspanFt={results.span.midspanFt}\n              spanFt={results.span.spanFt}\n              groundTargetFt={results.clearances.groundClearance}\n            />\n          </div>\n          {results.guy ? (\n            <div className=\"mt-2\">\n              <div className=\"font-medium\">Guying</div>\n              <div>Required: {results.guy.required ? \"Yes\" : \"No\"}</div>\n              <div>Tension: {results.guy.tension?.toFixed(0)} lb</div>\n              <div>Angle: {results.guy.angle?.toFixed(0)}°</div>\n              <div>Lead: {results.guy.leadDistance?.toFixed(1)} ft</div>\n              <div>Guy attach height: {fmt(results.guy.guyHeight)}</div>\n              {results.guy.totalCost ? (\n                <div>Guy cost: ${results.guy.totalCost}</div>\n              ) : null}\n            </div>\n          ) : null}\n        </div>\n      </div>\n      <div className=\"section-divider\" />\n      <div className=\"rounded border p-3\">\n        <div className=\"font-medium mb-2\">Clearances (targets)</div>\n        <div className=\"text-sm text-gray-700 grid grid-cols-2 gap-x-4 gap-y-1\">\n          <div>Ground: {fmt(clearances.groundClearance)}</div>\n          <div>Road: {fmt(clearances.roadClearance)}</div>\n          <div>Min top space: {fmt(clearances.minimumPoleTopSpace)}</div>\n          {\"powerClearanceDistribution\" in clearances && (\n            <div>\n              Power (dist): {fmt(clearances.powerClearanceDistribution)}\n            </div>\n          )}\n          {\"powerClearanceTransmission\" in clearances && (\n            <div>\n              Power (trans): {fmt(clearances.powerClearanceTransmission)}\n            </div>\n          )}\n        </div>\n      </div>\n      <CompliancePanel />\n      {makeReadyNotes ? (\n        <div className=\"rounded border p-3\">\n          <div className=\"font-medium mb-2\">Make-ready</div>\n          <pre className=\"text-xs whitespace-pre-wrap text-gray-700\">\n            {makeReadyNotes}\n          </pre>\n          <div className=\"text-sm text-gray-700 mt-2\">\n            Make-ready total: ${results.makeReadyTotal ?? 0}\n          </div>\n        </div>\n      ) : null}\n      {warnings?.length ? (\n        <div className=\"rounded border border-yellow-300 bg-yellow-50 p-3\">\n          <div className=\"font-medium mb-2\">Warnings</div>\n          <ul className=\"list-disc pl-5 text-sm text-yellow-800\">\n            {warnings.map((w, i) => (\n              <li key={i}>{w}</li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n      {engineeringNotes?.length ? (\n        <div className=\"rounded border p-3\">\n          <div className=\"font-medium mb-2\">Notes</div>\n          <ul className=\"list-disc pl-5 text-sm text-gray-700\">\n            {engineeringNotes.map((n, i) => (\n              <li key={i}>{n}</li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n      <div className=\"text-sm text-gray-600\">\n        Estimated cost: ${costAnalysis ?? 0}\n      </div>\n    </div>\n  );\n}\n\nfunction AgencyTemplatesPanel() {\n  const store = useAppStore();\n  const [items, setItems] = React.useState(/** @type {any[]} */ ([]));\n  React.useEffect(() => {\n    (async () => {\n      try {\n        const { getTemplatesForEnvironment } = await import(\n          \"../utils/permitTemplates\"\n        );\n        const list = getTemplatesForEnvironment(store.spanEnvironment);\n        setItems(list || []);\n      } catch (e) {\n        // import.meta.env may not be declared in some TS configs; only log in dev when available\n        // @ts-ignore\n        if (import.meta?.env?.DEV) console.warn(\"Templates load failed\", e);\n      }\n    })();\n  }, [store.spanEnvironment]);\n  if (!items?.length) return null;\n  return (\n    <div className=\"rounded border p-3 no-print\">\n      <div className=\"font-medium mb-2\">Agency Templates & Resources</div>\n      <div className=\"text-xs text-gray-600 mb-2\">\n        Environment: {store.spanEnvironment}\n      </div>\n      <div className=\"grid md:grid-cols-2 gap-3 text-sm\">\n        {items.map((a) => (\n          <div key={a.key} className=\"border rounded p-2\">\n            <div className=\"font-medium mb-1\">{a.name}</div>\n            {a.resources?.length ? (\n              <ul className=\"list-disc pl-5\">\n                {a.resources.map((r, i) => (\n                  <li key={i} className=\"mb-1\">\n                    <a\n                      className=\"text-blue-700 underline\"\n                      href={r.url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      {r.label}\n                    </a>\n                    {r.notes ? (\n                      <div className=\"text-xs text-gray-600\">{r.notes}</div>\n                    ) : null}\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <div className=\"text-xs text-gray-500\">\n                No direct resources listed.\n              </div>\n            )}\n            {a.requirements?.length ? (\n              <div className=\"mt-2\">\n                <div className=\"text-xs uppercase text-gray-500\">\n                  Common Requirements\n                </div>\n                <ul className=\"list-disc pl-5 text-sm\">\n                  {a.requirements.map((q, i) => (\n                    <li key={i}>{q}</li>\n                  ))}\n                </ul>\n              </div>\n            ) : null}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction FormAutofillPanel() {\n  const store = useAppStore();\n  const [basePdf, setBasePdf] = React.useState(/** @type {File|null} */ (null));\n  const [layoutText, setLayoutText] = React.useState(\"\");\n  const [status, setStatus] = React.useState(\"\");\n  const [autoPreview, setAutoPreview] = React.useState(\"\");\n  const env = store.spanEnvironment;\n  const enabled = [\n    \"wvHighway\",\n    \"paHighway\",\n    \"ohHighway\",\n    \"mdHighway\",\n    \"railroad\",\n  ].includes(env);\n  const [fields, setFields] = React.useState({});\n  const [presetName, setPresetName] = React.useState(\"Default\");\n\n  // Build normalized fields from current analysis/summary\n  React.useEffect(() => {\n    (async () => {\n      if (!enabled || !store.results) {\n        setFields({});\n        return;\n      }\n      try {\n        const job = (useAppStore.getState().jobs || []).find(\n          (j) => j.id === useAppStore.getState().currentJobId,\n        );\n        const profileName =\n          job?.submissionProfileName ||\n          useAppStore.getState().currentSubmissionProfile;\n        const baseProfile =\n          (useAppStore.getState().submissionProfiles || []).find(\n            (p) => p.name === profileName,\n          ) || {};\n        const effectiveProfile = {\n          ...baseProfile,\n          ...(job?.submissionProfileOverrides || {}),\n          name: baseProfile?.name,\n        };\n        const summary = makePermitSummary({\n          env,\n          results: useAppStore.getState().results,\n          job,\n          effectiveProfile,\n          cachedMidspans: useAppStore.getState().cachedMidspans,\n          store: useAppStore.getState(),\n        });\n        const { buildMM109Fields, buildCSXFields, buildStateHighwayFields } =\n          await import(\"../utils/formFields\");\n        let f;\n        if (env === \"railroad\") f = buildCSXFields(summary);\n        else if (env === \"wvHighway\") f = buildMM109Fields(summary);\n        else if (env === \"paHighway\")\n          f = buildStateHighwayFields(summary, \"PennDOT\");\n        else if (env === \"ohHighway\")\n          f = buildStateHighwayFields(summary, \"ODOT\");\n        else if (env === \"mdHighway\")\n          f = buildStateHighwayFields(summary, \"MDOT SHA\");\n        else f = buildMM109Fields(summary);\n        setFields(f);\n        // Provide a small starter layout example for convenience\n        setLayoutText(\n          (prev) =>\n            prev ||\n            JSON.stringify(\n              [\n                { key: \"applicant\", pageIndex: 0, x: 100, y: 700, size: 10 },\n                { key: \"jobName\", pageIndex: 0, x: 100, y: 684, size: 10 },\n                { key: \"jobNumber\", pageIndex: 0, x: 100, y: 668, size: 10 },\n                { key: \"poleLatitude\", pageIndex: 0, x: 400, y: 700, size: 10 },\n                {\n                  key: \"poleLongitude\",\n                  pageIndex: 0,\n                  x: 400,\n                  y: 684,\n                  size: 10,\n                },\n              ],\n              null,\n              2,\n            ),\n        );\n      } catch (e) {\n        // Non-fatal: if field building fails, just clear fields\n        console.warn && console.warn(\"Form fields build failed\", e);\n        setFields({});\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [enabled, env]);\n\n  const onFill = async () => {\n    try {\n      setStatus(\"\");\n      if (!basePdf) {\n        setStatus(\"Select an official PDF to fill.\");\n        return;\n      }\n      if (!fields) {\n        setStatus(\"Run analysis and select a supported environment.\");\n        return;\n      }\n      let layout;\n      try {\n        layout = JSON.parse(layoutText || \"[]\");\n      } catch {\n        setStatus(\"Layout JSON is invalid.\");\n        return;\n      }\n      // runtime guard for environments/type-checkers: ensure the selected object exposes arrayBuffer()\n      if (typeof basePdf?.arrayBuffer !== \"function\") {\n        setStatus(\"Selected file is not a valid PDF Blob/File.\");\n        return;\n      }\n      // JSDoc cast to help type-checkers validate the call\n      const buf = new Uint8Array(\n        await /** @type {File} */ (basePdf).arrayBuffer(),\n      );\n      const { fillPdfWithFields } = await import(\"../utils/pdfFormFiller\");\n      const outBytes = await fillPdfWithFields(buf, fields, layout);\n      const blob = new Blob([/** @type {BlobPart} */ (outBytes)], {\n        type: \"application/pdf\",\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"filled-form.pdf\";\n      a.click();\n      URL.revokeObjectURL(url);\n      setStatus(\"Filled PDF downloaded.\");\n    } catch (e) {\n      setStatus(`Autofill failed: ${e?.message || e}`);\n    }\n  };\n\n  const presetsForEnv = React.useMemo(() => {\n    const jobId = store.currentJobId || \"_global\";\n    const all = store.pdfLayouts?.[jobId]?.[env] || {};\n    return Object.keys(all).sort();\n  }, [store.pdfLayouts, store.currentJobId, env]);\n\n  const onSavePreset = () => {\n    try {\n      const layout = JSON.parse(layoutText || \"[]\");\n      store.savePdfLayout(env, presetName || \"Default\", layout);\n      setStatus(`Saved preset \"${presetName || \"Default\"}\" for ${env}.`);\n    } catch {\n      setStatus(\"Layout JSON is invalid.\");\n    }\n  };\n  const onLoadPreset = (name) => {\n    const jobId = store.currentJobId || \"_global\";\n    const layout = store.pdfLayouts?.[jobId]?.[env]?.[name];\n    if (!layout) {\n      setStatus(\"Preset not found.\");\n      return;\n    }\n    setLayoutText(JSON.stringify(layout, null, 2));\n    setPresetName(name);\n    setStatus(`Loaded preset \"${name}\".`);\n  };\n  const onDeletePreset = (name) => {\n    store.removePdfLayout(env, name);\n    setStatus(`Deleted preset \"${name}\".`);\n  };\n\n  const onAutoLayout = async () => {\n    try {\n      setStatus(\"\");\n      setAutoPreview(\"\");\n      if (!basePdf) {\n        setStatus(\"Select an official PDF to analyze.\");\n        return;\n      }\n      const buf = new Uint8Array(await basePdf.arrayBuffer());\n      const { getPdfMeta, fillPdfAuto } = await import(\n        \"../utils/pdfFormFiller\"\n      );\n      const meta = await getPdfMeta(buf);\n      const pretty = `${meta.pages} page(s), first ${Math.round(meta.firstPage.width)}x${Math.round(meta.firstPage.height)}`;\n      setAutoPreview(\n        `Detected PDF: ${pretty}. Using default layout for ${env}.`,\n      );\n      if (!fields) {\n        setStatus(\"Run analysis first for normalized fields.\");\n        return;\n      }\n      const outBytes = await fillPdfAuto(buf, env, fields, undefined);\n      const blob = new Blob([/** @type {BlobPart} */ (outBytes)], {\n        type: \"application/pdf\",\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"filled-form-auto.pdf\";\n      a.click();\n      URL.revokeObjectURL(url);\n      setStatus(\"Auto-filled PDF downloaded.\");\n    } catch (e) {\n      setStatus(`Auto-layout failed: ${e?.message || e}`);\n    }\n  };\n\n  const onFillByForm = async () => {\n    try {\n      setStatus(\"\");\n      if (!basePdf) {\n        setStatus(\"Select an official PDF to fill.\");\n        return;\n      }\n      if (!fields) {\n        setStatus(\"Run analysis and select a supported environment.\");\n        return;\n      }\n      const buf = new Uint8Array(await basePdf.arrayBuffer());\n      const { fillAcroFormByName } = await import(\"../utils/pdfFormFiller\");\n      const outBytes = await fillAcroFormByName(buf, env, fields);\n      const blob = new Blob([/** @type {BlobPart} */ (outBytes)], {\n        type: \"application/pdf\",\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"filled-form-fields.pdf\";\n      a.click();\n      URL.revokeObjectURL(url);\n      setStatus(\"Filled PDF (form fields) downloaded.\");\n    } catch (e) {\n      setStatus(`Form fill failed: ${e?.message || e}`);\n    }\n  };\n\n  if (!enabled) return null;\n  return (\n    <div className=\"rounded border p-3 no-print\">\n      <div className=\"font-medium mb-2\">\n        Form Autofill (Upload Official PDF)\n      </div>\n      <div className=\"text-xs text-gray-600 mb-2\">\n        Use this helper to overlay your current job fields onto an official PDF\n        template. Provide a simple layout JSON mapping (key → page/x/y/size).\n        Start with the example and adjust coordinates to your form.\n      </div>\n      <div className=\"grid md:grid-cols-3 gap-2 items-end\">\n        <label className=\"text-sm text-gray-700 grid gap-1\">\n          <span className=\"font-medium\">Official PDF</span>\n          <input\n            type=\"file\"\n            accept=\"application/pdf\"\n            onChange={(e) => setBasePdf(e.target.files?.[0] || null)}\n          />\n        </label>\n        <div className=\"md:col-span-2\">\n          <label className=\"text-sm text-gray-700 grid gap-1\">\n            <span className=\"font-medium\">Layout JSON</span>\n            <textarea\n              className=\"border rounded p-2 text-xs h-28\"\n              value={layoutText}\n              onChange={(e) => setLayoutText(e.target.value)}\n              placeholder='[{\"key\":\"applicant\",\"pageIndex\":0,\"x\":100,\"y\":700,\"size\":10}]'\n            />\n          </label>\n        </div>\n      </div>\n      <div className=\"mt-2 grid md:grid-cols-3 gap-2 items-end\">\n        <div className=\"grid gap-1 text-sm text-gray-700\">\n          <span className=\"font-medium\">Preset Name</span>\n          <input\n            className=\"border rounded px-2 py-1\"\n            value={presetName}\n            onChange={(e) => setPresetName(e.target.value)}\n            placeholder=\"Default\"\n          />\n        </div>\n        <div className=\"flex items-end gap-2\">\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={onSavePreset}\n            disabled={!layoutText}\n          >\n            Save Preset\n          </button>\n          <div className=\"text-xs text-gray-600\">\n            Scope: {store.currentJobId ? \"Job\" : \"Global\"} | Env: {env}\n          </div>\n        </div>\n        <div className=\"flex items-end gap-2\">\n          <select\n            className=\"border rounded px-2 py-1 text-sm\"\n            onChange={(e) => e.target.value && onLoadPreset(e.target.value)}\n            value=\"\"\n          >\n            <option value=\"\" disabled>\n              Load preset…\n            </option>\n            {presetsForEnv.map((n) => (\n              <option key={n} value={n}>\n                {n}\n              </option>\n            ))}\n          </select>\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={() => presetName && onDeletePreset(presetName)}\n            disabled={!presetName}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n      <div className=\"mt-2 flex items-center gap-2 flex-wrap\">\n        <button\n          className=\"px-2 py-1 border rounded text-sm\"\n          onClick={onFill}\n          disabled={!basePdf || !fields}\n        >\n          Fill PDF\n        </button>\n        <button\n          className=\"px-2 py-1 border rounded text-sm\"\n          onClick={onAutoLayout}\n          disabled={!basePdf || !fields}\n        >\n          Auto-Layout & Fill\n        </button>\n        <button\n          className=\"px-2 py-1 border rounded text-sm\"\n          onClick={onFillByForm}\n          disabled={!basePdf || !fields}\n        >\n          Fill by Form Fields\n        </button>\n        <div className=\"text-xs text-gray-600\">{status}</div>\n      </div>\n      {autoPreview ? (\n        <div className=\"text-xs text-amber-700 mt-1\">{autoPreview}</div>\n      ) : null}\n      {fields ? (\n        <details className=\"mt-3\">\n          <summary className=\"cursor-pointer text-sm text-gray-700\">\n            Normalized Fields (available keys)\n          </summary>\n          <pre className=\"text-[11px] bg-gray-50 p-2 rounded overflow-auto max-h-64 break-anywhere\">\n            {JSON.stringify(fields, null, 2)}\n          </pre>\n        </details>\n      ) : null}\n    </div>\n  );\n}\n\nfunction CompliancePanel() {\n  const store = useAppStore();\n  const { results } = store;\n  if (!results) return null;\n  const fmt = store.useTickMarkFormat\n    ? formatFeetInchesTickMarks\n    : formatFeetInchesVerbose;\n  const mid = results.span.midspanFt;\n  const groundTarget = results.clearances.groundClearance;\n  const groundOK = mid == null ? true : mid >= groundTarget;\n  const commToPowerTarget =\n    results.clearances.powerClearanceDistribution || 40 / 12;\n  const powerHt = parseFeet(store.existingPowerHeight);\n  const proposed = results.attach.proposedAttachFt;\n  const sep = powerHt != null && proposed != null ? powerHt - proposed : null;\n  const sepOK = sep == null ? true : sep >= commToPowerTarget;\n  const inchesUsed = Math.round((commToPowerTarget || 0) * 12);\n  // Effective submission profile for trace\n  const activeJob = (store.jobs || []).find((j) => j.id === store.currentJobId);\n  const profileName =\n    activeJob?.submissionProfileName || store.currentSubmissionProfile;\n  const baseProfile =\n    (store.submissionProfiles || []).find((p) => p.name === profileName) || {};\n  const effectiveProfile = {\n    ...baseProfile,\n    ...(activeJob?.submissionProfileOverrides || {}),\n    name: baseProfile?.name,\n  };\n  const rec = results.attach?.recommendation || {};\n  return (\n    <div className=\"rounded border p-3\">\n      <div className=\"font-medium mb-2\">Standards Compliance</div>\n      <div className=\"text-sm grid md:grid-cols-2 gap-2\">\n        <div className={groundOK ? \"text-emerald-700\" : \"text-red-700\"}>\n          Ground/Midspan: {mid != null ? fmt(mid) : \"—\"} vs target{\" \"}\n          {fmt(groundTarget)} — {groundOK ? \"PASS\" : \"FAIL\"}\n        </div>\n        <div className={sepOK ? \"text-emerald-700\" : \"text-red-700\"}>\n          Comm-to-Power at pole: {sep != null ? fmt(sep) : \"—\"} vs target{\" \"}\n          {fmt(commToPowerTarget)} ({inchesUsed}\") — {sepOK ? \"PASS\" : \"FAIL\"}\n        </div>\n      </div>\n      <div className=\"text-xs text-gray-600 mt-1\">\n        FE/Mon Power presets enforce 18 ft over roads and 44\" comm-to-power.\n        NESC or utility default is typically 40\" when FE doesn’t apply.\n      </div>\n      <div className=\"mt-2 text-xs text-gray-700 grid md:grid-cols-3 gap-2\">\n        <div>Owner: {store.jobOwner || \"—\"}</div>\n        <div>Profile: {effectiveProfile.name || \"—\"}</div>\n        <div>\n          Min Comm Attach:{\" \"}\n          {effectiveProfile.minCommAttachFt != null\n            ? fmt(effectiveProfile.minCommAttachFt)\n            : \"—\"}\n        </div>\n        <div className=\"md:col-span-3\">\n          Basis: {rec.basis || \"—\"}\n          {rec.detail ? ` — ${rec.detail}` : \"\"}\n        </div>\n        <div>\n          Separation Used:{\" \"}\n          {rec.clearanceIn != null ? `${rec.clearanceIn}\"` : \"—\"}\n        </div>\n        <div>\n          Controlling: {rec.controlling?.name || \"—\"}\n          {rec.controlling?.ft != null ? ` @ ${fmt(rec.controlling.ft)}` : \"\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction PrintableReport() {\n  const {\n    results,\n    warnings,\n    engineeringNotes,\n    makeReadyNotes,\n    costAnalysis,\n    projectName,\n    applicantName,\n    jobNumber,\n    logoDataUrl,\n    existingLines,\n  } = useAppStore();\n  // Compute memoized aggregates regardless of results presence to keep hooks order consistent\n  const byCompany = React.useMemo(() => {\n    try {\n      const agg = (existingLines || []).reduce((acc, r) => {\n        if (!r?.makeReady) return acc;\n        const base = parseFeet(r.height);\n        const next = parseFeet(r.makeReadyHeight);\n        if (base == null || next == null) return acc;\n        const key = r.companyName || \"—\";\n        const deltaIn = Math.abs(Math.round((next - base) * 12));\n        const cost = deltaIn * 12.5;\n        const cur = acc[key] || { rows: 0, deltaInches: 0, totalCost: 0 };\n        cur.rows += 1;\n        cur.deltaInches += deltaIn;\n        cur.totalCost += cost;\n        acc[key] = cur;\n        return acc;\n      }, {});\n      return Object.entries(agg);\n    } catch (error) {\n      console.error(\"Error aggregating existing lines:\", error);\n      return [];\n    }\n  }, [existingLines]);\n  if (!results) {\n    return (\n      <div className=\"text-sm text-gray-600\">\n        No results to display. Please compute analysis first.\n      </div>\n    );\n  }\n  return (\n    <div className=\"grid gap-4 text-left\">\n      <div className=\"flex items-end justify-between\">\n        <div>\n          <h2 className=\"text-lg font-semibold\">Pole Attachment Report</h2>\n          <div className=\"text-sm text-gray-600\">\n            Project: {projectName || \"—\"} | Applicant: {applicantName || \"—\"} |\n            Job #: {jobNumber || \"—\"}\n          </div>\n        </div>\n        <div className=\"text-right\">\n          {logoDataUrl ? (\n            <img src={logoDataUrl} alt=\"Logo\" className=\"h-10 inline-block\" />\n          ) : (\n            <div className=\"text-2xl font-bold\">PolePro</div>\n          )}\n          <div className=\"text-xs text-gray-500\">\n            Generated {new Date().toLocaleDateString()}\n          </div>\n        </div>\n      </div>\n      <div>\n        <div className=\"font-medium\">Pole</div>\n        <div>\n          Height: {formatFeetInches(results.pole.inputHeight)} | Above-ground:{\" \"}\n          {formatFeetInches(results.pole.aboveGroundFt)} | Buried:{\" \"}\n          {formatFeetInches(results.pole.buriedFt)}\n        </div>\n        {results.pole.latitude != null && results.pole.longitude != null ? (\n          <div>\n            GPS: {results.pole.latitude}, {results.pole.longitude}\n          </div>\n        ) : null}\n      </div>\n      <div>\n        <div className=\"font-medium\">Attachment & Span</div>\n        <div>\n          Attach: {results.attach.proposedAttachFmt} | Span:{\" \"}\n          {results.span.spanFt} ft | Sag: {results.span.sagFmt} | Midspan:{\" \"}\n          {results.span.midspanFmt}\n        </div>\n        <div className=\"my-2\">\n          <SpanDiagram\n            attachFt={results.attach.proposedAttachFt}\n            midspanFt={results.span.midspanFt}\n            spanFt={results.span.spanFt}\n            groundTargetFt={results.clearances.groundClearance}\n          />\n        </div>\n        {results.guy ? (\n          <div>\n            Guying: {results.guy.required ? \"Required\" : \"Not required\"} |\n            Tension: {Math.round(results.guy.tension || 0)} lb | Angle:{\" \"}\n            {Math.round(results.guy.angle || 0)}°\n          </div>\n        ) : null}\n      </div>\n      <div>\n        <div className=\"font-medium\">Clearances (targets)</div>\n        <div>\n          Ground: {formatFeetInches(results.clearances.groundClearance)} | Road:{\" \"}\n          {formatFeetInches(results.clearances.roadClearance)} | Min top:{\" \"}\n          {formatFeetInches(results.clearances.minimumPoleTopSpace)}\n        </div>\n      </div>\n      {makeReadyNotes ? (\n        <div>\n          <div className=\"font-medium\">Make-ready</div>\n          <pre className=\"text-xs whitespace-pre-wrap break-anywhere\">\n            {makeReadyNotes}\n          </pre>\n          <div className=\"mt-1\">\n            Make-ready total: ${results.makeReadyTotal ?? 0}\n          </div>\n        </div>\n      ) : null}\n      {byCompany?.length ? (\n        <div>\n          <div className=\"font-medium\">Make-ready Summary (by company)</div>\n          <table className=\"w-full text-sm\">\n            <thead>\n              <tr className=\"text-left text-gray-600\">\n                <th className=\"p-1\">Company</th>\n                <th className=\"p-1\">Rows</th>\n                <th className=\"p-1\">Δ (in)</th>\n                <th className=\"p-1\">Est. Cost</th>\n              </tr>\n            </thead>\n            <tbody>\n              {byCompany.map(([k, v]) => (\n                <tr key={k} className=\"border-t\">\n                  <td className=\"p-1\">{k}</td>\n                  <td className=\"p-1\">{v.rows}</td>\n                  <td className=\"p-1\">{v.deltaInches}</td>\n                  <td className=\"p-1\">${v.totalCost}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : null}\n      {warnings?.length ? (\n        <div>\n          <div className=\"font-medium\">Warnings</div>\n          <ul className=\"list-disc pl-5 text-sm\">\n            {warnings.map((w, i) => (\n              <li key={i}>{w}</li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n      {engineeringNotes?.length ? (\n        <div>\n          <div className=\"font-medium\">Engineering Notes</div>\n          <ul className=\"list-disc pl-5 text-sm\">\n            {engineeringNotes.map((n, i) => (\n              <li key={i}>{n}</li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n      <div className=\"font-semibold\">Estimated Cost: ${costAnalysis ?? 0}</div>\n      <div className=\"no-print\">\n        <button\n          className=\"px-2 py-1 border rounded text-sm\"\n          onClick={() => window.print()}\n        >\n          Print / Save PDF\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction ScenarioButtons() {\n  const store = useAppStore();\n  const snapshot = () => ({\n    poleHeight: store.poleHeight,\n    poleClass: store.poleClass,\n    existingPowerHeight: store.existingPowerHeight,\n    existingPowerVoltage: store.existingPowerVoltage,\n    spanDistance: store.spanDistance,\n    adjacentPoleHeight: store.adjacentPoleHeight,\n    attachmentType: store.attachmentType,\n    cableDiameter: store.cableDiameter,\n    windSpeed: store.windSpeed,\n    spanEnvironment: store.spanEnvironment,\n    streetLightHeight: store.streetLightHeight,\n    dripLoopHeight: store.dripLoopHeight,\n    proposedLineHeight: store.proposedLineHeight,\n    iceThicknessIn: store.iceThicknessIn,\n    hasTransformer: store.hasTransformer,\n    presetProfile: store.presetProfile,\n    existingLines: store.existingLines,\n  });\n  const load = (snap) => {\n    if (!snap) return;\n    store.setPoleHeight(snap.poleHeight);\n    store.setPoleClass(snap.poleClass);\n    store.setExistingPowerHeight(snap.existingPowerHeight);\n    store.setExistingPowerVoltage(snap.existingPowerVoltage);\n    store.setSpanDistance(snap.spanDistance);\n    store.setAdjacentPoleHeight(snap.adjacentPoleHeight);\n    store.setAttachmentType(snap.attachmentType);\n    store.setCableDiameter(snap.cableDiameter);\n    store.setWindSpeed(snap.windSpeed);\n    store.setSpanEnvironment(snap.spanEnvironment);\n    store.setStreetLightHeight(snap.streetLightHeight);\n    store.setDripLoopHeight(snap.dripLoopHeight);\n    store.setProposedLineHeight(snap.proposedLineHeight);\n    store.setIceThicknessIn(snap.iceThicknessIn);\n    store.setHasTransformer(snap.hasTransformer);\n    store.setPresetProfile(snap.presetProfile);\n    store.setExistingLines(snap.existingLines);\n  };\n  return (\n    <div className=\"flex items-center gap-2 my-2\">\n      <button\n        className=\"px-2 py-1 border rounded text-sm\"\n        onClick={() => store.setScenarioA(snapshot())}\n      >\n        Save A\n      </button>\n      <button\n        className=\"px-2 py-1 border rounded text-sm\"\n        onClick={() => store.setScenarioB(snapshot())}\n      >\n        Save B\n      </button>\n      <button\n        className=\"px-2 py-1 border rounded text-sm\"\n        onClick={() => load(store.scenarioA)}\n        disabled={!store.scenarioA}\n      >\n        Load A\n      </button>\n      <button\n        className=\"px-2 py-1 border rounded text-sm\"\n        onClick={() => load(store.scenarioB)}\n        disabled={!store.scenarioB}\n      >\n        Load B\n      </button>\n    </div>\n  );\n}\n\nfunction ExportButtons() {\n  const { results, warnings, makeReadyNotes, useTickMarkFormat } =\n    useAppStore();\n  const onCSV = () => {\n    const csv = resultsToCSV(results, warnings, makeReadyNotes, {\n      useTickMarks: useTickMarkFormat,\n    });\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"pole-analysis.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const onPDF = () => {\n    // Lightweight: trigger browser print to save as PDF\n    window.print();\n  };\n  return (\n    <div className=\"flex items-center gap-2 my-2\">\n      <button\n        className=\"px-2 py-1 border rounded text-sm\"\n        onClick={onCSV}\n        disabled={!results}\n      >\n        Export CSV\n      </button>\n      <button\n        className=\"px-2 py-1 border rounded text-sm\"\n        onClick={onPDF}\n        disabled={!results}\n      >\n        Export PDF\n      </button>\n      <PermitPackButton />\n      <InteropExportButton />\n    </div>\n  );\n}\n\nfunction PermitPackButton() {\n  const store = useAppStore();\n  const [pdfReady, setPdfReady] = React.useState(false);\n  const [hovering, setHovering] = React.useState(false);\n  const hoverTimerRef = React.useRef(/** @type {any} */ (null));\n  const handleMouseEnter = React.useCallback(() => {\n    setHovering(true);\n    if (hoverTimerRef.current) clearTimeout(hoverTimerRef.current);\n    hoverTimerRef.current = setTimeout(() => {\n      import(\"../utils/pdfAsync\")\n        .then((m) => m.loadPdfLib?.())\n        .then(() => setPdfReady(true))\n        .catch(() => {});\n    }, 150);\n  }, []);\n  const handleMouseLeave = React.useCallback(() => {\n    setHovering(false);\n    if (hoverTimerRef.current) {\n      clearTimeout(hoverTimerRef.current);\n      hoverTimerRef.current = null;\n    }\n  }, []);\n  const onPermit = async () => {\n    try {\n      const JSZip = (await import(\"jszip\")).default;\n      const zip = new JSZip();\n      const { buildMM109PDF, buildCSXPDF } = await import(\"../utils/permits\");\n      const { buildMM109Fields, buildCSXFields, buildStateHighwayFields } =\n        await import(\"../utils/formFields\");\n      const { detectPermitIssues } = await import(\"../utils/permitChecks\");\n      const { buildTemplatesText } = await import(\"../utils/permitTemplates\");\n      const job = (store.jobs || []).find((j) => j.id === store.currentJobId);\n      const profileName =\n        job?.submissionProfileName || store.currentSubmissionProfile;\n      const baseProfile =\n        (store.submissionProfiles || []).find((p) => p.name === profileName) ||\n        {};\n      const effectiveProfile = {\n        ...baseProfile,\n        ...(job?.submissionProfileOverrides || {}),\n        name: baseProfile?.name,\n      };\n      const env = store.spanEnvironment;\n      const results = store.results;\n      if (!results) {\n        alert(\"Run analysis first.\");\n        return;\n      }\n      // Build standardized summary\n      const summary = makePermitSummary({\n        env,\n        results,\n        job,\n        effectiveProfile,\n        cachedMidspans: store.cachedMidspans,\n        store,\n      });\n      zip.file(\"permit/summary.json\", JSON.stringify(summary, null, 2));\n      // Include normalized fields for easier transcription to official forms\n      let fields;\n      if (env === \"railroad\") {\n        fields = buildCSXFields(summary);\n      } else if (env === \"wvHighway\") {\n        fields = buildMM109Fields(summary);\n      } else if (env === \"paHighway\") {\n        fields = buildStateHighwayFields(summary, \"PennDOT\");\n      } else if (env === \"ohHighway\") {\n        fields = buildStateHighwayFields(summary, \"ODOT\");\n      } else if (env === \"mdHighway\") {\n        fields = buildStateHighwayFields(summary, \"MDOT SHA\");\n      } else {\n        fields = buildMM109Fields(summary);\n      }\n      zip.file(\"permit/fields.json\", JSON.stringify(fields, null, 2));\n      // Include agency templates manifest with links and requirements\n      const templatesTxt = buildTemplatesText(env);\n      if (templatesTxt) zip.file(\"permit/templates.txt\", templatesTxt);\n      // Detect pre-submission issues and include a simple report\n      const issues = detectPermitIssues(summary);\n      const issuesText = issues.length\n        ? [\"# Issues detected\", \"\", ...issues.map((x) => `- ${x}`)].join(\"\\n\")\n        : \"# Issues detected\\n\\nNone\";\n      zip.file(\"permit/issues.txt\", issuesText);\n      // PCI (Post Construction Inspection) summary from collected poles (scoped to current job)\n      try {\n        const scopedPoles = (store.collectedPoles || []).filter(\n          (p) => !store.currentJobId || p.jobId === store.currentJobId,\n        );\n        if (scopedPoles.length) {\n          const header = [\n            \"id\",\n            \"latitude\",\n            \"longitude\",\n            \"plannedAttach\",\n            \"asBuiltAttach\",\n            \"varianceIn\",\n            \"variancePass\",\n            \"hasPhoto\",\n            \"status\",\n            \"timestamp\",\n          ];\n          const rows = scopedPoles.map((p) => [\n            p.id || \"\",\n            p.latitude || \"\",\n            p.longitude || \"\",\n            p.height || \"\",\n            p.asBuilt?.attachHeight || \"\",\n            computeVarianceIn(p.asBuilt?.attachHeight, p.height),\n            evaluateVariancePass(\n              p.asBuilt?.attachHeight,\n              p.height,\n              store.presetProfile,\n            ),\n            p.photoDataUrl ? \"Y\" : \"N\",\n            p.status || \"draft\",\n            p.timestamp || \"\",\n          ]);\n          const csv = [\n            header.join(\",\"),\n            ...rows.map((r) =>\n              r.map((v) => `${String(v).replaceAll('\"', '\"\"')}`).join(\",\"),\n            ),\n          ].join(\"\\n\");\n          zip.file(\"permit/pci-summary.csv\", csv);\n          // Simple TXT rollup\n          const done = scopedPoles.filter(\n            (p) => (p.status || \"draft\") === \"done\",\n          ).length;\n          const pass = scopedPoles.filter(\n            (p) =>\n              evaluateVariancePass(\n                p.asBuilt?.attachHeight,\n                p.height,\n                store.presetProfile,\n              ) === \"PASS\",\n          ).length;\n          const fail = scopedPoles.filter(\n            (p) =>\n              evaluateVariancePass(\n                p.asBuilt?.attachHeight,\n                p.height,\n                store.presetProfile,\n              ) === \"FAIL\",\n          ).length;\n          const withPhoto = scopedPoles.filter((p) => !!p.photoDataUrl).length;\n          const pciTxt = [\n            \"# PCI Summary\",\n            \"\",\n            `Total: ${scopedPoles.length}`,\n            `Done: ${done}`,\n            `PASS: ${pass}`,\n            `FAIL: ${fail}`,\n            `Photos: ${withPhoto}`,\n          ].join(\"\\n\");\n          zip.file(\"permit/pci-summary.txt\", pciTxt);\n        }\n      } catch {\n        /* non-fatal */\n      }\n      // Attach cached midspans CSV and QA summary\n      if ((store.cachedMidspans || []).length) {\n        // Enriched cached midspans export (includes pass/deficit/delta)\n        const rows = [\n          [\n            \"spanId\",\n            \"environment\",\n            \"spanFt\",\n            \"spanLenSource\",\n            \"midspanFt\",\n            \"targetFt\",\n            \"attachFt\",\n            \"pass\",\n            \"deficitFt\",\n            \"deltaFt\",\n            \"midLat\",\n            \"midLon\",\n            \"fromId\",\n            \"toId\",\n            \"fromLat\",\n            \"fromLon\",\n            \"toLat\",\n            \"toLon\",\n            \"segments\",\n          ],\n        ];\n        for (const m of store.cachedMidspans || []) {\n          rows.push([\n            m.spanId ?? \"\",\n            m.environment ?? \"\",\n            m.spanFt ?? \"\",\n            m.spanLenSource ?? \"\",\n            m.midspanFt ?? \"\",\n            m.targetFt ?? \"\",\n            m.attachFt ?? \"\",\n            m.pass === true ? \"PASS\" : m.pass === false ? \"FAIL\" : \"\",\n            m.deficitFt ?? \"\",\n            m.deltaFt ?? \"\",\n            m.midLat ?? \"\",\n            m.midLon ?? \"\",\n            m.fromId ?? \"\",\n            m.toId ?? \"\",\n            m.fromLat ?? \"\",\n            m.fromLon ?? \"\",\n            m.toLat ?? \"\",\n            m.toLon ?? \"\",\n            Array.isArray(m.segments)\n              ? m.segments.map((x) => `${x.env}:${x.portion || \"\"}`).join(\"|\")\n              : \"\",\n          ]);\n        }\n        const csv = rows\n          .map((r) =>\n            r\n              .map((v) => String(v).replaceAll('\"', '\"\"'))\n              .map((v) => (v.includes(\",\") ? `\"${v}\"` : v))\n              .join(\",\"),\n          )\n          .join(\"\\n\");\n        zip.file(\"permit/cached-midspans.csv\", csv);\n\n        // Also include a simple PASS/FAIL evaluation for midspan vs target\n        try {\n          const evalRows = [\n            [\"spanId\", \"environment\", \"midspanFt\", \"targetFt\", \"status\"],\n          ];\n          for (const m of store.cachedMidspans || []) {\n            const ok =\n              m.midspanFt != null && m.targetFt != null\n                ? Number(m.midspanFt) >= Number(m.targetFt)\n                : \"\";\n            evalRows.push([\n              m.spanId ?? \"\",\n              m.environment ?? \"\",\n              m.midspanFt ?? \"\",\n              m.targetFt ?? \"\",\n              ok === \"\" ? \"\" : ok ? \"PASS\" : \"FAIL\",\n            ]);\n          }\n          const evalCsv = evalRows\n            .map((r) => r.map((v) => String(v).replaceAll('\"', '\"\"')).join(\",\"))\n            .join(\"\\n\");\n          zip.file(\"permit/midspan-eval.csv\", evalCsv);\n        } catch {\n          /* ignore */\n        }\n\n        // QA summary CSV (focused on compliance and deltas)\n        try {\n          const qaRows = [\n            [\n              \"spanId\",\n              \"environment\",\n              \"pass\",\n              \"deficitFt\",\n              \"deltaFt\",\n              \"spanLenSource\",\n              \"spanFt\",\n              \"midspanFt\",\n              \"targetFt\",\n              \"fromId\",\n              \"toId\",\n              \"midLat\",\n              \"midLon\",\n            ],\n          ];\n          for (const m of store.cachedMidspans || []) {\n            qaRows.push([\n              m.spanId ?? \"\",\n              m.environment ?? \"\",\n              m.pass === true ? \"PASS\" : m.pass === false ? \"FAIL\" : \"\",\n              m.deficitFt ?? \"\",\n              m.deltaFt ?? \"\",\n              m.spanLenSource ?? \"\",\n              m.spanFt ?? \"\",\n              m.midspanFt ?? \"\",\n              m.targetFt ?? \"\",\n              m.fromId ?? \"\",\n              m.toId ?? \"\",\n              m.midLat ?? \"\",\n              m.midLon ?? \"\",\n            ]);\n          }\n          const qaCsv = qaRows\n            .map((r) => r.map((v) => String(v).replaceAll('\"', '\"\"')).join(\",\"))\n            .join(\"\\n\");\n          zip.file(\"permit/qa-summary.csv\", qaCsv);\n        } catch {\n          /* ignore */\n        }\n      }\n\n      // Interop export button moved to module scope (see below) to satisfy linter\n      // Generate a minimal SVG plan/profile diagram\n      const w = 800,\n        h = 300,\n        margin = 40;\n      const groundY = h - margin;\n      const scaleY = (ft) => {\n        const maxFt = Math.max(\n          (results.attach.proposedAttachFt || 0) + 5,\n          (results.span.midspanFt || 0) + 5,\n          (results.clearances.groundClearance || 0) + 5,\n        );\n        const y = groundY - ((ft || 0) / Math.max(1, maxFt)) * (h - 2 * margin);\n        return Math.max(margin, Math.min(groundY, y));\n      };\n      const x1 = margin + 60,\n        x2 = w - margin - 60;\n      const y1 = scaleY(results.attach.proposedAttachFt || 0);\n      const y2 = scaleY(results.attach.proposedAttachFt || 0); // assume similar at neighbor for sketch\n      const midY = scaleY(results.span.midspanFt || 0);\n      const targetY = scaleY(\n        (summary?.span?.targetFt ?? results.clearances.groundClearance) || 0,\n      );\n      const path = `M ${x1} ${y1} Q ${(x1 + x2) / 2} ${midY} ${x2} ${y2}`;\n      // simple scale bar (assume drawing width represents span length)\n      const scaleFt = results.span.spanFt || 0;\n      const scalePx = x2 - x1;\n      const barX = margin,\n        barY = h - 10;\n      const svg = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${w}\" height=\"${h}\" viewBox=\"0 0 ${w} ${h}\">\\n  <rect width=\"100%\" height=\"100%\" fill=\"#fff\"/>\\n  <g stroke=\"#333\" stroke-width=\"2\" fill=\"none\">\\n    <line x1=\"${x1}\" y1=\"${groundY}\" x2=\"${x1}\" y2=\"${margin}\"/>\\n    <line x1=\"${x2}\" y1=\"${groundY}\" x2=\"${x2}\" y2=\"${margin}\"/>\\n    <path d=\"${path}\" stroke=\"#1f77b4\"/>\\n    <line x1=\"${margin}\" y1=\"${groundY}\" x2=\"${w - margin}\" y2=\"${groundY}\" stroke=\"#666\" stroke-dasharray=\"4 4\"/>\\n    <line x1=\"${margin}\" y1=\"${targetY}\" x2=\"${w - margin}\" y2=\"${targetY}\" stroke=\"#e53935\" stroke-dasharray=\"6 6\"/>\\n  </g>\\n  <g stroke=\"#000\" stroke-width=\"1\" fill=\"none\">\\n    <line x1=\"${barX}\" y1=\"${barY}\" x2=\"${barX + scalePx}\" y2=\"${barY}\"/>\\n    <line x1=\"${barX}\" y1=\"${barY - 5}\" x2=\"${barX}\" y2=\"${barY + 5}\"/>\\n    <line x1=\"${barX + scalePx}\" y1=\"${barY - 5}\" x2=\"${barX + scalePx}\" y2=\"${barY + 5}\"/>\\n  </g>\\n  <g fill=\"#1f77b4\" stroke=\"none\">\\n    <circle cx=\"${x1}\" cy=\"${y1}\" r=\"3\"/>\\n    <circle cx=\"${x2}\" cy=\"${y2}\" r=\"3\"/>\\n    <circle cx=\"${(x1 + x2) / 2}\" cy=\"${midY}\" r=\"3\"/>\\n  </g>\\n  <g font-family=\"sans-serif\" font-size=\"12\" fill=\"#333\">\\n    <text x=\"${x1 - 20}\" y=\"${margin + 12}\" transform=\"rotate(-90 ${x1 - 20} ${margin + 12})\">Pole</text>\\n    <text x=\"${x2 + 20}\" y=\"${margin + 12}\" transform=\"rotate(90 ${x2 + 20} ${margin + 12})\">Pole</text>\\n    <text x=\"${x1 + 6}\" y=\"${y1 - 6}\" fill=\"#1f77b4\">Attach A</text>\\n    <text x=\"${x2 - 6}\" y=\"${y2 - 6}\" fill=\"#1f77b4\" text-anchor=\"end\">Attach B</text>\\n    <text x=\"${(x1 + x2) / 2 + 6}\" y=\"${midY - 8}\" fill=\"#1f77b4\">Midspan ${results.span.midspanFt?.toFixed?.(1) || results.span.midspanFt} ft</text>\\n    <text x=\"${w / 2}\" y=\"${targetY - 6}\" text-anchor=\"middle\" fill=\"#e53935\">Ground target ${summary?.span?.targetFt?.toFixed?.(1) || summary?.span?.targetFt} ft</text>\\n    <text x=\"${barX + scalePx / 2}\" y=\"${barY - 6}\" text-anchor=\"middle\">~${Math.round(scaleFt)} ft</text>\\n    <text x=\"${margin}\" y=\"20\" fill=\"#555\">${summary?.type || \"\"} — target ${summary?.span?.targetFt || \"\"} ft (${summary?.span?.targetSource || \"computed\"})</text>\\n  </g>\\n</svg>`;\n      zip.file(\"permit/plan-profile.svg\", svg);\n\n      // Optional: include geospatial exports if poles/spans exist in store\n      try {\n        const { buildGeoJSON } = await import(\"../utils/geodata\");\n        const poles = store.collectedPoles || store.importedPoles || [];\n        const spans = store.importedSpans || [];\n        if (poles.length || spans.length) {\n          const fc = buildGeoJSON({ poles, spans, job });\n          zip.file(\"permit/geodata.geojson\", JSON.stringify(fc, null, 2));\n        }\n      } catch {\n        // non-fatal if geodata builders are unavailable in this context\n      }\n\n      // Add draft PDFs when applicable\n      if (env === \"wvHighway\") {\n        const pdf = await buildMM109PDF(summary);\n        zip.file(\"permit/mm109-draft.pdf\", pdf);\n      } else if (env === \"railroad\") {\n        const pdf = await buildCSXPDF(summary);\n        zip.file(\"permit/railroad-draft.pdf\", pdf);\n      } else if (\n        env === \"paHighway\" ||\n        env === \"ohHighway\" ||\n        env === \"mdHighway\"\n      ) {\n        // No official forms embedded; include fields.json and rely on summary/diagram\n        // Future: add draft headers for each DOT if desired\n      }\n      // README\n      // Include PCI totals if we have any collected poles\n      const scopedPolesForReadme = (store.collectedPoles || []).filter(\n        (p) => !store.currentJobId || p.jobId === store.currentJobId,\n      );\n      const pciDone = scopedPolesForReadme.filter(\n        (p) => (p.status || \"draft\") === \"done\",\n      ).length;\n      const pciPass = scopedPolesForReadme.filter(\n        (p) =>\n          evaluateVariancePass(\n            p.asBuilt?.attachHeight,\n            p.height,\n            store.presetProfile,\n          ) === \"PASS\",\n      ).length;\n      const pciFail = scopedPolesForReadme.filter(\n        (p) =>\n          evaluateVariancePass(\n            p.asBuilt?.attachHeight,\n            p.height,\n            store.presetProfile,\n          ) === \"FAIL\",\n      ).length;\n      const pciPhotos = scopedPolesForReadme.filter(\n        (p) => !!p.photoDataUrl,\n      ).length;\n      // Variance buckets (inches)\n      const bucket = (v) => {\n        const a = Math.abs(Number(v) || 0);\n        if (a <= 2) return '≤2\"';\n        if (a <= 6) return '3–6\"';\n        if (a <= 12) return '7–12\"';\n        return '>12\"';\n      };\n      const byBucket = { '≤2\"': 0, '3–6\"': 0, '7–12\"': 0, '>12\"': 0 };\n      for (const p of scopedPolesForReadme) {\n        const planned = Number(p.height) || 0;\n        const built = Number(p.asBuilt?.attachHeight) || 0;\n        if (!planned || !built) continue;\n        const v = (built - planned) * 12; // inches\n        byBucket[bucket(v)]++;\n      }\n      // Build QA analytics summary from cached midspans (if available)\n      const qaM = store.cachedMidspans || [];\n      const qaCounts = (() => {\n        if (!qaM.length) return null;\n        const counts = {\n          total: qaM.length,\n          pass: 0,\n          fail: 0,\n          unknown: 0,\n          sources: { auto: 0, lengthFt: 0, estimatedLengthFt: 0, unknown: 0 },\n          withEndpoints: 0,\n        };\n        const buckets = { \"≤5ft\": 0, \"6–15ft\": 0, \"16–30ft\": 0, \">30ft\": 0 };\n        for (const m of qaM) {\n          if (m.pass === true) counts.pass++;\n          else if (m.pass === false) counts.fail++;\n          else counts.unknown++;\n          const src = m.spanLenSource || \"unknown\";\n          counts.sources[src] = (counts.sources[src] || 0) + 1;\n          const hasEndpoints = !!(m.fromLat && m.fromLon && m.toLat && m.toLon);\n          if (hasEndpoints) counts.withEndpoints++;\n          const d = Number(m.deltaFt);\n          if (Number.isFinite(d)) {\n            if (d <= 5) buckets[\"≤5ft\"]++;\n            else if (d <= 15) buckets[\"6–15ft\"]++;\n            else if (d <= 30) buckets[\"16–30ft\"]++;\n            else buckets[\">30ft\"]++;\n          }\n        }\n        return { counts, buckets };\n      })();\n\n      const readme = [\n        \"# Permit Package\",\n        \"\",\n        `Type: ${summary.type}`,\n        `Job: ${summary.job.name} (${summary.job.jobNumber})`,\n        `Environment: ${env}`,\n        `Submission Profile: ${summary.job.submissionProfileName || effectiveProfile?.name || \"\"}`,\n        `Manifest Type: ${effectiveProfile?.manifestType || \"\"}`,\n        `Target Source: ${summary?.span?.targetSource || \"computed\"}`,\n        `Issues: ${issues.length}`,\n        \"\",\n        qaCounts\n          ? `QA/QC — Spans cached: ${qaCounts.counts.total} | PASS: ${qaCounts.counts.pass} | FAIL: ${qaCounts.counts.fail} | Unknown: ${qaCounts.counts.unknown}`\n          : \"\",\n        qaCounts\n          ? `QA/QC — With endpoints: ${qaCounts.counts.withEndpoints} | Sources — auto: ${qaCounts.counts.sources.auto}, manual: ${qaCounts.counts.sources.lengthFt}, est: ${qaCounts.counts.sources.estimatedLengthFt}, unknown: ${qaCounts.counts.sources.unknown}`\n          : \"\",\n        qaCounts\n          ? `QA/QC — Δ buckets (ft): ≤5: ${qaCounts.buckets[\"≤5ft\"]}, 6–15: ${qaCounts.buckets[\"6–15ft\"]}, 16–30: ${qaCounts.buckets[\"16–30ft\"]}, >30: ${qaCounts.buckets[\">30ft\"]}`\n          : \"\",\n        qaCounts ? \"\" : \"\",\n        scopedPolesForReadme.length\n          ? `PCI Totals — Done: ${pciDone} | PASS: ${pciPass} | FAIL: ${pciFail} | Photos: ${pciPhotos}`\n          : \"\",\n        scopedPolesForReadme.length\n          ? `Variance buckets (in): ≤2: ${byBucket['≤2\"']} | 3–6: ${byBucket['3–6\"']} | 7–12: ${byBucket['7–12\"']} | >12: ${byBucket['>12\"']}`\n          : \"\",\n        scopedPolesForReadme.length ? \"\" : \"\",\n        \"Files:\",\n        \"- summary.json: Data used to prepare the application\",\n        \"- fields.json: Normalized key-value fields for form population (MM109/CSX)\",\n        \"- plan-profile.svg: Simple plan/profile diagram\",\n        \"- templates.txt: Official template links and requirements for the selected agency\",\n        \"- cached-midspans.csv: Cached spans with midspan/target used, plus PASS/FAIL and Δ when available\",\n        \"- midspan-eval.csv: PASS/FAIL evaluation of cached midspans versus targets\",\n        \"- qa-summary.csv: Per-span QA/QC export (PASS/FAIL, deficit, Δ, sources)\",\n        \"- pci-summary.csv: Post Construction Inspection rollup for collected poles (if any)\",\n        \"- pci-summary.txt: Totals for PCI (done/pass/fail/photos)\",\n        \"- checklist.txt: Pre-submission checklist to validate required fields\",\n        \"- issues.txt: Auto-detected missing fields or data gaps\",\n        env === \"wvHighway\"\n          ? \"- mm109-draft.pdf: Draft application with populated fields\"\n          : \"\",\n        env === \"paHighway\" || env === \"ohHighway\" || env === \"mdHighway\"\n          ? \"- (no draft PDF included; use fields.json + summary)\"\n          : \"\",\n        env === \"railroad\"\n          ? \"- railroad-draft.pdf: Draft CSX application with populated fields\"\n          : \"\",\n      ].join(\"\\n\");\n      zip.file(\"permit/README.txt\", readme);\n      // Simple checklist to help validate required fields before submission\n      const checklist = [\n        \"# Pre-submission Checklist\",\n        \"\",\n        `- [${summary.job.name ? \"x\" : \" \"}] Job name`,\n        `- [${summary.job.jobNumber ? \"x\" : \" \"}] Job number`,\n        `- [${summary.job.applicant ? \"x\" : \" \"}] Applicant`,\n        `- [${summary.pole.heightFt ? \"x\" : \" \"}] Pole height`,\n        `- [${summary.power.heightFt ? \"x\" : \" \"}] Power height`,\n        `- [${summary.span.lengthFt ? \"x\" : \" \"}] Span length`,\n        `- [${summary.span.midspanFt ? \"x\" : \" \"}] Midspan`,\n        `- [${summary.span.targetFt ? \"x\" : \" \"}] Ground clearance target`,\n        \"\",\n        \"Attach supporting photos, maps, and any utility-specific forms as needed.\",\n      ].join(\"\\n\");\n      zip.file(\"permit/checklist.txt\", checklist);\n      const blob = await zip.generateAsync({ type: \"blob\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${summary.type.replace(/[^A-Za-z0-9_-]/g, \"_\")}_permit_pack.zip`;\n      a.click();\n      URL.revokeObjectURL(url);\n    } catch (e) {\n      alert(`Permit pack failed: ${e?.message || e}`);\n    }\n  };\n  const isTargetEnv = [\n    \"wvHighway\",\n    \"paHighway\",\n    \"ohHighway\",\n    \"mdHighway\",\n    \"railroad\",\n  ].includes(store.spanEnvironment);\n  return (\n    <span className=\"inline-flex items-center\">\n      <button\n        className=\"px-2 py-1 border rounded text-sm\"\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        onClick={onPermit}\n        disabled={!store.results || !isTargetEnv}\n        title={\n          isTargetEnv\n            ? \"Generate permit package\"\n            : \"Select WV Highway or Railroad environment\"\n        }\n      >\n        Export Permit Pack\n      </button>\n      {hovering && !pdfReady ? (\n        <span className=\"ml-2 text-xs text-gray-500\">\n          Warming up PDF tools…\n        </span>\n      ) : null}\n    </span>\n  );\n}\n\n// Interop export button — builds CSV/GeoJSON/KML/Shapefile ZIPs based on selected preset\nfunction InteropExportButton() {\n  const store = useAppStore();\n  const [open, setOpen] = React.useState(false);\n  const [format, setFormat] = React.useState(\"csv\"); // csv|geojson|kml|shapefile\n  const [preset, setPreset] = React.useState(\"generic\");\n  const [includePoles, setIncludePoles] = React.useState(true);\n  const [includeSpans, setIncludeSpans] = React.useState(true);\n  const [includeLines, setIncludeLines] = React.useState(true);\n  const [exportError, setExportError] = React.useState(\"\");\n\n  React.useEffect(() => {\n    const job = (store.jobs || []).find((j) => j.id === store.currentJobId);\n    if (job?.exportProfile) setPreset(job.exportProfile);\n  }, [store.jobs, store.currentJobId]);\n\n  const onExport = async () => {\n    try {\n      setExportError(\"\");\n      const JSZip = (await import(\"jszip\")).default;\n      const zip = new JSZip();\n      const poles = includePoles ? store.importedPoles || [] : [];\n      const spans = includeSpans ? store.importedSpans || [] : [];\n      const lines = includeLines ? store.existingLines || [] : [];\n\n      if (format === \"csv\") {\n        if (poles.length)\n          zip.file(\"export/poles.csv\", buildPolesCSV(poles, preset));\n        if (spans.length)\n          zip.file(\"export/spans.csv\", buildSpansCSV(spans, preset));\n        if (lines.length)\n          zip.file(\n            \"export/existing-lines.csv\",\n            buildExistingLinesCSV(lines, preset),\n          );\n        if (preset === \"firstEnergy\" && (store.cachedMidspans || []).length) {\n          const job = (store.jobs || []).find(\n            (j) => j.id === store.currentJobId,\n          );\n          zip.file(\n            \"export/fe-joint-use.csv\",\n            buildFirstEnergyJointUseCSV({\n              cachedMidspans: store.cachedMidspans,\n              job,\n            }),\n          );\n        }\n      } else if (format === \"geojson\") {\n        const fc = buildGeoJSON({ poles, spans });\n        zip.file(\"export/data.geojson\", JSON.stringify(fc));\n      } else if (format === \"kml\") {\n        const kml = buildKML({ poles, spans });\n        zip.file(\"export/data.kml\", kml);\n      } else if (format === \"shapefile\") {\n        try {\n          // Use CDN-backed shp-write via geodata utils (no bundler dependency)\n          const { buildGeoJSON: buildGeoForShp, exportShapefile } =\n            await import(\"../utils/geodata\");\n          const fc = buildGeoForShp({ poles, spans });\n          // Request a Blob without auto-download so we can include it in our ZIP\n          const shpBlob = await exportShapefile(\n            fc,\n            \"data-shapefile.zip\",\n            false,\n          );\n          if (shpBlob) {\n            zip.file(\"export/data-shapefile.zip\", shpBlob);\n            // Include GeoJSON alongside for interoperability\n            zip.file(\"export/data.geojson\", JSON.stringify(fc));\n            zip.file(\n              \"export/README.txt\",\n              \"Shapefile (ZIP) and GeoJSON provided. Shapefile generated via CDN-loaded shp-write.\",\n            );\n          } else {\n            // Fallback to GeoJSON only\n            zip.file(\"export/data.geojson\", JSON.stringify(fc));\n            zip.file(\n              \"export/README.txt\",\n              \"Shapefile export unavailable; GeoJSON included as an alternative.\",\n            );\n            setExportError(\n              \"Shapefile export unavailable; provided GeoJSON instead.\",\n            );\n          }\n        } catch (e) {\n          console.warn(\"Shapefile export failed completely\", e);\n          setExportError(`Export failed: ${e.message}`);\n        }\n      }\n\n      const blob = await zip.generateAsync({ type: \"blob\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `interop-export-${preset}.zip`;\n      a.click();\n      URL.revokeObjectURL(url);\n      setOpen(false);\n    } catch (error) {\n      console.error(\"Export failed:\", error);\n      setExportError(`Export failed: ${error.message}`);\n    }\n  };\n\n  return (\n    <>\n      <button\n        className=\"px-2 py-1 border rounded text-sm\"\n        onClick={() => setOpen(true)}\n      >\n        Interop Export\n      </button>\n      {open ? (\n        <div className=\"fixed inset-0 bg-black/30 z-50 flex items-center justify-center\">\n          <div className=\"bg-white rounded shadow-lg w-[90vw] max-w-lg p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"font-medium\">Interop Export</div>\n              <button className=\"text-sm\" onClick={() => setOpen(false)}>\n                Close\n              </button>\n            </div>\n            <div className=\"grid gap-2 text-sm\">\n              <label className=\"grid gap-1\">\n                <span className=\"font-medium\">Preset</span>\n                <select\n                  className=\"border rounded px-2 py-1\"\n                  value={preset}\n                  onChange={(e) => setPreset(e.target.value)}\n                >\n                  {(EXPORT_PRESETS || []).map((p) => (\n                    <option key={p.value} value={p.value}>\n                      {p.label}\n                    </option>\n                  ))}\n                </select>\n              </label>\n              <label className=\"grid gap-1\">\n                <span className=\"font-medium\">Format</span>\n                <select\n                  className=\"border rounded px-2 py-1\"\n                  value={format}\n                  onChange={(e) => setFormat(e.target.value)}\n                >\n                  <option value=\"csv\">CSV (ZIP)</option>\n                  <option value=\"geojson\">GeoJSON (ZIP)</option>\n                  <option value=\"kml\">KML (ZIP)</option>\n                  <option value=\"shapefile\">Shapefile (ZIP)</option>\n                </select>\n              </label>\n              <div className=\"grid grid-cols-3 gap-2 mt-1\">\n                <label className=\"inline-flex items-center gap-1 text-sm\">\n                  <input\n                    type=\"checkbox\"\n                    checked={includePoles}\n                    onChange={(e) => setIncludePoles(e.target.checked)}\n                  />{\" \"}\n                  Poles\n                </label>\n                <label className=\"inline-flex items-center gap-1 text-sm\">\n                  <input\n                    type=\"checkbox\"\n                    checked={includeSpans}\n                    onChange={(e) => setIncludeSpans(e.target.checked)}\n                  />{\" \"}\n                  Spans\n                </label>\n                <label className=\"inline-flex items-center gap-1 text-sm\">\n                  <input\n                    type=\"checkbox\"\n                    checked={includeLines}\n                    onChange={(e) => setIncludeLines(e.target.checked)}\n                  />{\" \"}\n                  Existing Lines\n                </label>\n              </div>\n              <div className=\"text-xs text-gray-600\">\n                Uses current job’s export profile by default. CSV headers align\n                to the chosen preset.\n              </div>\n              {exportError && (\n                <div className=\"mt-2 text-sm text-red-600\">{exportError}</div>\n              )}\n              <button\n                className=\"mt-2 px-3 py-1 border rounded\"\n                onClick={onExport}\n              >\n                Export\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n\nfunction FieldCollection({ openHelp, showBottomActions = true }) {\n  const store = useAppStore();\n  const [poleId, setPoleId] = React.useState(\"\");\n  const [saving, setSaving] = React.useState(false);\n  const [currentPhotoDataUrl, setCurrentPhotoDataUrl] = React.useState(\"\");\n  const fileInputRefLibrary = React.useRef(\n    /** @type {HTMLInputElement | null} */ (null),\n  );\n  const fileInputRefCamera = React.useRef(\n    /** @type {HTMLInputElement | null} */ (null),\n  );\n  const [filterStatus, setFilterStatus] = React.useState(\"all\"); // all|draft|done\n  const [filterPhoto, setFilterPhoto] = React.useState(\"all\"); // all|with|without\n  const [filterPass, setFilterPass] = React.useState(\"all\"); // all|pass|fail\n  const [includePhotos, setIncludePhotos] = React.useState(true);\n  const [exifTimestamp, setExifTimestamp] = React.useState(\"\");\n\n  const handleRowGPS = async (rowIndex) => {\n    if (!(\"geolocation\" in navigator)) {\n      alert(\"Geolocation not supported\");\n      return;\n    }\n    try {\n      const pos = await new Promise((resolve, reject) =>\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 10000,\n        }),\n      );\n      const { latitude, longitude } = pos.coords || {};\n      if (latitude != null && longitude != null) {\n        store.updateCollectedPole(rowIndex, {\n          latitude: latitude.toFixed(6),\n          longitude: longitude.toFixed(6),\n        });\n      }\n    } catch (e) {\n      alert(`Failed to get location: ${e?.message || e}`);\n    }\n  };\n\n  const onDone = async () => {\n    setSaving(true);\n    try {\n      const id = poleId || `${(store.collectedPoles?.length || 0) + 1}`;\n      const item = {\n        id,\n        latitude: store.poleLatitude || \"\",\n        longitude: store.poleLongitude || \"\",\n        height: store.poleHeight || \"\",\n        poleClass: store.poleClass || \"\",\n        powerHeight: store.existingPowerHeight || \"\",\n        voltage: store.existingPowerVoltage || \"distribution\",\n        hasTransformer: !!store.hasTransformer,\n        spanDistance: store.spanDistance || \"\",\n        adjacentPoleHeight: store.adjacentPoleHeight || \"\",\n        attachmentType: store.attachmentType || \"\",\n        status: \"done\",\n        photoDataUrl: currentPhotoDataUrl || \"\",\n        timestamp: exifTimestamp || new Date().toISOString(),\n        jobId: store.currentJobId || \"\",\n      };\n      store.addCollectedPole(item);\n      setPoleId(\"\");\n      // Optionally clear coordinates to encourage fresh GPS per pole\n      store.setPoleLatitude(\"\");\n      store.setPoleLongitude(\"\");\n      setCurrentPhotoDataUrl(\"\");\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const onSaveDraft = async () => {\n    setSaving(true);\n    try {\n      const id = poleId || `${(store.collectedPoles?.length || 0) + 1}`;\n      const item = {\n        id,\n        latitude: store.poleLatitude || \"\",\n        longitude: store.poleLongitude || \"\",\n        height: store.poleHeight || \"\",\n        poleClass: store.poleClass || \"\",\n        powerHeight: store.existingPowerHeight || \"\",\n        voltage: store.existingPowerVoltage || \"distribution\",\n        hasTransformer: !!store.hasTransformer,\n        spanDistance: store.spanDistance || \"\",\n        adjacentPoleHeight: store.adjacentPoleHeight || \"\",\n        attachmentType: store.attachmentType || \"\",\n        status: \"draft\",\n        photoDataUrl: currentPhotoDataUrl || \"\",\n        timestamp: exifTimestamp || new Date().toISOString(),\n        jobId: store.currentJobId || \"\",\n      };\n      store.addCollectedPole(item);\n      setPoleId(\"\");\n      // keep GPS for quick successive drafts\n      setCurrentPhotoDataUrl(\"\");\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const onSelectPhoto = async (file) => {\n    if (!file) return;\n    try {\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const dataUrl = String(reader.result || \"\");\n        setCurrentPhotoDataUrl(dataUrl);\n        // Try EXIF extraction (GPS + DateTime)\n        try {\n          const { default: exifr } = await import(\"exifr\");\n          const exif = await exifr(file, { gps: true });\n          if (exif) {\n            const lat = exif.GPS?.latitude;\n            const lon = exif.GPS?.longitude;\n            const dt = exif.DateTimeOriginal || exif.CreateDate;\n            if (typeof lat === \"number\" && typeof lon === \"number\") {\n              // Do not override if already set; otherwise fill from EXIF\n              if (!store.poleLatitude) store.setPoleLatitude(lat.toFixed(6));\n              if (!store.poleLongitude) store.setPoleLongitude(lon.toFixed(6));\n            }\n            if (dt && !isNaN(new Date(dt).getTime())) {\n              setExifTimestamp(new Date(dt).toISOString());\n            }\n          }\n        } catch (e) {\n          if (import.meta?.env?.DEV) console.warn(\"EXIF parse failed\", e);\n        }\n      };\n      reader.readAsDataURL(file);\n    } catch (e) {\n      // log only in dev to avoid noisy console in prod\n      if (import.meta?.env?.DEV) console.warn(\"Photo selection failed\", e);\n    }\n  };\n\n  const exportCollected = () => {\n    const activeJob = (store.jobs || []).find(\n      (j) => j.id === store.currentJobId,\n    );\n    const header = [\n      \"id\",\n      \"latitude\",\n      \"longitude\",\n      \"height\",\n      \"class\",\n      \"powerHeight\",\n      \"voltage\",\n      \"hasTransformer\",\n      \"spanDistance\",\n      \"adjacentPoleHeight\",\n      \"attachmentType\",\n      \"status\",\n      \"hasPhoto\",\n      \"timestamp\",\n      \"asBuiltAttachHeight\",\n      \"asBuiltPowerHeight\",\n      \"varianceIn\",\n      \"variancePass\",\n      \"commCompany\",\n    ];\n    const rows = (store.collectedPoles || [])\n      .filter((p) => !store.currentJobId || p.jobId === store.currentJobId)\n      .map((p) => [\n        p.id || \"\",\n        p.latitude || \"\",\n        p.longitude || \"\",\n        p.height || \"\",\n        p.poleClass || \"\",\n        p.powerHeight || \"\",\n        p.voltage || \"\",\n        p.hasTransformer ? \"Y\" : \"N\",\n        p.spanDistance || \"\",\n        p.adjacentPoleHeight || \"\",\n        p.attachmentType || \"\",\n        p.status || \"draft\",\n        p.photoDataUrl ? \"Y\" : \"N\",\n        p.timestamp || \"\",\n        p.asBuilt?.attachHeight || \"\",\n        p.asBuilt?.powerHeight || \"\",\n        computeVarianceIn(p.asBuilt?.attachHeight, p.height),\n        evaluateVariancePass(\n          p.asBuilt?.attachHeight,\n          p.height,\n          store.presetProfile,\n        ),\n        activeJob?.commCompany || \"\",\n      ]);\n    const csv = [\n      header.join(\",\"),\n      ...rows.map((r) =>\n        r.map((v) => `${String(v).replaceAll('\"', '\"\"')}`).join(\",\"),\n      ),\n    ].join(\"\\n\");\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"collected-poles.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const exportFirst25 = () => {\n    const subset = (store.collectedPoles || [])\n      .filter((p) => !store.currentJobId || p.jobId === store.currentJobId)\n      .slice(0, 25);\n    const header = [\n      \"id\",\n      \"latitude\",\n      \"longitude\",\n      \"height\",\n      \"class\",\n      \"powerHeight\",\n      \"voltage\",\n      \"hasTransformer\",\n      \"spanDistance\",\n      \"adjacentPoleHeight\",\n      \"attachmentType\",\n      \"status\",\n      \"hasPhoto\",\n      \"timestamp\",\n      \"asBuiltAttachHeight\",\n      \"asBuiltPowerHeight\",\n      \"varianceIn\",\n      \"variancePass\",\n    ];\n    const rows = subset.map((p) => [\n      p.id || \"\",\n      p.latitude || \"\",\n      p.longitude || \"\",\n      p.height || \"\",\n      p.poleClass || \"\",\n      p.powerHeight || \"\",\n      p.voltage || \"\",\n      p.hasTransformer ? \"Y\" : \"N\",\n      p.spanDistance || \"\",\n      p.adjacentPoleHeight || \"\",\n      p.attachmentType || \"\",\n      p.status || \"draft\",\n      p.photoDataUrl ? \"Y\" : \"N\",\n      p.timestamp || \"\",\n      p.asBuilt?.attachHeight || \"\",\n      p.asBuilt?.powerHeight || \"\",\n      computeVarianceIn(p.asBuilt?.attachHeight, p.height),\n      evaluateVariancePass(\n        p.asBuilt?.attachHeight,\n        p.height,\n        store.presetProfile,\n      ),\n    ]);\n    const csv = [\n      header.join(\",\"),\n      ...rows.map((r) =>\n        r.map((v) => `${String(v).replaceAll('\"', '\"\"')}`).join(\",\"),\n      ),\n    ].join(\"\\n\");\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"collected-poles-first-25.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const exportSpansZip = async () => {\n    try {\n      const JSZip = (await import(\"jszip\")).default;\n      const zip = new JSZip();\n      const polesAll = (store.collectedPoles || []).filter(\n        (p) => !store.currentJobId || p.jobId === store.currentJobId,\n      );\n      const activeJob = (store.jobs || []).find(\n        (j) => j.id === store.currentJobId,\n      );\n      const effectiveProfile = (() => {\n        const baseName =\n          activeJob?.submissionProfileName || store.currentSubmissionProfile;\n        const base =\n          (store.submissionProfiles || []).find((p) => p.name === baseName) ||\n          {};\n        return {\n          ...base,\n          ...(activeJob?.submissionProfileOverrides || {}),\n          name: base?.name,\n        };\n      })();\n      // annotate variance for FE manifest convenience\n      const poles = polesAll.map((p) => ({\n        ...p,\n        _varianceIn: computeVarianceIn(p.asBuilt?.attachHeight, p.height),\n        _variancePass: evaluateVariancePass(\n          p.asBuilt?.attachHeight,\n          p.height,\n          store.presetProfile,\n        ),\n      }));\n      const { header, rows, fileLabel } = buildManifest(\n        \"firstEnergy\",\n        poles,\n        activeJob,\n      );\n      zip.file(\"manifest.csv\", csvFrom(header, rows));\n      // Include job profile summary\n      zip.file(\n        \"job-profile.json\",\n        JSON.stringify(\n          {\n            jobId: activeJob?.id || \"\",\n            jobName: activeJob?.name || \"\",\n            owner: activeJob?.jobOwner || store.jobOwner || \"\",\n            commCompany: activeJob?.commCompany || \"\",\n            submissionProfile: effectiveProfile,\n            includePhotos,\n          },\n          null,\n          2,\n        ),\n      );\n      // Photos folder (optional) + index\n      if (includePhotos) {\n        const photos = zip.folder(\"photos\");\n        const index = [];\n        for (const p of poles) {\n          if (!p.photoDataUrl) continue;\n          const safeId = p.id\n            ? String(p.id).replaceAll(/[^A-Za-z0-9_-]/g, \"_\")\n            : `row-${index.length + 1}`;\n          const dataUrl = String(p.photoDataUrl);\n          const m = dataUrl.match(/^data:(.+);base64,(.*)$/);\n          const mime = m?.[1] || \"image/jpeg\";\n          const base64 = m?.[2] || dataUrl.split(\",\")[1];\n          const ext = mime.includes(\"png\")\n            ? \"png\"\n            : mime.includes(\"webp\")\n              ? \"webp\"\n              : \"jpg\";\n          const file = `${safeId}.${ext}`;\n          if (base64 && photos) {\n            photos.file(file, base64, { base64: true });\n            index.push(`${safeId},${file},${mime}`);\n          }\n        }\n        if (index.length && photos)\n          photos.file(\"index.csv\", [\"id,file,mime\", ...index].join(\"\\n\"));\n      }\n      const blob = await zip.generateAsync({ type: \"blob\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${fileLabel}.zip`;\n      a.click();\n      URL.revokeObjectURL(url);\n    } catch (e) {\n      alert(`ZIP export failed: ${e?.message || e}`);\n    }\n  };\n\n  const exportAepZip = async () => {\n    try {\n      const JSZip = (await import(\"jszip\")).default;\n      const zip = new JSZip();\n      const poles = (store.collectedPoles || []).filter(\n        (p) => !store.currentJobId || p.jobId === store.currentJobId,\n      );\n      const activeJob = (store.jobs || []).find(\n        (j) => j.id === store.currentJobId,\n      );\n      const effectiveProfile = (() => {\n        const baseName =\n          activeJob?.submissionProfileName || store.currentSubmissionProfile;\n        const base =\n          (store.submissionProfiles || []).find((p) => p.name === baseName) ||\n          {};\n        return {\n          ...base,\n          ...(activeJob?.submissionProfileOverrides || {}),\n          name: base?.name,\n        };\n      })();\n      const { header, rows, fileLabel } = buildManifest(\n        \"aep\",\n        poles,\n        activeJob,\n      );\n      zip.file(\"manifest.csv\", csvFrom(header, rows));\n      zip.file(\n        \"job-profile.json\",\n        JSON.stringify(\n          {\n            jobId: activeJob?.id || \"\",\n            jobName: activeJob?.name || \"\",\n            owner: activeJob?.jobOwner || store.jobOwner || \"\",\n            commCompany: activeJob?.commCompany || \"\",\n            submissionProfile: effectiveProfile,\n            includePhotos,\n          },\n          null,\n          2,\n        ),\n      );\n      if (includePhotos) {\n        const photos = zip.folder(\"photos\");\n        const index = [];\n        for (const p of poles) {\n          if (!p.photoDataUrl) continue;\n          const safeId = p.id\n            ? String(p.id).replaceAll(/[^A-Za-z0-9_-]/g, \"_\")\n            : `row-${index.length + 1}`;\n          const dataUrl = String(p.photoDataUrl);\n          const m = dataUrl.match(/^data:(.+);base64,(.*)$/);\n          const mime = m?.[1] || \"image/jpeg\";\n          const base64 = m?.[2] || dataUrl.split(\",\")[1];\n          const ext = mime.includes(\"png\")\n            ? \"png\"\n            : mime.includes(\"webp\")\n              ? \"webp\"\n              : \"jpg\";\n          const file = `${safeId}.${ext}`;\n          if (base64 && photos) {\n            photos.file(file, base64, { base64: true });\n            index.push(`${safeId},${file},${mime}`);\n          }\n        }\n        if (index.length && photos)\n          photos.file(\"index.csv\", [\"id,file,mime\", ...index].join(\"\\n\"));\n      }\n      const blob = await zip.generateAsync({ type: \"blob\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${fileLabel}.zip`;\n      a.click();\n      URL.revokeObjectURL(url);\n    } catch (e) {\n      alert(`ZIP export failed: ${e?.message || e}`);\n    }\n  };\n\n  const exportByProfile = async () => {\n    const job = (store.jobs || []).find((j) => j.id === store.currentJobId);\n    const name = job?.submissionProfileName || store.currentSubmissionProfile;\n    if (name === \"firstEnergy\") return exportSpansZip();\n    if (name === \"aep\") return exportAepZip();\n    if (name === \"duke\") {\n      // Use generic rows-by-profile path to build a Duke manifest package\n      const scoped = (store.collectedPoles || []).filter(\n        (p) => !store.currentJobId || p.jobId === store.currentJobId,\n      );\n      return exportRowsByProfile(scoped, \"\");\n    }\n    // default fallback to CSV zip-like minimal package (reuse AEP format)\n    return exportAepZip();\n  };\n\n  // Derived filtered rows for QA\n  const rows = React.useMemo(() => {\n    const list = (store.collectedPoles || []).filter(\n      (p) => !store.currentJobId || p.jobId === store.currentJobId,\n    );\n    return list.filter((p) => {\n      if (filterStatus !== \"all\" && (p.status || \"draft\") !== filterStatus)\n        return false;\n      if (filterPhoto === \"with\" && !p.photoDataUrl) return false;\n      if (filterPhoto === \"without\" && !!p.photoDataUrl) return false;\n      if (filterPass !== \"all\") {\n        const verdict = evaluateVariancePass(\n          p.asBuilt?.attachHeight,\n          p.height,\n          store.presetProfile,\n        );\n        if (filterPass === \"pass\" && verdict !== \"PASS\") return false;\n        if (filterPass === \"fail\" && verdict !== \"FAIL\") return false;\n      }\n      return true;\n    });\n  }, [\n    store.collectedPoles,\n    store.currentJobId,\n    filterStatus,\n    filterPhoto,\n    filterPass,\n    store.presetProfile,\n  ]);\n\n  const summary = React.useMemo(() => {\n    const scoped = (store.collectedPoles || []).filter(\n      (p) => !store.currentJobId || p.jobId === store.currentJobId,\n    );\n    const total = scoped.length;\n    const done = scoped.filter((p) => (p.status || \"draft\") === \"done\").length;\n    const withPhoto = scoped.filter((p) => !!p.photoDataUrl).length;\n    const pass = scoped.filter(\n      (p) =>\n        evaluateVariancePass(\n          p.asBuilt?.attachHeight,\n          p.height,\n          store.presetProfile,\n        ) === \"PASS\",\n    ).length;\n    const fail = scoped.filter(\n      (p) =>\n        evaluateVariancePass(\n          p.asBuilt?.attachHeight,\n          p.height,\n          store.presetProfile,\n        ) === \"FAIL\",\n    ).length;\n    return { total, done, withPhoto, pass, fail };\n  }, [store.collectedPoles, store.currentJobId, store.presetProfile]);\n\n  const exportFilteredByProfile = async () => {\n    const JSZip = (await import(\"jszip\")).default;\n    const zip = new JSZip();\n    const activeJob = (store.jobs || []).find(\n      (j) => j.id === store.currentJobId,\n    );\n    const name =\n      activeJob?.submissionProfileName || store.currentSubmissionProfile;\n    const effectiveProfile = (() => {\n      const base =\n        (store.submissionProfiles || []).find((p) => p.name === name) || {};\n      return {\n        ...base,\n        ...(activeJob?.submissionProfileOverrides || {}),\n        name: base?.name,\n      };\n    })();\n    // scope to filtered rows\n    const filtered = rows;\n    const withVariance = filtered.map((p) => ({\n      ...p,\n      _varianceIn: computeVarianceIn(p.asBuilt?.attachHeight, p.height),\n      _variancePass: evaluateVariancePass(\n        p.asBuilt?.attachHeight,\n        p.height,\n        store.presetProfile,\n      ),\n    }));\n    const {\n      header,\n      rows: manifestRows,\n      fileLabel,\n    } = buildManifest(name, withVariance, activeJob);\n    zip.file(\"manifest.csv\", csvFrom(header, manifestRows));\n    zip.file(\n      \"job-profile.json\",\n      JSON.stringify(\n        {\n          jobId: activeJob?.id || \"\",\n          jobName: activeJob?.name || \"\",\n          owner: activeJob?.jobOwner || store.jobOwner || \"\",\n          commCompany: activeJob?.commCompany || \"\",\n          submissionProfile: effectiveProfile,\n          includePhotos,\n          filter: {\n            status: filterStatus,\n            photo: filterPhoto,\n            variance: filterPass,\n          },\n        },\n        null,\n        2,\n      ),\n    );\n    if (includePhotos) {\n      const photos = zip.folder(\"photos\");\n      const index = [];\n      for (const p of filtered) {\n        if (!p.photoDataUrl) continue;\n        const safeId = p.id\n          ? String(p.id).replaceAll(/[^A-Za-z0-9_-]/g, \"_\")\n          : `row-${index.length + 1}`;\n        const dataUrl = String(p.photoDataUrl);\n        const m = dataUrl.match(/^data:(.+);base64,(.*)$/);\n        const mime = m?.[1] || \"image/jpeg\";\n        const base64 = m?.[2] || dataUrl.split(\",\")[1];\n        const ext = mime.includes(\"png\")\n          ? \"png\"\n          : mime.includes(\"webp\")\n            ? \"webp\"\n            : \"jpg\";\n        const file = `${safeId}.${ext}`;\n        if (base64 && photos) {\n          photos.file(file, base64, { base64: true });\n          index.push(`${safeId},${file},${mime}`);\n        }\n      }\n      if (index.length && photos)\n        photos.file(\"index.csv\", [\"id,file,mime\", ...index].join(\"\\n\"));\n    }\n    const blob = await zip.generateAsync({ type: \"blob\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `${fileLabel}-filtered.zip`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const exportDoneOnly = async () => {\n    const keep = rows.filter((p) => (p.status || \"draft\") === \"done\");\n    await exportRowsByProfile(keep, \"-done\");\n  };\n  const exportFailOnly = async () => {\n    const keep = rows.filter(\n      (p) =>\n        evaluateVariancePass(\n          p.asBuilt?.attachHeight,\n          p.height,\n          store.presetProfile,\n        ) === \"FAIL\",\n    );\n    await exportRowsByProfile(keep, \"-fail\");\n  };\n\n  // Geospatial exports: GeoJSON, KML, KMZ\n  const exportGeo = async (type) => {\n    const { buildGeoJSON, exportGeoJSON, exportKML, exportKMZ } = await import(\n      \"../utils/geodata\"\n    );\n    const job =\n      (store.jobs || []).find((j) => j.id === store.currentJobId) || {};\n    // Prefer collected poles scoped to current job; augment with imported poles for span endpoints\n    const jobPoles = (store.collectedPoles || []).filter(\n      (p) => !store.currentJobId || p.jobId === store.currentJobId,\n    );\n    const importedPoles = store.importedPoles || [];\n    // Merge by id (job poles take precedence)\n    const byId = new Map();\n    for (const p of importedPoles) if (p?.id) byId.set(String(p.id), p);\n    for (const p of jobPoles) if (p?.id) byId.set(String(p.id), p);\n    const poles = jobPoles.length\n      ? Array.from(\n          new Set([\n            ...jobPoles,\n            // include imported poles only if they have coordinates and aren't already present by exact ref equality\n            ...importedPoles.filter(\n              (ip) =>\n                ip &&\n                ip.id &&\n                !jobPoles.find((jp) => String(jp.id) === String(ip.id)),\n            ),\n          ]),\n        )\n      : importedPoles;\n\n    // Spans: if imported spans exist, use them; otherwise fall back to neighbor inference on job poles\n    let spans = [];\n    if ((store.importedSpans || []).length) {\n      spans = (store.importedSpans || []).map((s, idx) => ({\n        id: s.id || `S${idx + 1}`,\n        fromId: s.fromId,\n        toId: s.toId,\n        length: s.length,\n        proposedAttach: s.proposedAttach,\n        environment: s.environment,\n      }));\n    } else {\n      // Derive simple neighbor spans from ordered job poles with coordinates\n      for (let i = 1; i < jobPoles.length; i++) {\n        const prev = jobPoles[i - 1];\n        const cur = jobPoles[i];\n        if (\n          prev?.latitude &&\n          prev?.longitude &&\n          cur?.latitude &&\n          cur?.longitude\n        ) {\n          spans.push({\n            id: `${prev.id || i - 1}-${cur.id || i}`,\n            fromId: prev.id,\n            toId: cur.id,\n            length: prev.spanDistance || \"\",\n            proposedAttach: cur.height || \"\",\n          });\n        }\n      }\n    }\n\n    const fc = buildGeoJSON({ poles, spans, job });\n    if (!fc.features.length)\n      return alert(\"No geolocated poles/spans to export\");\n    if (type === \"geojson\")\n      return exportGeoJSON(fc, `${job.name || \"job\"}-geodata.geojson`);\n    if (type === \"kml\")\n      return exportKML(fc, `${job.name || \"job\"}-geodata.kml`);\n    if (type === \"kmz\")\n      return exportKMZ(fc, `${job.name || \"job\"}-geodata.kmz`);\n  };\n  const exportRowsByProfile = async (subset, suffix) => {\n    const JSZip = (await import(\"jszip\")).default;\n    const zip = new JSZip();\n    const activeJob = (store.jobs || []).find(\n      (j) => j.id === store.currentJobId,\n    );\n    const name =\n      activeJob?.submissionProfileName || store.currentSubmissionProfile;\n    const effectiveProfile = (() => {\n      const base =\n        (store.submissionProfiles || []).find((p) => p.name === name) || {};\n      return {\n        ...base,\n        ...(activeJob?.submissionProfileOverrides || {}),\n        name: base?.name,\n      };\n    })();\n    const withVariance = subset.map((p) => ({\n      ...p,\n      _varianceIn: computeVarianceIn(p.asBuilt?.attachHeight, p.height),\n      _variancePass: evaluateVariancePass(\n        p.asBuilt?.attachHeight,\n        p.height,\n        store.presetProfile,\n      ),\n    }));\n    const {\n      header,\n      rows: manifestRows,\n      fileLabel,\n    } = buildManifest(name, withVariance, activeJob);\n    zip.file(\"manifest.csv\", csvFrom(header, manifestRows));\n    zip.file(\n      \"job-profile.json\",\n      JSON.stringify(\n        {\n          jobId: activeJob?.id || \"\",\n          jobName: activeJob?.name || \"\",\n          owner: activeJob?.jobOwner || store.jobOwner || \"\",\n          commCompany: activeJob?.commCompany || \"\",\n          submissionProfile: effectiveProfile,\n          includePhotos,\n          subset: suffix,\n        },\n        null,\n        2,\n      ),\n    );\n    if (includePhotos) {\n      const photos = zip.folder(\"photos\");\n      const index = [];\n      for (const p of subset) {\n        if (!p.photoDataUrl) continue;\n        const safeId = p.id\n          ? String(p.id).replaceAll(/[^A-Za-z0-9_-]/g, \"_\")\n          : `row-${index.length + 1}`;\n        const dataUrl = String(p.photoDataUrl);\n        const m = dataUrl.match(/^data:(.+);base64,(.*)$/);\n        const mime = m?.[1] || \"image/jpeg\";\n        const base64 = m?.[2] || dataUrl.split(\",\")[1];\n        const ext = mime.includes(\"png\")\n          ? \"png\"\n          : mime.includes(\"webp\")\n            ? \"webp\"\n            : \"jpg\";\n        const file = `${safeId}.${ext}`;\n        if (base64 && photos) {\n          photos.file(file, base64, { base64: true });\n          index.push(`${safeId},${file},${mime}`);\n        }\n      }\n      if (index.length && photos)\n        photos.file(\"index.csv\", [\"id,file,mime\", ...index].join(\"\\n\"));\n    }\n    const blob = await zip.generateAsync({ type: \"blob\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `${fileLabel}${suffix}.zip`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // Midspan Verification: show spans for which we have both endpoints and can compute midspan\n  const midspanChecks = React.useMemo(() => {\n    const scoped = (store.collectedPoles || []).filter(\n      (p) => !store.currentJobId || p.jobId === store.currentJobId,\n    );\n    const byId = new Map();\n    scoped.forEach((p) => {\n      if (p?.id) byId.set(String(p.id), p);\n    });\n    // if imported spans exist, use them to determine adjacency; else infer neighbor pairs\n    const spans = (store.importedSpans || []).length\n      ? store.importedSpans\n      : scoped.slice(1).map((cur, i) => ({\n          fromId: scoped[i]?.id,\n          toId: cur.id,\n          id: `${scoped[i]?.id || i}-${cur.id || i + 1}`,\n          length: scoped[i]?.spanDistance,\n        }));\n    const rows = [];\n    for (const s of spans) {\n      const a = s.fromId ? byId.get(String(s.fromId)) : null;\n      const b = s.toId ? byId.get(String(s.toId)) : null;\n      if (!a || !b) continue; // need both endpoints collected\n      // Use FE-style profile merging used elsewhere\n      const activeJob = (store.jobs || []).find(\n        (j) => j.id === store.currentJobId,\n      );\n      const profileName =\n        activeJob?.submissionProfileName || store.currentSubmissionProfile;\n      const baseProfile = (store.submissionProfiles || []).find(\n        (p) => p.name === profileName,\n      );\n      const mergedProfile = baseProfile\n        ? { ...baseProfile, ...(activeJob?.submissionProfileOverrides || {}) }\n        : undefined;\n      const out = computeAnalysis({\n        poleHeight: a.height,\n        poleClass: a.poleClass,\n        poleLatitude: a.latitude,\n        poleLongitude: a.longitude,\n        adjacentPoleHeight: b.height,\n        adjacentPoleLatitude: b.latitude,\n        adjacentPoleLongitude: b.longitude,\n        existingPowerHeight: a.powerHeight,\n        existingPowerVoltage: store.existingPowerVoltage,\n        spanDistance: s.length,\n        isNewConstruction: store.isNewConstruction,\n        attachmentType: store.attachmentType,\n        cableDiameter: store.cableDiameter,\n        windSpeed: store.windSpeed,\n        spanEnvironment: store.spanEnvironment,\n        dripLoopHeight: store.dripLoopHeight,\n        proposedLineHeight: a.height, // proposed comm at A row, if present\n        existingLines: store.existingLines,\n        iceThicknessIn: store.iceThicknessIn,\n        hasTransformer: a.hasTransformer,\n        presetProfile: store.presetProfile,\n        customMinTopSpace: store.customMinTopSpace,\n        customRoadClearance: store.customRoadClearance,\n        customCommToPower: store.customCommToPower,\n        powerReference: store.powerReference,\n        jobOwner: store.jobOwner,\n        submissionProfile: mergedProfile,\n        adjacentPowerHeight: b.powerHeight,\n      });\n      if (out?.results) {\n        rows.push({\n          id: s.id || `${a.id}-${b.id}`,\n          from: a.id,\n          to: b.id,\n          midspanFt: out.results.span.midspanFt,\n          groundTargetFt: out.results.clearances.groundClearance,\n        });\n      }\n    }\n    return rows;\n  }, [store]);\n\n  return (\n    <div className=\"rounded border p-3 no-print\">\n      <div className=\"flex items-center justify-between mb-2\">\n        <div className=\"font-medium flex items-center gap-2\">\n          Field Collection\n          <button\n            className=\"text-xs px-2 py-0.5 border rounded text-blue-700 border-blue-300 hover:bg-blue-50\"\n            onClick={() => openHelp && openHelp(\"help-field-collection\")}\n            title=\"Open Help to Field Collection\"\n          >\n            Help\n          </button>\n        </div>\n        <div className=\"text-xs text-gray-600\">\n          Collected: {summary.total} (Done: {summary.done}, Pass: {summary.pass}\n          , Fail: {summary.fail}, Photos: {summary.withPhoto}) | Max per FE\n          batch: 25 — Hint: set Owner to \"Mon Power\" (FirstEnergy) when\n          applicable\n        </div>\n      </div>\n      {/* QA Filters */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2 mb-3\">\n        <label className=\"text-sm text-gray-700 grid gap-1\">\n          <span className=\"font-medium\">Filter Status</span>\n          <select\n            className=\"border rounded px-2 py-1\"\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"draft\">Draft</option>\n            <option value=\"done\">Done</option>\n          </select>\n        </label>\n        <label className=\"text-sm text-gray-700 grid gap-1\">\n          <span className=\"font-medium\">Filter Photos</span>\n          <select\n            className=\"border rounded px-2 py-1\"\n            value={filterPhoto}\n            onChange={(e) => setFilterPhoto(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"with\">With Photo</option>\n            <option value=\"without\">Without Photo</option>\n          </select>\n        </label>\n        <label className=\"text-sm text-gray-700 grid gap-1\">\n          <span className=\"font-medium\">Filter FE Variance</span>\n          <select\n            className=\"border rounded px-2 py-1\"\n            value={filterPass}\n            onChange={(e) => setFilterPass(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"pass\">PASS</option>\n            <option value=\"fail\">FAIL</option>\n          </select>\n        </label>\n        <div className=\"text-xs text-gray-600 flex items-end\">\n          Job:{\" \"}\n          {store.currentJobId\n            ? (store.jobs || []).find((j) => j.id === store.currentJobId)\n                ?.name || \"—\"\n            : \"—\"}\n        </div>\n      </div>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3\">\n        <Input\n          label=\"Pole ID\"\n          value={poleId}\n          onChange={(e) => setPoleId(e.target.value)}\n          placeholder=\"e.g., Tag # or temp\"\n        />\n        <Input\n          label=\"Latitude\"\n          value={store.poleLatitude}\n          onChange={(e) => store.setPoleLatitude(e.target.value)}\n          placeholder=\"40.123456\"\n        />\n        <div className=\"grid grid-cols-[1fr_auto] gap-2 items-end\">\n          <Input\n            label=\"Longitude\"\n            value={store.poleLongitude}\n            onChange={(e) => store.setPoleLongitude(e.target.value)}\n            placeholder=\"-82.987654\"\n          />\n          <button\n            className=\"h-9 px-3 border rounded text-sm\"\n            onClick={async () => {\n              if (!(\"geolocation\" in navigator)) {\n                alert(\"Geolocation not supported\");\n                return;\n              }\n              try {\n                const pos = await new Promise((resolve, reject) =>\n                  navigator.geolocation.getCurrentPosition(resolve, reject, {\n                    enableHighAccuracy: true,\n                    timeout: 10000,\n                  }),\n                );\n                const { latitude, longitude } = pos.coords || {};\n                if (latitude != null && longitude != null) {\n                  store.setPoleLatitude(latitude.toFixed(6));\n                  store.setPoleLongitude(longitude.toFixed(6));\n                }\n              } catch (e) {\n                alert(`Failed to get location: ${e?.message || e}`);\n              }\n            }}\n          >\n            GPS\n          </button>\n        </div>\n        <div className=\"grid grid-cols-2 gap-2 items-end\">\n          <div className=\"grid gap-1\">\n            <span className=\"text-sm font-medium text-gray-700\">Photo</span>\n            <div className=\"flex items-center gap-2\">\n              <button\n                className=\"h-9 px-2 border rounded text-sm\"\n                onClick={() => fileInputRefCamera.current?.click()}\n                title=\"Take photo\"\n              >\n                Camera\n              </button>\n              <button\n                className=\"h-9 px-2 border rounded text-sm\"\n                onClick={() => fileInputRefLibrary.current?.click()}\n                title=\"Choose from library\"\n              >\n                Library\n              </button>\n              {currentPhotoDataUrl ? (\n                <img\n                  src={currentPhotoDataUrl}\n                  alt=\"preview\"\n                  className=\"h-9 w-9 object-cover rounded border\"\n                />\n              ) : null}\n              {currentPhotoDataUrl ? (\n                <button\n                  className=\"h-9 px-2 border rounded text-sm\"\n                  onClick={() => setCurrentPhotoDataUrl(\"\")}\n                >\n                  Remove\n                </button>\n              ) : null}\n              <input\n                ref={fileInputRefCamera}\n                type=\"file\"\n                accept=\"image/*\"\n                capture=\"environment\"\n                className=\"hidden\"\n                onChange={(e) => onSelectPhoto(e.target.files?.[0])}\n              />\n              <input\n                ref={fileInputRefLibrary}\n                type=\"file\"\n                accept=\"image/*\"\n                className=\"hidden\"\n                onChange={(e) => onSelectPhoto(e.target.files?.[0])}\n              />\n            </div>\n          </div>\n          <div className=\"flex items-end justify-end gap-2\">\n            <button\n              className=\"h-9 px-3 border rounded text-sm\"\n              onClick={onSaveDraft}\n              disabled={saving}\n            >\n              Save Draft\n            </button>\n            <button\n              className=\"h-9 px-3 border rounded text-sm\"\n              onClick={onDone}\n              disabled={saving}\n            >\n              DONE\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {showBottomActions ? (\n        <div className=\"mt-3 flex items-center gap-2\">\n          <label className=\"text-xs inline-flex items-center gap-2 mr-1\">\n            <input\n              type=\"checkbox\"\n              className=\"h-4 w-4\"\n              checked={includePhotos}\n              onChange={(e) => setIncludePhotos(e.target.checked)}\n            />\n            <span>Include photos</span>\n          </label>\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={exportCollected}\n            disabled={!store.collectedPoles?.length}\n          >\n            Export CSV\n          </button>\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={exportFirst25}\n            disabled={(store.collectedPoles?.length || 0) < 1}\n          >\n            Export First 25\n          </button>\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={exportSpansZip}\n            disabled={(store.collectedPoles?.length || 0) < 1}\n          >\n            Export FE SPANS ZIP\n          </button>\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={exportByProfile}\n            disabled={(store.collectedPoles?.length || 0) < 1}\n          >\n            Export Utility ZIP (Profile)\n          </button>\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-xs text-gray-500\">Geospatial:</span>\n            <button\n              className=\"px-2 py-1 border rounded text-xs\"\n              onClick={() => exportGeo(\"geojson\")}\n              disabled={(store.collectedPoles?.length || 0) < 1}\n            >\n              GeoJSON\n            </button>\n            <button\n              className=\"px-2 py-1 border rounded text-xs\"\n              onClick={() => exportGeo(\"kml\")}\n              disabled={(store.collectedPoles?.length || 0) < 1}\n            >\n              KML\n            </button>\n            <button\n              className=\"px-2 py-1 border rounded text-xs\"\n              onClick={() => exportGeo(\"kmz\")}\n              disabled={(store.collectedPoles?.length || 0) < 1}\n            >\n              KMZ\n            </button>\n            {/* Shapefile export omitted intentionally to avoid heavy deps */}\n          </div>\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={exportAepZip}\n            disabled={(store.collectedPoles?.length || 0) < 1}\n          >\n            Export AEP ZIP\n          </button>\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={exportFilteredByProfile}\n            disabled={!rows.length}\n          >\n            Export Filtered ZIP\n          </button>\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={exportDoneOnly}\n            disabled={!rows.length}\n          >\n            Export DONE-only\n          </button>\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={exportFailOnly}\n            disabled={!rows.length}\n          >\n            Export FAIL-only\n          </button>\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={() => store.setCollectedPoles?.([])}\n            disabled={!store.collectedPoles?.length}\n          >\n            Clear\n          </button>\n        </div>\n      ) : null}\n\n      <div className=\"mt-3 overflow-auto\">\n        {/* Midspan Verification */}\n        {midspanChecks.length ? (\n          <div className=\"mb-3 rounded border p-2\">\n            <div className=\"font-medium mb-1\">Midspan Verification</div>\n            <table className=\"w-full text-xs\">\n              <thead>\n                <tr className=\"text-left text-gray-600\">\n                  <th className=\"p-1\">Span</th>\n                  <th className=\"p-1\">Midspan</th>\n                  <th className=\"p-1\">Target</th>\n                  <th className=\"p-1\">Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {midspanChecks.map((row) => {\n                  const ok =\n                    row.midspanFt == null\n                      ? false\n                      : row.midspanFt >= row.groundTargetFt;\n                  return (\n                    <tr key={row.id} className=\"border-t\">\n                      <td className=\"p-1\">\n                        {row.from} → {row.to}\n                      </td>\n                      <td className=\"p-1\">\n                        {row.midspanFt != null\n                          ? store.useTickMarkFormat\n                            ? formatFeetInchesTickMarks(row.midspanFt)\n                            : formatFeetInchesVerbose(row.midspanFt)\n                          : \"—\"}\n                      </td>\n                      <td className=\"p-1\">\n                        {store.useTickMarkFormat\n                          ? formatFeetInchesTickMarks(row.groundTargetFt)\n                          : formatFeetInchesVerbose(row.groundTargetFt)}\n                      </td>\n                      <td\n                        className={\n                          ok ? \"p-1 text-emerald-700\" : \"p-1 text-red-700\"\n                        }\n                      >\n                        {ok ? \"PASS\" : \"FAIL\"}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n            <div className=\"text-[11px] text-gray-600 mt-1\">\n              Midspan is evaluated only when both poles of the span are\n              collected. Span distance is auto-derived from geolocation when not\n              provided. Make-ready lowering at either end propagates to midspan\n              in the calculation.\n            </div>\n          </div>\n        ) : null}\n        {/* Summary Dashboard */}\n        <div className=\"grid grid-cols-2 md:grid-cols-5 gap-2 mb-2 text-sm\">\n          <div className=\"border rounded p-2\">\n            <div className=\"text-xs text-gray-500\">Total</div>\n            <div className=\"text-lg font-semibold\">{summary.total}</div>\n          </div>\n          <div className=\"border rounded p-2\">\n            <div className=\"text-xs text-gray-500\">Done</div>\n            <div className=\"text-lg font-semibold\">{summary.done}</div>\n          </div>\n          <div className=\"border rounded p-2\">\n            <div className=\"text-xs text-gray-500\">Photos</div>\n            <div className=\"text-lg font-semibold\">{summary.withPhoto}</div>\n          </div>\n          <div className=\"border rounded p-2\">\n            <div className=\"text-xs text-gray-500\">PASS</div>\n            <div className=\"text-lg font-semibold text-emerald-700\">\n              {summary.pass}\n            </div>\n          </div>\n          <div className=\"border rounded p-2\">\n            <div className=\"text-xs text-gray-500\">FAIL</div>\n            <div className=\"text-lg font-semibold text-red-700\">\n              {summary.fail}\n            </div>\n          </div>\n        </div>\n\n        <table className=\"w-full text-sm min-w-[920px]\">\n          <thead>\n            <tr className=\"text-left text-gray-600\">\n              <th className=\"p-2\">ID</th>\n              <th className=\"p-2\">Latitude</th>\n              <th className=\"p-2\">Longitude</th>\n              <th className=\"p-2\">Height</th>\n              <th className=\"p-2\">Class</th>\n              <th className=\"p-2\">Power Ht</th>\n              <th className=\"p-2\">Voltage</th>\n              <th className=\"p-2\">XFMR</th>\n              <th className=\"p-2\">Span</th>\n              <th className=\"p-2\">In°</th>\n              <th className=\"p-2\">Out°</th>\n              <th className=\"p-2\">PULL (ft)</th>\n              <th className=\"p-2\">Autofill</th>\n              <th className=\"p-2\">As-built Attach</th>\n              <th className=\"p-2\">As-built Power</th>\n              <th className=\"p-2\">Δ (in)</th>\n              <th className=\"p-2\">FE Pass</th>\n              <th className=\"p-2\">Photo</th>\n              <th className=\"p-2\">Status</th>\n              <th className=\"p-2\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((p, i) => (\n              <tr key={`${p.id}-${i}`} className=\"border-t\">\n                <td className=\"p-2\">\n                  <input\n                    className=\"border rounded px-2 py-1 w-28\"\n                    value={p.id || \"\"}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, { id: e.target.value })\n                    }\n                  />\n                </td>\n                <td className=\"p-2\">\n                  <div className=\"grid grid-cols-[1fr_auto] gap-2 items-center\">\n                    <input\n                      className=\"border rounded px-2 py-1 w-32\"\n                      value={p.latitude || \"\"}\n                      onChange={(e) =>\n                        store.updateCollectedPole(i, {\n                          latitude: e.target.value,\n                        })\n                      }\n                    />\n                    <button\n                      className=\"px-2 py-1 border rounded text-xs\"\n                      onClick={() => handleRowGPS(i)}\n                    >\n                      GPS\n                    </button>\n                  </div>\n                </td>\n                <td className=\"p-2\">\n                  <input\n                    className=\"border rounded px-2 py-1 w-32\"\n                    value={p.longitude || \"\"}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, {\n                        longitude: e.target.value,\n                      })\n                    }\n                  />\n                </td>\n                <td className=\"p-2\">\n                  <input\n                    className=\"border rounded px-2 py-1 w-24\"\n                    value={p.height || \"\"}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, { height: e.target.value })\n                    }\n                    placeholder=\"ft/in\"\n                  />\n                </td>\n                <td className=\"p-2\">\n                  <input\n                    className=\"border rounded px-2 py-1 w-24\"\n                    value={p.poleClass || \"\"}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, {\n                        poleClass: e.target.value,\n                      })\n                    }\n                  />\n                </td>\n                <td className=\"p-2\">\n                  <input\n                    className=\"border rounded px-2 py-1 w-24\"\n                    value={p.powerHeight || \"\"}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, {\n                        powerHeight: e.target.value,\n                      })\n                    }\n                    placeholder=\"ft/in\"\n                  />\n                </td>\n                <td className=\"p-2\">\n                  <select\n                    className=\"border rounded px-2 py-1\"\n                    value={p.voltage || \"distribution\"}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, { voltage: e.target.value })\n                    }\n                  >\n                    <option value=\"distribution\">distribution</option>\n                    <option value=\"transmission\">transmission</option>\n                    <option value=\"communication\">communication</option>\n                  </select>\n                </td>\n                <td className=\"p-2 text-center\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"h-4 w-4\"\n                    checked={!!p.hasTransformer}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, {\n                        hasTransformer: e.target.checked,\n                      })\n                    }\n                  />\n                </td>\n                <td className=\"p-2\">\n                  <input\n                    className=\"border rounded px-2 py-1 w-20\"\n                    value={p.spanDistance || \"\"}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, {\n                        spanDistance: e.target.value,\n                      })\n                    }\n                  />\n                </td>\n                <td className=\"p-2\">\n                  <input\n                    className=\"border rounded px-2 py-1 w-20\"\n                    placeholder=\"In°\"\n                    value={p.incomingBearingDeg ?? \"\"}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, {\n                        incomingBearingDeg:\n                          e.target.value === \"\" ? \"\" : Number(e.target.value),\n                      })\n                    }\n                  />\n                </td>\n                <td className=\"p-2\">\n                  <input\n                    className=\"border rounded px-2 py-1 w-20\"\n                    placeholder=\"Out°\"\n                    value={p.outgoingBearingDeg ?? \"\"}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, {\n                        outgoingBearingDeg:\n                          e.target.value === \"\" ? \"\" : Number(e.target.value),\n                      })\n                    }\n                  />\n                </td>\n                <td className=\"p-2\">\n                  <input\n                    className=\"border rounded px-2 py-1 w-24\"\n                    placeholder=\"PULL ft\"\n                    value={p.PULL_ft ?? \"\"}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, { PULL_ft: e.target.value })\n                    }\n                  />\n                </td>\n                <td className=\"p-2\">\n                  <button\n                    className=\"px-2 py-1 border rounded text-xs\"\n                    onClick={() => {\n                      const incoming = Number(p.incomingBearingDeg);\n                      const outgoing = Number(p.outgoingBearingDeg);\n                      const spanBase =\n                        Number(p.spanDistance) ||\n                        Number(store.spanDistance) ||\n                        100;\n                      if (\n                        Number.isFinite(incoming) &&\n                        Number.isFinite(outgoing)\n                      ) {\n                        const { pullFt } = computePullAutofill({\n                          incomingBearingDeg: incoming,\n                          outgoingBearingDeg: outgoing,\n                          baseSpanFt: spanBase,\n                        });\n                        store.updateCollectedPole(i, {\n                          PULL_ft: Math.round(pullFt * 100) / 100,\n                        });\n                      }\n                    }}\n                  >\n                    Autofill\n                  </button>\n                </td>\n                <td className=\"p-2\">\n                  <input\n                    className=\"border rounded px-2 py-1 w-28\"\n                    value={p.asBuilt?.attachHeight || \"\"}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, {\n                        asBuilt: {\n                          ...(p.asBuilt || {}),\n                          attachHeight: e.target.value,\n                        },\n                      })\n                    }\n                    placeholder=\"ft/in\"\n                  />\n                </td>\n                <td className=\"p-2\">\n                  <input\n                    className=\"border rounded px-2 py-1 w-28\"\n                    value={p.asBuilt?.powerHeight || \"\"}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, {\n                        asBuilt: {\n                          ...(p.asBuilt || {}),\n                          powerHeight: e.target.value,\n                        },\n                      })\n                    }\n                    placeholder=\"ft/in\"\n                  />\n                </td>\n                <td className=\"p-2 w-20\">\n                  {computeVarianceIn(p.asBuilt?.attachHeight, p.height)}\n                </td>\n                <td className=\"p-2 w-24\">\n                  <span\n                    className={\n                      evaluateVariancePass(\n                        p.asBuilt?.attachHeight,\n                        p.height,\n                        store.presetProfile,\n                      ) === \"PASS\"\n                        ? \"text-emerald-700\"\n                        : \"text-red-700\"\n                    }\n                  >\n                    {evaluateVariancePass(\n                      p.asBuilt?.attachHeight,\n                      p.height,\n                      store.presetProfile,\n                    )}\n                  </span>\n                </td>\n                <td className=\"p-2\">\n                  <div className=\"flex items-center gap-2\">\n                    {p.photoDataUrl ? (\n                      <img\n                        src={p.photoDataUrl}\n                        alt=\"photo\"\n                        className=\"h-10 w-10 object-cover rounded border\"\n                      />\n                    ) : (\n                      <span className=\"text-xs text-gray-500\">None</span>\n                    )}\n                    <label className=\"hidden\">\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        capture=\"environment\"\n                        onChange={(e) => {\n                          const f = e.target.files?.[0];\n                          if (!f) return;\n                          const reader = new FileReader();\n                          reader.onload = () =>\n                            store.updateCollectedPole(i, {\n                              photoDataUrl: String(reader.result || \"\"),\n                            });\n                          reader.readAsDataURL(f);\n                          e.target.value = \"\";\n                        }}\n                      />\n                    </label>\n                    <button\n                      className=\"px-2 py-1 border rounded text-xs\"\n                      onClick={() => {\n                        const input = document.createElement(\"input\");\n                        input.type = \"file\";\n                        input.accept = \"image/*\";\n                        input.setAttribute(\"capture\", \"environment\");\n                        input.onchange = (e) => {\n                          const f = /** @type {HTMLInputElement} */ (e.target)\n                            ?.files?.[0];\n                          if (!f) return;\n                          const reader = new FileReader();\n                          reader.onload = () =>\n                            store.updateCollectedPole(i, {\n                              photoDataUrl: String(reader.result || \"\"),\n                            });\n                          reader.readAsDataURL(f);\n                        };\n                        input.click();\n                      }}\n                    >\n                      Camera\n                    </button>\n                    <button\n                      className=\"px-2 py-1 border rounded text-xs\"\n                      onClick={() => {\n                        const input = document.createElement(\"input\");\n                        input.type = \"file\";\n                        input.accept = \"image/*\";\n                        input.onchange = (e) => {\n                          const f = /** @type {HTMLInputElement} */ (e.target)\n                            ?.files?.[0];\n                          if (!f) return;\n                          const reader = new FileReader();\n                          reader.onload = () =>\n                            store.updateCollectedPole(i, {\n                              photoDataUrl: String(reader.result || \"\"),\n                            });\n                          reader.readAsDataURL(f);\n                        };\n                        input.click();\n                      }}\n                    >\n                      Library\n                    </button>\n                    {p.photoDataUrl ? (\n                      <button\n                        className=\"px-2 py-1 border rounded text-xs\"\n                        onClick={() =>\n                          store.updateCollectedPole(i, { photoDataUrl: \"\" })\n                        }\n                      >\n                        Remove\n                      </button>\n                    ) : null}\n                  </div>\n                </td>\n                <td className=\"p-2\">\n                  <select\n                    className=\"border rounded px-2 py-1\"\n                    value={p.status || \"draft\"}\n                    onChange={(e) =>\n                      store.updateCollectedPole(i, { status: e.target.value })\n                    }\n                  >\n                    <option value=\"draft\">draft</option>\n                    <option value=\"done\">done</option>\n                  </select>\n                </td>\n                <td className=\"p-2 text-right\">\n                  <button\n                    className=\"text-xs text-red-600\"\n                    onClick={() => store.removeCollectedPole(i)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nfunction BatchReport() {\n  const store = useAppStore();\n  const poleById = React.useMemo(() => {\n    const map = new Map();\n    for (const p of store.importedPoles || [])\n      if (p?.id) map.set(String(p.id), p);\n    return map;\n  }, [store.importedPoles]);\n  const items = React.useMemo(() => {\n    const rows = [];\n    for (const s of store.importedSpans || []) {\n      const from = s.fromId ? poleById.get(String(s.fromId)) : null;\n      const to = s.toId ? poleById.get(String(s.toId)) : null;\n      // Auto span length when endpoints available\n      const autoLen =\n        from?.latitude != null &&\n        from?.longitude != null &&\n        to?.latitude != null &&\n        to?.longitude != null\n          ? Math.round(\n              (() => {\n                const toRad = (d) => (d * Math.PI) / 180;\n                const Rm = 6371000;\n                const dLat = toRad(\n                  (Number(to.latitude) || 0) - (Number(from.latitude) || 0),\n                );\n                const dLon = toRad(\n                  (Number(to.longitude) || 0) - (Number(from.longitude) || 0),\n                );\n                const a =\n                  Math.sin(dLat / 2) ** 2 +\n                  Math.cos(toRad(Number(from.latitude) || 0)) *\n                    Math.cos(toRad(Number(to.latitude) || 0)) *\n                    Math.sin(dLon / 2) ** 2;\n                const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n                const meters = Rm * c;\n                return meters * 3.28084;\n              })(),\n            )\n          : undefined;\n      const preferAuto = !!store.preferAutoSpanLength;\n      const inputs = {\n        poleHeight: from?.height || store.poleHeight,\n        poleClass: from?.class || store.poleClass,\n        existingPowerHeight: from?.powerHeight || store.existingPowerHeight,\n        existingPowerVoltage: store.existingPowerVoltage,\n        spanDistance: preferAuto\n          ? autoLen || s.length || store.spanDistance\n          : s.length || store.spanDistance || autoLen,\n        isNewConstruction: store.isNewConstruction,\n        adjacentPoleHeight: to?.height || store.adjacentPoleHeight,\n        attachmentType: store.attachmentType,\n        cableDiameter: store.cableDiameter,\n        windSpeed: store.windSpeed,\n        spanEnvironment: store.spanEnvironment,\n        streetLightHeight: store.streetLightHeight,\n        dripLoopHeight: store.dripLoopHeight,\n        proposedLineHeight: s.proposedAttach || store.proposedLineHeight,\n        existingLines: store.importedExistingLines?.length\n          ? store.importedExistingLines\n          : store.existingLines,\n        iceThicknessIn: store.iceThicknessIn,\n        hasTransformer: !!from?.hasTransformer || store.hasTransformer,\n        presetProfile: store.presetProfile,\n        customMinTopSpace: store.customMinTopSpace,\n        customRoadClearance: store.customRoadClearance,\n        customCommToPower: store.customCommToPower,\n      };\n      const out = computeAnalysis({\n        ...inputs,\n        powerReference: store.powerReference,\n        jobOwner: store.jobOwner,\n        submissionProfile: (store.submissionProfiles || []).find(\n          (p) => p.name === store.currentSubmissionProfile,\n        ),\n      });\n      if (out?.results) rows.push({ span: s, from, to, ...out });\n    }\n    return rows;\n  }, [store, poleById]);\n  if (!items.length)\n    return <div className=\"text-gray-600\">No imported spans to report.</div>;\n  return (\n    <div className=\"grid gap-6 text-left\">\n      {items.map((it, idx) => (\n        <div key={idx} className={idx > 0 ? \"page-break\" : \"\"}>\n          <div className=\"flex items-end justify-between\">\n            <div>\n              <h2 className=\"text-lg font-semibold\">\n                Span Report {it.span?.id ? `#${it.span.id}` : `#${idx + 1}`}\n              </h2>\n              <div className=\"text-sm text-gray-600\">\n                Project: {store.projectName || \"—\"} | Applicant:{\" \"}\n                {store.applicantName || \"—\"} | Job #: {store.jobNumber || \"—\"}\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                From: {it.from?.id || \"—\"} to {it.to?.id || \"—\"} | Length:{\" \"}\n                {Math.round(it.results.span.spanFt)} ft\n              </div>\n            </div>\n            <div className=\"text-right\">\n              {store.logoDataUrl ? (\n                <img\n                  src={store.logoDataUrl}\n                  alt=\"Logo\"\n                  className=\"h-10 inline-block\"\n                />\n              ) : (\n                <div className=\"text-2xl font-bold\">PolePro</div>\n              )}\n              <div className=\"text-xs text-gray-500\">\n                Generated {new Date().toLocaleDateString()}\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-2\">\n            Attach: {it.results.attach.proposedAttachFmt} | Sag:{\" \"}\n            {it.results.span.sagFmt} | Midspan: {it.results.span.midspanFmt}\n          </div>\n          <div className=\"my-2\">\n            <SpanDiagram\n              attachFt={it.results.attach.proposedAttachFt}\n              midspanFt={it.results.span.midspanFt}\n              spanFt={it.results.span.spanFt}\n              groundTargetFt={it.results.clearances.groundClearance}\n            />\n          </div>\n          {it.warnings?.length ? (\n            <div className=\"mt-2\">\n              <div className=\"font-medium\">Warnings</div>\n              <ul className=\"list-disc pl-5 text-sm\">\n                {it.warnings.map((w, i) => (\n                  <li key={i}>{w}</li>\n                ))}\n              </ul>\n            </div>\n          ) : null}\n          {it.notes?.length ? (\n            <div className=\"mt-2\">\n              <div className=\"font-medium\">Notes</div>\n              <ul className=\"list-disc pl-5 text-sm\">\n                {it.notes.map((n, i) => (\n                  <li key={i}>{n}</li>\n                ))}\n              </ul>\n            </div>\n          ) : null}\n          <div className=\"mt-2 text-sm text-gray-700\">\n            Estimated cost: ${it.cost ?? 0}\n          </div>\n        </div>\n      ))}\n      {/* Optional: pole profile sheets */}\n      {store.importedPoles?.length ? (\n        <div className=\"page-break\">\n          <h2 className=\"text-lg font-semibold mb-2\">Pole Profile Sheets</h2>\n          <div className=\"grid gap-4\">\n            {store.importedPoles.map((p, i) => (\n              <div key={p.id || i} className={i > 0 ? \"page-break\" : \"\"}>\n                <div className=\"flex items-end justify-between\">\n                  <div>\n                    <div className=\"font-medium\">\n                      Pole {p.id || `#${i + 1}`}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">\n                      Project: {store.projectName || \"—\"} | Applicant:{\" \"}\n                      {store.applicantName || \"—\"} | Job #:{\" \"}\n                      {store.jobNumber || \"—\"}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">\n                      Height: {p.height ? `${Math.round(p.height)} ft` : \"—\"} |\n                      Class: {p.class || \"—\"} | Power Height:{\" \"}\n                      {p.powerHeight ?? \"—\"}\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    {store.logoDataUrl ? (\n                      <img\n                        src={store.logoDataUrl}\n                        alt=\"Logo\"\n                        className=\"h-10 inline-block\"\n                      />\n                    ) : (\n                      <div className=\"text-2xl font-bold\">PolePro</div>\n                    )}\n                    <div className=\"text-xs text-gray-500\">\n                      Generated {new Date().toLocaleDateString()}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mt-2 text-sm text-gray-700\">\n                  Transformer: {p.hasTransformer ? \"Yes\" : \"No\"} | Location:{\" \"}\n                  {p.latitude ?? \"—\"}, {p.longitude ?? \"—\"}\n                </div>\n                {/* Space for photos or diagrams can be added later */}\n              </div>\n            ))}\n          </div>\n        </div>\n      ) : null}\n      <div className=\"no-print\">\n        <button\n          className=\"px-2 py-1 border rounded text-sm\"\n          onClick={() => window.print()}\n        >\n          Print Batch\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction ImportPanel() {\n  const store = useAppStore();\n  const [file, setFile] = React.useState(/** @type {File | null} */ (null));\n  const [status, setStatus] = React.useState(\"\");\n  const [mapping, setMapping] = React.useState(MAPPING_PRESETS[0].mapping);\n  const [batchPreview, setBatchPreview] = React.useState({\n    poles: 0,\n    spans: 0,\n    lines: 0,\n  });\n  const [csvText, setCsvText] = React.useState(\"\");\n  const [csvPolesText, setCsvPolesText] = React.useState(\"\");\n  const [csvSpansText, setCsvSpansText] = React.useState(\"\");\n  const [poleImportErrors, setPoleImportErrors] = React.useState([]);\n  const [spanImportErrors, setSpanImportErrors] = React.useState([]);\n  const [showConfig, setShowConfig] = React.useState(false);\n  const [showAutoPreview, setShowAutoPreview] = React.useState(false);\n  const [autoPreview, setAutoPreview] = React.useState(\n    /** @type {any} */ (null),\n  );\n  const [attrKeys, setAttrKeys] = React.useState(\n    /** @type {{pole: string[], span: string[], line: string[]}} */ ({\n      pole: [],\n      span: [],\n      line: [],\n    }),\n  );\n  const onImport = async () => {\n    if (!file) return;\n    try {\n      setStatus(\"Parsing…\");\n      const fc = await importGeospatialFile(file);\n      // Gather attribute keys for config modal if needed\n      try {\n        const parts = splitFeaturesByGeometry(fc);\n        const pk = parts.poles[0] ? getAttributeKeys(parts.poles[0]) : [];\n        const lk = parts.lines[0] ? getAttributeKeys(parts.lines[0]) : [];\n        setAttrKeys({ pole: pk, span: lk, line: lk });\n      } catch (error) {\n        console.error(\"Error analyzing feature attributes:\", error);\n        setAttrKeys({ pole: [], span: [], line: [] });\n      }\n      setStatus(\"Mapping…\");\n      const data = mapGeoJSONToAppData(fc, mapping);\n      // Apply first pole/span into form and lines into existingLines list\n      if (data.poleTable[0]) {\n        const p = data.poleTable[0];\n        if (p.height) store.setPoleHeight(String(Math.round(p.height)));\n        if (p.class) store.setPoleClass(p.class);\n        if (p.powerHeight) store.setExistingPowerHeight(String(p.powerHeight));\n        if (p.hasTransformer) store.setHasTransformer(true);\n      }\n      if (data.spanTable[0]) {\n        const s = data.spanTable[0];\n        if (s.length) store.setSpanDistance(String(Math.round(s.length)));\n        if (s.proposedAttach)\n          store.setProposedLineHeight(String(s.proposedAttach));\n      }\n      if (data.existingLines?.length) {\n        store.setExistingLines(data.existingLines);\n      }\n      // Save full batch to store for later batch reporting\n      store.setImportedPoles(data.poleTable);\n      store.setImportedSpans(data.spanTable);\n      store.setImportedExistingLines(data.existingLines);\n      setBatchPreview({\n        poles: data.poleTable.length,\n        spans: data.spanTable.length,\n        lines: data.existingLines.length,\n      });\n      setStatus(\n        `Imported ${data.poleTable.length} poles, ${data.spanTable.length} spans, ${data.existingLines.length} lines.`,\n      );\n    } catch (e) {\n      setStatus(`Import failed: ${e.message || e}`);\n    }\n  };\n  const update = (g, k, v) =>\n    setMapping((prev) => ({ ...prev, [g]: { ...prev[g], [k]: v } }));\n  return (\n    <div className=\"rounded border p-3 no-print\">\n      <div className=\"font-medium mb-2\">Import KML/KMZ/Shapefile</div>\n      <div className=\"grid gap-2 md:grid-cols-3\">\n        <label className=\"text-sm text-gray-700 grid gap-1\">\n          <span className=\"font-medium\">File</span>\n          <input\n            type=\"file\"\n            accept=\".kml,.kmz,.zip,.shp,.dbf\"\n            onChange={(e) => setFile(e.target.files?.[0] || null)}\n          />\n        </label>\n        <button\n          className=\"self-end h-9 px-3 border rounded\"\n          onClick={onImport}\n          disabled={!file}\n        >\n          Import\n        </button>\n        <div className=\"self-end text-sm text-gray-600\">{status}</div>\n      </div>\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-2 mt-2\">\n        <label className=\"text-sm text-gray-700 grid gap-1\">\n          <span className=\"font-medium\">Mapping Preset</span>\n          <select\n            className=\"border rounded px-2 py-1\"\n            value={store.mappingPreset}\n            onChange={(e) => {\n              store.setMappingPreset(e.target.value);\n              const preset = MAPPING_PRESETS.find(\n                (p) => p.value === e.target.value,\n              );\n              if (preset) setMapping(preset.mapping);\n            }}\n          >\n            {MAPPING_PRESETS.map((p) => (\n              <option key={p.value} value={p.value}>\n                {p.label}\n              </option>\n            ))}\n          </select>\n        </label>\n        <div className=\"text-sm text-gray-600 flex items-end\">\n          Batch: {batchPreview.poles} poles, {batchPreview.spans} spans,{\" \"}\n          {batchPreview.lines} lines loaded\n        </div>\n        <button\n          className=\"self-end h-9 px-3 border rounded\"\n          onClick={() => {\n            // Apply imported first records again (handy after edits)\n            const data = {\n              poleTable: store.importedPoles,\n              spanTable: store.importedSpans,\n              existingLines: store.importedExistingLines,\n            };\n            if (data.poleTable[0]) {\n              const p = data.poleTable[0];\n              if (p.height) store.setPoleHeight(String(Math.round(p.height)));\n              if (p.class) store.setPoleClass(p.class);\n              if (p.powerHeight)\n                store.setExistingPowerHeight(String(p.powerHeight));\n              store.setHasTransformer(!!p.hasTransformer);\n            }\n            if (data.spanTable[0]) {\n              const s = data.spanTable[0];\n              if (s.length) store.setSpanDistance(String(Math.round(s.length)));\n              if (s.proposedAttach)\n                store.setProposedLineHeight(String(s.proposedAttach));\n            }\n            if (data.existingLines?.length)\n              store.setExistingLines(data.existingLines);\n          }}\n          disabled={!batchPreview.poles && !batchPreview.spans}\n        >\n          Apply First Record\n        </button>\n      </div>\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-2 mt-2\">\n        <label className=\"text-sm text-gray-700 grid gap-1\">\n          <span className=\"font-medium\">Saved Profile</span>\n          <select\n            className=\"border rounded px-2 py-1\"\n            onChange={(e) => {\n              const prof = (store.mappingProfiles || []).find(\n                (p) => p.name === e.target.value,\n              );\n              if (prof) setMapping(prof.mapping);\n            }}\n          >\n            <option value=\"\">Select…</option>\n            {(store.mappingProfiles || []).map((p) => (\n              <option key={p.name} value={p.name}>\n                {p.name}\n              </option>\n            ))}\n          </select>\n        </label>\n        <button\n          className=\"self-end h-9 px-3 border rounded\"\n          onClick={() => setShowConfig(true)}\n        >\n          Configure Mapping\n        </button>\n        <button\n          className=\"self-end h-9 px-3 border rounded\"\n          onClick={() => {\n            const name = prompt(\"Delete saved profile by name:\");\n            if (name) store.removeMappingProfile(name);\n          }}\n        >\n          Delete Profile\n        </button>\n        <button\n          className=\"self-end h-9 px-3 border rounded\"\n          onClick={() => {\n            const oldName = prompt(\n              \"Rename which profile? Enter existing name:\",\n            );\n            if (!oldName) return;\n            const newName = prompt(\"New name:\");\n            if (!newName) return;\n            store.renameMappingProfile(oldName, newName);\n          }}\n        >\n          Rename Profile\n        </button>\n        <button\n          className=\"self-end h-9 px-3 border rounded\"\n          onClick={() => {\n            // Simple auto-map heuristic with preview\n            const choose = (list, keywords) =>\n              (list || []).find((k) =>\n                keywords.some((w) => k.toLowerCase().includes(w)),\n              ) || \"\";\n            const proposal = {\n              pole: {\n                ...mapping.pole,\n                id: choose(attrKeys.pole, [\"id\", \"pole\"]),\n                height: choose(attrKeys.pole, [\"height\", \"hgt\", \"ht\"]),\n                class: choose(attrKeys.pole, [\"class\"]),\n                powerHeight: choose(attrKeys.pole, [\"power\", \"primary\", \"pwr\"]),\n                hasTransformer: choose(attrKeys.pole, [\"xfmr\", \"transformer\"]),\n              },\n              span: {\n                ...mapping.span,\n                id: choose(attrKeys.span, [\"id\", \"span\"]),\n                fromId: choose(attrKeys.span, [\"from\", \"a\", \"start\"]),\n                toId: choose(attrKeys.span, [\"to\", \"b\", \"end\"]),\n                length: choose(attrKeys.span, [\"length\", \"len\", \"span\"]),\n                proposedAttach: choose(attrKeys.span, [\"attach\", \"proposed\"]),\n              },\n              line: {\n                ...mapping.line,\n                type: choose(attrKeys.line, [\"type\", \"line\"]),\n                height: choose(attrKeys.line, [\"height\", \"hgt\", \"ht\"]),\n                company: choose(attrKeys.line, [\"comp\", \"company\", \"owner\"]),\n                makeReady: choose(attrKeys.line, [\"mr\", \"make\"]),\n                makeReadyHeight: choose(attrKeys.line, [\"mr_h\", \"new\", \"mrh\"]),\n              },\n            };\n            setAutoPreview(proposal);\n            setShowAutoPreview(true);\n          }}\n        >\n          Auto-map\n        </button>\n        <button\n          className=\"self-end h-9 px-3 border rounded\"\n          onClick={() => {\n            try {\n              const blob = new Blob(\n                [JSON.stringify(store.mappingProfiles || [], null, 2)],\n                { type: \"application/json\" },\n              );\n              const url = URL.createObjectURL(blob);\n              const a = document.createElement(\"a\");\n              a.href = url;\n              a.download = \"mapping-profiles.json\";\n              a.click();\n              URL.revokeObjectURL(url);\n            } catch (error) {\n              console.error(\"Failed to export mapping profiles:\", error);\n            }\n          }}\n        >\n          Export Profiles\n        </button>\n        <label className=\"self-end h-9 px-3 border rounded inline-flex items-center gap-2 cursor-pointer\">\n          <span>Import Profiles</span>\n          <input\n            type=\"file\"\n            accept=\"application/json\"\n            className=\"hidden\"\n            onChange={async (e) => {\n              const f = e.target.files?.[0];\n              if (!f) return;\n              try {\n                const text = await f.text();\n                const parsed = JSON.parse(text);\n                if (Array.isArray(parsed)) store.setMappingProfiles(parsed);\n              } catch (error) {\n                console.error(\"Failed to import mapping profiles:\", error);\n              }\n              e.target.value = \"\";\n            }}\n          />\n        </label>\n      </div>\n      <details className=\"mt-3\">\n        <summary className=\"cursor-pointer text-sm text-gray-700\">\n          Mapping (attributes → fields)\n        </summary>\n        <div className=\"grid md:grid-cols-3 gap-3 mt-2 text-sm\">\n          {Object.entries(mapping).map(([group, fields]) => (\n            <div key={group} className=\"border rounded p-2\">\n              <div className=\"font-medium mb-1\">{group}</div>\n              {Object.entries(fields).map(([k, v]) => (\n                <label key={k} className=\"grid gap-1 mb-1\">\n                  <span className=\"text-xs uppercase text-gray-500\">{k}</span>\n                  <input\n                    className=\"border rounded px-2 py-1\"\n                    value={v}\n                    onChange={(e) => update(group, k, e.target.value)}\n                  />\n                </label>\n              ))}\n            </div>\n          ))}\n        </div>\n      </details>\n      <details className=\"mt-3\">\n        <summary className=\"cursor-pointer text-sm text-gray-700\">\n          Import Poles from CSV\n        </summary>\n        <div className=\"grid gap-2 mt-2\">\n          <textarea\n            className=\"border rounded p-2 text-xs h-28\"\n            placeholder=\"Paste CSV with headers (example): id,height,class,power_ht,xfmr,latitude,longitude\"\n            value={csvPolesText}\n            onChange={(e) => setCsvPolesText(e.target.value)}\n          />\n          <div className=\"flex items-center gap-2\">\n            <button\n              className=\"px-2 py-1 border rounded text-sm\"\n              onClick={() => {\n                const rows = parsePolesCSV(csvPolesText, mapping.pole);\n                if (rows.length) {\n                  store.setImportedPoles(rows);\n                  setBatchPreview((prev) => ({ ...prev, poles: rows.length }));\n                  setPoleImportErrors([]);\n                }\n              }}\n            >\n              Load (Raw)\n            </button>\n            <button\n              className=\"px-2 py-1 border rounded text-sm bg-blue-50 hover:bg-blue-100\"\n              onClick={async () => {\n                const { data, errors } = await parsePolesCSVValidated(\n                  csvPolesText,\n                  mapping.pole,\n                );\n                if (data.length) {\n                  store.setImportedPoles(data);\n                  setBatchPreview((prev) => ({ ...prev, poles: data.length }));\n                }\n                setPoleImportErrors(errors || []);\n              }}\n            >\n              Load + Validate\n            </button>\n            <div className=\"text-xs text-gray-600\">\n              Populates the Imported Poles table used by batch/exports\n            </div>\n          </div>\n          {!!poleImportErrors.length && (\n            <div\n              className=\"text-xs text-red-600 border border-red-200 rounded p-2 bg-red-50 max-h-40 flex flex-col gap-1\"\n              aria-live=\"polite\"\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"font-semibold\">\n                  Pole Validation Issues ({poleImportErrors.length})\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <button\n                    type=\"button\"\n                    className=\"px-2 py-0.5 border rounded bg-white text-red-700 hover:bg-red-100\"\n                    onClick={() =>\n                      downloadErrorsCSV(\n                        poleImportErrors,\n                        \"pole_validation_errors.csv\",\n                      )\n                    }\n                  >\n                    Export\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"px-2 py-0.5 border rounded bg-white text-gray-600 hover:bg-gray-100\"\n                    onClick={() => setPoleImportErrors([])}\n                  >\n                    Clear\n                  </button>\n                </div>\n              </div>\n              <ul className=\"list-disc pl-4 space-y-0.5 overflow-auto\">\n                {poleImportErrors.slice(0, 8).map((e, i) => (\n                  <li key={i}>{e}</li>\n                ))}\n                {poleImportErrors.length > 8 && (\n                  <li>… {poleImportErrors.length - 8} more</li>\n                )}\n              </ul>\n            </div>\n          )}\n        </div>\n      </details>\n      <details className=\"mt-3\">\n        <summary className=\"cursor-pointer text-sm text-gray-700\">\n          Import Spans from CSV\n        </summary>\n        <div className=\"grid gap-2 mt-2\">\n          <textarea\n            className=\"border rounded p-2 text-xs h-28\"\n            placeholder=\"Paste CSV with headers (example): id,from_id,to_id,length,attach\"\n            value={csvSpansText}\n            onChange={(e) => setCsvSpansText(e.target.value)}\n          />\n          <div className=\"flex items-center gap-2\">\n            <button\n              className=\"px-2 py-1 border rounded text-sm\"\n              onClick={() => {\n                const rows = parseSpansCSV(csvSpansText, mapping.span);\n                if (rows.length) {\n                  store.setImportedSpans(rows);\n                  setBatchPreview((prev) => ({ ...prev, spans: rows.length }));\n                  setSpanImportErrors([]);\n                }\n              }}\n            >\n              Load (Raw)\n            </button>\n            <button\n              className=\"px-2 py-1 border rounded text-sm bg-blue-50 hover:bg-blue-100\"\n              onClick={async () => {\n                const { data, errors } = await parseSpansCSVValidated(\n                  csvSpansText,\n                  mapping.span,\n                );\n                if (data.length) {\n                  store.setImportedSpans(data);\n                  setBatchPreview((prev) => ({ ...prev, spans: data.length }));\n                }\n                setSpanImportErrors(errors || []);\n              }}\n            >\n              Load + Validate\n            </button>\n            <div className=\"text-xs text-gray-600\">\n              Populates the Imported Spans table used by batch/exports\n            </div>\n          </div>\n          {!!spanImportErrors.length && (\n            <div\n              className=\"text-xs text-red-600 border border-red-200 rounded p-2 bg-red-50 max-h-40 flex flex-col gap-1\"\n              aria-live=\"polite\"\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"font-semibold\">\n                  Span Validation Issues ({spanImportErrors.length})\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <button\n                    type=\"button\"\n                    className=\"px-2 py-0.5 border rounded bg-white text-red-700 hover:bg-red-100\"\n                    onClick={() =>\n                      downloadErrorsCSV(\n                        spanImportErrors,\n                        \"span_validation_errors.csv\",\n                      )\n                    }\n                  >\n                    Export\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"px-2 py-0.5 border rounded bg-white text-gray-600 hover:bg-gray-100\"\n                    onClick={() => setSpanImportErrors([])}\n                  >\n                    Clear\n                  </button>\n                </div>\n              </div>\n              <ul className=\"list-disc pl-4 space-y-0.5 overflow-auto\">\n                {spanImportErrors.slice(0, 8).map((e, i) => (\n                  <li key={i}>{e}</li>\n                ))}\n                {spanImportErrors.length > 8 && (\n                  <li>… {spanImportErrors.length - 8} more</li>\n                )}\n              </ul>\n            </div>\n          )}\n        </div>\n      </details>\n      <details className=\"mt-3\">\n        <summary className=\"cursor-pointer text-sm text-gray-700\">\n          Import Existing Lines from CSV\n        </summary>\n        <div className=\"grid gap-2 mt-2\">\n          <textarea\n            className=\"border rounded p-2 text-xs h-28\"\n            placeholder=\"Paste CSV with headers: type,height,company,makeReady,makeReadyHeight\"\n            value={csvText}\n            onChange={(e) => setCsvText(e.target.value)}\n          />\n          <div className=\"flex items-center gap-2\">\n            <button\n              className=\"px-2 py-1 border rounded text-sm\"\n              onClick={() => {\n                const rows = parseExistingLinesCSV(csvText, mapping.line);\n                if (rows.length) store.setExistingLines(rows);\n              }}\n            >\n              Use CSV\n            </button>\n            <div className=\"text-xs text-gray-600\">\n              This replaces the Existing Lines table\n            </div>\n          </div>\n        </div>\n      </details>\n      <MappingConfigModal\n        open={showConfig}\n        onClose={() => setShowConfig(false)}\n        mapping={mapping}\n        onChange={setMapping}\n        attrKeys={attrKeys}\n        onSave={(name, map) => {\n          store.addMappingProfile(name, map);\n          setShowConfig(false);\n        }}\n      />\n      <AutoMapPreviewModal\n        open={showAutoPreview}\n        onClose={() => setShowAutoPreview(false)}\n        current={mapping}\n        proposal={autoPreview}\n        onApply={() => {\n          if (autoPreview) setMapping(autoPreview);\n          setShowAutoPreview(false);\n        }}\n      />\n    </div>\n  );\n}\n\nfunction MappingConfigModal({\n  open,\n  onClose,\n  mapping,\n  onChange,\n  attrKeys,\n  onSave,\n}) {\n  const [name, setName] = React.useState(\"\");\n\n  if (!open) return null;\n\n  const groups = [\"pole\", \"span\", \"line\"];\n  const setField = (g, k, v) =>\n    onChange((prev) => ({ ...prev, [g]: { ...prev[g], [k]: v } }));\n  return (\n    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded shadow-lg w-[90vw] max-w-3xl p-4\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <div className=\"font-medium\">Configure Mapping</div>\n          <button className=\"text-sm\" onClick={onClose}>\n            Close\n          </button>\n        </div>\n        <div className=\"text-xs text-gray-600 mb-3\">\n          Click a detected attribute on the right to fill a field.\n        </div>\n        <div className=\"grid md:grid-cols-3 gap-3 text-sm\">\n          {groups.map((g) => (\n            <div key={g} className=\"border rounded p-2\">\n              <div className=\"font-medium mb-1\">{g}</div>\n              {Object.entries(mapping[g] || {}).map(([k, v]) => (\n                <div\n                  key={k}\n                  className=\"grid grid-cols-2 gap-1 items-center mb-1\"\n                >\n                  <div className=\"text-xs uppercase text-gray-500\">{k}</div>\n                  <div className=\"flex items-center gap-1\">\n                    <input\n                      className=\"border rounded px-2 py-1 w-full\"\n                      value={v}\n                      onChange={(e) => setField(g, k, e.target.value)}\n                    />\n                    <div className=\"flex flex-wrap gap-1\">\n                      {(attrKeys[g] || []).slice(0, 6).map((a) => (\n                        <button\n                          key={a}\n                          className=\"text-[10px] px-1 py-0.5 border rounded\"\n                          onClick={() => setField(g, k, a)}\n                        >\n                          {a}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n        <div className=\"flex items-center gap-2 mt-3\">\n          <input\n            className=\"border rounded px-2 py-1 text-sm\"\n            placeholder=\"Save as profile name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <button\n            className=\"px-2 py-1 border rounded text-sm\"\n            onClick={() => {\n              if (name) onSave(name, mapping);\n            }}\n          >\n            Save Profile\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\nfunction LogoUpload() {\n  const { setLogoDataUrl } = useAppStore();\n  const onFile = async (e) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => setLogoDataUrl(reader.result);\n    reader.readAsDataURL(file);\n  };\n  return (\n    <label className=\"text-sm text-gray-700 grid gap-1\">\n      <span className=\"font-medium\">Logo</span>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        className=\"border rounded px-2 py-1\"\n        onChange={onFile}\n      />\n    </label>\n  );\n}\n\nfunction HelpModal({ open, onClose, initialSection }) {\n  React.useEffect(() => {\n    if (!open || !initialSection) return;\n    // defer to allow modal render\n    const t = setTimeout(() => {\n      const el = document.getElementById(initialSection);\n      if (el) el.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }, 50);\n    return () => clearTimeout(t);\n  }, [open, initialSection]);\n  if (!open) return null;\n\n  const downloadSampleCSV = () => {\n    const sampleCSV = `Project Name,Pole Height,Pole Class,Existing Power Height,Span Distance,Wind Speed\nSample Project 1,35ft,Class 4,30' 6\",150,90\nSample Project 2,40',Class 3,32ft 0in,200,85\nSample Project 3,45ft,Class 2,35' 6\",175,95`;\n    const blob = new Blob([sampleCSV], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"sample-pole-data.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const downloadSampleKML = () => {\n    const sampleKML = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<kml xmlns=\"http://www.opengis.net/kml/2.2\">\n  <Document>\n    <name>Sample Pole Data</name>\n    <Placemark>\n      <name>Pole 1</name>\n      <ExtendedData>\n        <Data name=\"height\"><value>35ft</value></Data>\n        <Data name=\"class\"><value>Class 4</value></Data>\n        <Data name=\"power_ht\"><value>30' 6\"</value></Data>\n      </ExtendedData>\n      <Point><coordinates>-82.5,40.0,0</coordinates></Point>\n    </Placemark>\n  </Document>\n</kml>`;\n    const blob = new Blob([sampleKML], {\n      type: \"application/vnd.google-earth.kml+xml\",\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"sample-poles.kml\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] overflow-auto break-anywhere\">\n        <div className=\"sticky top-0 bg-white border-b px-6 py-4 flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">Application Use Directions</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700 text-xl\"\n          >\n            &times;\n          </button>\n        </div>\n\n        <div className=\"p-6 space-y-6\">\n          {/* Rules & Suggestions (Global + by Area) */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-blue-800 mb-3\">\n              📐 Rules & Suggestions (How to use this tool effectively)\n            </h3>\n            <div className=\"space-y-4 text-sm\">\n              <div className=\"bg-blue-50 p-3 rounded\">\n                <h4 className=\"font-medium mb-1\">Global</h4>\n                <ul className=\"list-disc list-inside space-y-1\">\n                  <li>\n                    Data auto‑saves locally as you type. The section “Save”\n                    buttons record a timestamp for your reference.\n                  </li>\n                  <li>\n                    Opening links uses a new tab so you don’t lose work.\n                    Downloads are generated in‑browser; no data leaves your\n                    device unless you export.\n                  </li>\n                  <li>\n                    Use the sticky workflow nav to jump between sections;\n                    collapsed sections still retain their data.\n                  </li>\n                  <li>\n                    Height inputs accept tick marks (15' 6\") or verbose (15ft\n                    6in). Prefer consistent formatting per job.\n                  </li>\n                </ul>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-4\">\n                <div className=\"bg-gray-50 p-3 rounded\">\n                  <h4 className=\"font-medium mb-1\">Job Setup</h4>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    <li>\n                      Pick a Submission Profile before running reports; FE\n                      subsidiaries enable 44\" comm‑to‑power rules.\n                    </li>\n                    <li>\n                      Set power reference (Neutral/Secondary/Drip Loop/Power) to\n                      align with field conditions.\n                    </li>\n                    <li>\n                      Use the Profile Tuner to adjust targets when a permit\n                      requires specific values.\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"bg-gray-50 p-3 rounded\">\n                  <h4 className=\"font-medium mb-1\">Import & Map</h4>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    <li>\n                      Map headers using presets for ArcGIS/ikeGPS/Katapult Pro;\n                      save your mapping for reuse.\n                    </li>\n                    <li>\n                      Spans with endpoints get auto lengths (Haversine). If no\n                      field length is present, geometry is used.\n                    </li>\n                    <li>\n                      KML/KMZ/Shapefile: ensure coordinates are WGS84\n                      (EPSG:4326) for best results.\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"bg-gray-50 p-3 rounded\">\n                  <h4 className=\"font-medium mb-1\">Spans Editor</h4>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    <li>\n                      Prefer Auto Length uses endpoints first; manual length is\n                      a fallback when auto is missing.\n                    </li>\n                    <li>\n                      Δ (delta) = |manual − auto|. Default big‑Δ threshold is 10\n                      ft (configurable).\n                    </li>\n                    <li>\n                      Compute/Recompute All refreshes Cached Midspans used by\n                      Batch Report and Permit Pack.\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"bg-gray-50 p-3 rounded\">\n                  <h4 className=\"font-medium mb-1\">Existing Lines</h4>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    <li>\n                      Use Make‑Ready only when vertical moves are intended;\n                      enter new heights to estimate costs.\n                    </li>\n                    <li>\n                      Keep owner/company filled for downstream cost allocation\n                      and submission artifacts.\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"bg-gray-50 p-3 rounded\">\n                  <h4 className=\"font-medium mb-1\">Field Collection</h4>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    <li>\n                      Tap GPS per row to capture fresh coordinates; EXIF from\n                      photos augments GPS/time when available.\n                    </li>\n                    <li>\n                      Mark DONE only after verifying ID, GPS, and key heights;\n                      use filters to review Drafts/FAILs.\n                    </li>\n                    <li>\n                      First 25 export is optimized for utilities like\n                      FirstEnergy SPANS.\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"bg-gray-50 p-3 rounded\">\n                  <h4 className=\"font-medium mb-1\">Results & Exports</h4>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    <li>\n                      PASS/FAIL badges compare midspan or separations to the\n                      controlling target (segment‑aware).\n                    </li>\n                    <li>\n                      Permit Pack requires Cached Midspans for QA/QC summaries;\n                      run Recompute All beforehand.\n                    </li>\n                    <li>\n                      Include Photos option packs images alongside manifests\n                      when generating utility ZIPs.\n                    </li>\n                  </ul>\n                </div>\n              </div>\n\n              <div className=\"bg-amber-50 p-3 rounded\">\n                <h4 className=\"font-medium mb-1\">Calculations & Assumptions</h4>\n                <ul className=\"list-disc list-inside space-y-1\">\n                  <li>\n                    Sag uses a parabolic approximation with wind/ice factors\n                    from your inputs and cable type.\n                  </li>\n                  <li>\n                    Midspan = average attach − sag. Ground target derives from\n                    Submission Profile + segments.\n                  </li>\n                  <li>\n                    As‑built variance tolerance defaults to 2 in unless\n                    overridden by the profile/owner.\n                  </li>\n                  <li>\n                    Auto length uses Haversine over WGS84; results are rounded\n                    to whole feet for readability.\n                  </li>\n                  <li>\n                    Guy guidance is advisory and based on tension thresholds;\n                    confirm with utility standards.\n                  </li>\n                </ul>\n              </div>\n\n              <div className=\"bg-emerald-50 p-3 rounded\">\n                <h4 className=\"font-medium mb-1\">\n                  Accessibility & Reliability\n                </h4>\n                <ul className=\"list-disc list-inside space-y-1\">\n                  <li>\n                    Large touch targets and compact headers keep actions\n                    reachable on mobile.\n                  </li>\n                  <li>\n                    App is a PWA; basic offline caching applies. Very large\n                    images can affect memory on older devices.\n                  </li>\n                  <li>\n                    Use new‑tab links for external resources to avoid accidental\n                    navigation away from the app.\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          {/* Quick Start */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-blue-700 mb-3\">\n              🚀 Quick Start Guide\n            </h3>\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <ol className=\"list-decimal list-inside space-y-2 text-sm\">\n                <li>\n                  <strong>Create/Select a Job:</strong> Use the Job Setup panel\n                  to create a job (name, applicant, job #, preset, Owner).\n                  Select it to make it active.\n                </li>\n                <li>\n                  <strong>Enter Basic Data:</strong> Project name, pole height,\n                  and existing conditions\n                </li>\n                <li>\n                  <strong>Select Construction Type:</strong> New construction or\n                  existing pole attachment\n                </li>\n                <li>\n                  <strong>Add Span Information:</strong> Distance, adjacent pole\n                  height, wind conditions\n                </li>\n                <li>\n                  <strong>Use GPS (optional):</strong> Tap “GPS” beside\n                  Latitude/Longitude to autofill device coordinates\n                </li>\n                <li>\n                  <strong>Configure Existing Lines:</strong> Add communication\n                  and power lines on the pole\n                </li>\n                <li>\n                  <strong>Field Collection (mobile):</strong> For each pole, set\n                  ID, tap GPS, attach a photo (Camera/Library), then{\" \"}\n                  <em>Save Draft</em> or <em>DONE</em>\n                </li>\n                <li>\n                  <strong>Review Results:</strong> Check clearances, make-ready\n                  requirements, and cost estimates\n                </li>\n                <li>\n                  <strong>Export:</strong> Use Export CSV, or for utility\n                  batches use “Export First 25”\n                </li>\n              </ol>\n            </div>\n          </section>\n          {/* Jobs/Setup */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-sky-700 mb-3\">\n              🗂️ Jobs & Setup\n            </h3>\n            <div className=\"bg-sky-50 p-4 rounded-lg text-sm space-y-3\">\n              <p>\n                <strong>Jobs</strong> let you group multiple poles under the\n                same project metadata (name, applicant, job #, preset, notes).\n              </p>\n              <ul className=\"list-disc list-inside space-y-1\">\n                <li>\n                  <strong>Create:</strong> Use Job Setup to add a job and it\n                  becomes the active job.\n                </li>\n                <li>\n                  <strong>Select:</strong> Use the header dropdown to switch\n                  active jobs anytime.\n                </li>\n                <li>\n                  <strong>Auto-link:</strong> Collected poles are tagged to the\n                  active job.\n                </li>\n                <li>\n                  <strong>Exports:</strong> Collected CSV exports are filtered\n                  to the active job when one is selected.\n                </li>\n                <li>\n                  <strong>Owner default:</strong> Set an Owner (e.g., Mon\n                  Power). FE subsidiaries activate 44\" comm-to-power rules\n                  automatically.\n                </li>\n              </ul>\n            </div>\n          </section>\n\n          {/* Field Collection how-to */}\n          <section id=\"help-field-collection\">\n            <h3 className=\"text-lg font-semibold text-emerald-700 mb-3\">\n              📍 Field Collection (Mobile + GPS + Photos)\n            </h3>\n            <div className=\"bg-emerald-50 p-4 rounded-lg text-sm space-y-3\">\n              <div>\n                <h4 className=\"font-medium text-gray-800 mb-1\">\n                  Collect a pole\n                </h4>\n                <ol className=\"list-decimal list-inside space-y-1\">\n                  <li>\n                    Enter <strong>Pole ID</strong> (tag or temporary ID)\n                  </li>\n                  <li>\n                    Tap <strong>GPS</strong> to capture{\" \"}\n                    <em>Latitude/Longitude</em> from your device\n                  </li>\n                  <li>\n                    Attach a <strong>Photo</strong> using <em>Camera</em>{\" \"}\n                    (prompts for permission) or <em>Library</em>\n                  </li>\n                  <li>\n                    Tap <strong>Save Draft</strong> to keep editing later, or{\" \"}\n                    <strong>DONE</strong> to finalize the entry\n                  </li>\n                </ol>\n              </div>\n              <div>\n                <h4 className=\"font-medium text-gray-800 mb-1\">\n                  Manage collected poles\n                </h4>\n                <ul className=\"list-disc list-inside space-y-1\">\n                  <li>\n                    <strong>Edit inline:</strong> ID, GPS, heights, voltage,\n                    transformer, span\n                  </li>\n                  <li>\n                    <strong>Per-row GPS:</strong> Use the row <em>GPS</em>{\" \"}\n                    button to refresh coordinates on that row\n                  </li>\n                  <li>\n                    <strong>Status:</strong> Switch between <em>draft</em> and{\" \"}\n                    <em>done</em> per row\n                  </li>\n                  <li>\n                    <strong>QA Filters:</strong> Use Status/Photos/PASS-FAIL\n                    filters and the dashboard counters to speed up review\n                  </li>\n                  <li>\n                    <strong>Photos:</strong> Add/replace via <em>Camera</em> or{\" \"}\n                    <em>Library</em>; preview and <em>Remove</em> supported\n                  </li>\n                  <li>\n                    <strong>Persistence:</strong> Entries are cached in your\n                    browser and survive refreshes\n                  </li>\n                </ul>\n              </div>\n              <div>\n                <h4 className=\"font-medium text-gray-800 mb-1\">\n                  Export & utility batches\n                </h4>\n                <ul className=\"list-disc list-inside space-y-1\">\n                  <li>\n                    <strong>Export CSV:</strong> Full table including{\" \"}\n                    <em>status</em> and <em>hasPhoto</em> columns\n                  </li>\n                  <li>\n                    <strong>Export First 25:</strong> Creates a CSV of the first\n                    25 rows for utilities like FirstEnergy\n                  </li>\n                  <li>\n                    <strong>Note:</strong> Photos aren’t embedded in the CSV;\n                    only a <em>hasPhoto</em> flag is included\n                  </li>\n                </ul>\n              </div>\n              <div className=\"text-xs text-gray-600\">\n                <p>\n                  <strong>Privacy & Permissions:</strong> GPS and camera access\n                  are requested by your browser. Data stays on your device\n                  unless you export or share it.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          {/* Input Parameters */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-green-700 mb-3\">\n              📊 Input Parameters Explained\n            </h3>\n\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <div className=\"space-y-3\">\n                <h4 className=\"font-medium text-gray-800\">Pole Information</h4>\n                <div className=\"bg-gray-50 p-3 rounded text-sm space-y-2\">\n                  <p>\n                    <strong>Pole Height:</strong> Total height of the pole in\n                    feet. For new construction, this determines burial depth\n                    (typically 10% + 2ft minimum) and above-ground height\n                    available for attachments.\n                  </p>\n                  <p>\n                    <strong>Pole Class:</strong> Wood pole classification (Class\n                    1-6) indicating load capacity. Class 1 = highest capacity\n                    (~3800 lbf), Class 6 = lowest (~1200 lbf).\n                  </p>\n                  <p>\n                    <strong>Construction Type:</strong> 'New' for virgin poles,\n                    'Existing' for adding to poles with existing infrastructure.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"space-y-3\">\n                <h4 className=\"font-medium text-gray-800\">Power System</h4>\n                <div className=\"bg-gray-50 p-3 rounded text-sm space-y-2\">\n                  <p>\n                    <strong>Power Voltage:</strong> 'Distribution' (4-35kV),\n                    'Transmission' (&gt;35kV), or 'Communication' for comm-only\n                    poles.\n                  </p>\n                  <p>\n                    <strong>Existing Power Height:</strong> Height of the lowest\n                    power conductor. Critical for NESC clearance calculations.\n                  </p>\n                  <p>\n                    <strong>Transformer Present:</strong> Indicates additional\n                    equipment complexity and potential clearance issues.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"space-y-3\">\n                <h4 className=\"font-medium text-gray-800\">\n                  Span Configuration\n                </h4>\n                <div className=\"bg-gray-50 p-3 rounded text-sm space-y-2\">\n                  <p>\n                    <strong>Span Distance:</strong> Horizontal distance to\n                    adjacent pole. Affects sag calculations and guy\n                    requirements.\n                  </p>\n                  <p>\n                    <strong>Adjacent Pole Height:</strong> Height of the far-end\n                    pole. Used for midspan clearance calculations.\n                  </p>\n                  <p>\n                    <strong>Wind Speed:</strong> Design wind speed (typically\n                    60-110 mph). Higher winds increase loading and sag.\n                  </p>\n                  <p>\n                    <strong>Ice Thickness:</strong> Ice loading in inches.\n                    Increases conductor weight and wind profile.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"space-y-3\">\n                <h4 className=\"font-medium text-gray-800\">\n                  Cable & Environment\n                </h4>\n                <div className=\"bg-gray-50 p-3 rounded text-sm space-y-2\">\n                  <p>\n                    <strong>Cable Type:</strong> Predefined cable\n                    characteristics (weight, tension, diameter) affecting sag\n                    calculations.\n                  </p>\n                  <p>\n                    <strong>Environment:</strong> 'Road' (higher clearances),\n                    'Residential', or 'Pedestrian' areas affect NESC\n                    requirements.\n                  </p>\n                  <p>\n                    <strong>Proposed Line Height:</strong> Target attachment\n                    height for your new communication line.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* NESC & Regulatory */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-red-700 mb-3\">\n              ⚖️ NESC & Regulatory Standards\n            </h3>\n            <div className=\"bg-red-50 p-4 rounded-lg text-sm space-y-3\">\n              <p>\n                <strong>National Electrical Safety Code (NESC):</strong> The\n                application implements NESC Table 232-1 clearance requirements\n                for different voltage classes and environments.\n              </p>\n\n              <div className=\"grid md:grid-cols-2 gap-4 mt-3\">\n                <div>\n                  <h5 className=\"font-medium\">Ground Clearances (NESC)</h5>\n                  <ul className=\"list-disc list-inside mt-1 space-y-1\">\n                    <li>Communication over roads: 15.5 ft minimum</li>\n                    <li>Communication over pedestrian areas: 9.5 ft minimum</li>\n                    <li>Distribution power over roads: 23 ft minimum</li>\n                    <li>Transmission power over roads: 28.5 ft minimum</li>\n                  </ul>\n                </div>\n\n                <div>\n                  <h5 className=\"font-medium\">Vertical Separations</h5>\n                  <ul className=\"list-disc list-inside mt-1 space-y-1\">\n                    <li>Communication to power (distribution): 40 inches</li>\n                    <li>Communication to power (transmission): 6 feet</li>\n                    <li>Communication to communication: 12 inches</li>\n                    <li>Minimum pole top space: 12 inches</li>\n                  </ul>\n                </div>\n              </div>\n\n              <p>\n                <strong>FirstEnergy Specific:</strong> When \"FirstEnergy\" preset\n                is selected, additional utility-specific requirements are\n                applied including 18 ft road clearance and specific attachment\n                procedures.\n              </p>\n            </div>\n          </section>\n\n          {/* Calculations */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-purple-700 mb-3\">\n              🧮 Calculation References\n            </h3>\n            <div className=\"space-y-4\">\n              <div className=\"bg-purple-50 p-4 rounded-lg text-sm\">\n                <h4 className=\"font-medium mb-2\">Sag Calculation</h4>\n                <p>\n                  <strong>Formula:</strong> Sag = (w × L²) / (8 × T)\n                </p>\n                <p>\n                  <strong>Where:</strong> w = effective weight per foot\n                  (including wind loading), L = span length, T = cable tension\n                </p>\n                <p>\n                  <strong>Wind Loading:</strong> Calculated using q = 0.00256 ×\n                  V² (where V = wind speed in mph)\n                </p>\n              </div>\n\n              <div className=\"bg-purple-50 p-4 rounded-lg text-sm\">\n                <h4 className=\"font-medium mb-2\">Midspan Height</h4>\n                <p>\n                  <strong>Formula:</strong> Midspan = ((Attach Height A + Attach\n                  Height B) / 2) - Sag\n                </p>\n                <p>\n                  <strong>Critical Check:</strong> Midspan height must exceed\n                  ground clearance requirements\n                </p>\n              </div>\n\n              <div className=\"bg-purple-50 p-4 rounded-lg text-sm\">\n                <h4 className=\"font-medium mb-2\">Guy Wire Analysis</h4>\n                <p>\n                  <strong>Tension Calculation:</strong> Based on horizontal\n                  loading from cable tension and wind forces\n                </p>\n                <p>\n                  <strong>Geometry:</strong> Guy angle typically 30-60°, lead\n                  distance = guy height × 0.5\n                </p>\n                <p>\n                  <strong>Threshold:</strong> Guy recommended when tension\n                  exceeds 500 lbf\n                </p>\n              </div>\n            </div>\n          </section>\n\n          {/* Data Input Guide */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-orange-700 mb-3\">\n              📝 Data Input Guidelines\n            </h3>\n\n            <div className=\"space-y-4\">\n              <div>\n                <h4 className=\"font-medium text-gray-800 mb-2\">\n                  Height Format Support\n                </h4>\n                <div className=\"bg-orange-50 p-3 rounded text-sm\">\n                  <p>\n                    <strong>Tick Mark Format:</strong> 35' (feet), 6\" (inches),\n                    35'6\" (feet and inches)\n                  </p>\n                  <p>\n                    <strong>Verbose Format:</strong> 35ft (feet), 6in (inches),\n                    35ft 6in (feet and inches)\n                  </p>\n                  <p>\n                    <strong>Decimal Support:</strong> 35.5' or 35.5ft for\n                    half-foot measurements\n                  </p>\n                  <p className=\"text-orange-700 font-medium mt-2\">\n                    Use the \"Display Format\" dropdown to choose your preferred\n                    format throughout the application.\n                  </p>\n                </div>\n              </div>\n\n              <div>\n                <h4 className=\"font-medium text-gray-800 mb-2\">\n                  Existing Lines Data Table\n                </h4>\n                <div className=\"bg-orange-50 p-3 rounded text-sm space-y-2\">\n                  <p>\n                    <strong>Line Type:</strong> Select from Communication, Drop\n                    (Comm), Neutral, or Power Secondary\n                  </p>\n                  <p>\n                    <strong>Height:</strong> Current attachment height of the\n                    existing line\n                  </p>\n                  <p>\n                    <strong>Company:</strong> Owning utility or service provider\n                    (for cost allocation)\n                  </p>\n                  <p>\n                    <strong>Make Ready:</strong> Check if line needs to be moved\n                    to accommodate new attachment\n                  </p>\n                  <p>\n                    <strong>New Height:</strong> Target height after make-ready\n                    work (if applicable)\n                  </p>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Import/Export */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-teal-700 mb-3\">\n              📁 Import/Export Features\n            </h3>\n\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <div>\n                <h4 className=\"font-medium text-gray-800 mb-2\">\n                  Supported Import Formats\n                </h4>\n                <div className=\"bg-teal-50 p-3 rounded text-sm space-y-2\">\n                  <p>\n                    <strong>KML/KMZ:</strong> Google Earth files with pole\n                    location and attribute data\n                  </p>\n                  <p>\n                    <strong>Shapefile:</strong> GIS data (.zip with .shp, .dbf,\n                    .shx files)\n                  </p>\n                  <p>\n                    <strong>CSV:</strong> Paste data for <em>Poles</em>,{\" \"}\n                    <em>Spans</em>, or <em>Existing Lines</em> in the Import\n                    panel (headers can be mapped via presets or custom profiles)\n                  </p>\n                </div>\n\n                <div className=\"mt-3 space-x-2\">\n                  <button\n                    onClick={downloadSampleKML}\n                    className=\"px-3 py-1 bg-teal-600 text-white rounded text-sm hover:bg-teal-700\"\n                  >\n                    Download Sample KML\n                  </button>\n                  <button\n                    onClick={downloadSampleCSV}\n                    className=\"px-3 py-1 bg-teal-600 text-white rounded text-sm hover:bg-teal-700\"\n                  >\n                    Download Sample CSV\n                  </button>\n                </div>\n              </div>\n\n              <div>\n                <h4 className=\"font-medium text-gray-800 mb-2\">\n                  Export Options\n                </h4>\n                <div className=\"bg-teal-50 p-3 rounded text-sm space-y-2\">\n                  <p>\n                    <strong>CSV Export:</strong> Analysis results in spreadsheet\n                    format with your preferred height formatting\n                  </p>\n                  <p>\n                    <strong>PDF Report:</strong> Professional printable report\n                    with project details, calculations, and diagrams\n                  </p>\n                  <p>\n                    <strong>Batch Report:</strong> Multiple pole analysis when\n                    importing geospatial data\n                  </p>\n                  <p>\n                    <strong>FirstEnergy SPANS ZIP:</strong> Job-scoped package\n                    with manifest.csv and photos/ suitable for SPANS submissions\n                    (max 25 per application recommended)\n                  </p>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Cost Analysis */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-indigo-700 mb-3\">\n              💰 Cost Analysis\n            </h3>\n            <div className=\"bg-indigo-50 p-4 rounded-lg text-sm space-y-2\">\n              <p>\n                <strong>Base Construction Cost:</strong> $150 for new\n                construction, $200 for existing pole attachment\n              </p>\n              <p>\n                <strong>Make-Ready Cost:</strong> $12.50 per inch of vertical\n                adjustment required\n              </p>\n              <p>\n                <strong>Guy Wire Cost:</strong> $350 base + tension-based\n                scaling (up to $1000 for high-load conditions)\n              </p>\n              <p>\n                <strong>Transformer Complexity:</strong> $300 additional for\n                poles with transformers\n              </p>\n              <p>\n                <strong>Special Engineering:</strong> $500 additional for spans\n                exceeding 300 feet\n              </p>\n            </div>\n          </section>\n\n          {/* Troubleshooting */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">\n              🔧 Common Issues & Troubleshooting\n            </h3>\n            <div className=\"space-y-3\">\n              <div className=\"bg-gray-50 p-3 rounded text-sm\">\n                <p>\n                  <strong>Warning: \"CRITICAL: midspan clearance\"</strong>\n                </p>\n                <p>\n                  Solution: Increase pole height, reduce span length, or move\n                  attachment point higher\n                </p>\n              </div>\n              <div className=\"bg-gray-50 p-3 rounded text-sm\">\n                <p>\n                  <strong>\"Pole clearance\" violations</strong>\n                </p>\n                <p>\n                  Solution: Adjust proposed line height or enable make-ready for\n                  conflicting lines\n                </p>\n              </div>\n              <div className=\"bg-gray-50 p-3 rounded text-sm\">\n                <p>\n                  <strong>Guy wire required</strong>\n                </p>\n                <p>\n                  Solution: Normal for long spans or high winds. Consider\n                  reducing span or increasing pole class\n                </p>\n              </div>\n            </div>\n          </section>\n\n          <div className=\"bg-blue-100 p-4 rounded-lg text-sm\">\n            <p className=\"font-medium text-blue-800\">💡 Pro Tip:</p>\n            <p>\n              Use the scenario A/B feature to compare different pole heights or\n              configurations. Save your mapping profiles when working with\n              consistent data sources to speed up future imports.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"sticky bottom-0 bg-gray-50 px-6 py-4 border-t\">\n          <button\n            onClick={onClose}\n            className=\"px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          >\n            Close Help\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"file":"assets/app-calculator-BxQMOd7r.js"}