{"version":3,"mappings":"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","names":["WV_COMPANIES","raw","useAppStore","create","persist","set","user","org","client","value","section","s","height","poleClass","presetProfile","v","owner","o","match","voltage","distance","environment","isNew","type","diameter","speed","val","name","patch","p","lines","notes","results","warnings","analysis","cost","payload","proposedFt","env","base","getNESCClearances","tuned","applyPresetToClearances","target","scenario","mapping","profiles","map","oldName","newName","arr","job","id","newJob","j","current","updates","currentJobId","_a","found","pole","jobId","_b","index","item","m","layout","layouts","byJob","byEnv","createJSONStorage","setPageMeta","title","description","meta","errorsToCSV","errors","e","i","downloadErrorsCSV","filename","csv","blob","url","a","buildManifest","profileName","poles","profile","header","rows","csvFrom","safe","r","validateLatitude","lat","num","validateLongitude","lon","validateCoordinates","latResult","lonResult","validatePoleCoordinates","result","PoleSchema","z.object","z.string","z.union","z.number","z.null","z.boolean","SpanSchema","z.any","validatePoles","data","idx","validateSpans","spans","permitTemplates","getTemplatesForEnvironment","out","agencies","key","buildTemplatesText","templates","t","req","baseFields","summary","_c","_d","_e","_f","_g","_i","_h","_j","_l","_k","_n","_m","_o","_p","_s","_r","_q","_v","_u","_t","_y","_x","_w","_B","_A","_z","_E","_D","_C","_H","_G","_F","_I","_J","_L","_K","_N","_M","_P","_O","_R","_Q","_S","_U","_T","_V","_W","_X","buildMM109Fields","f","buildCSXFields","buildStateHighwayFields","agencyLabel","pdfLibCache","loadPdfLibFromCDN","script","loadPromise","resolve","reject","error","mod","__vitePreload","importError","withPdfLib","fn","createPdfDocument","loadPdfLib","detectPermitIssues","issues","targetFt","toNum","computedGC","mid","row","c","profVal","labelForEnv","minAttach","attach","ftMatch","inMatch","ft","inches","n","metaKey","w","h","registry","getLayoutFor","bucket"],"ignoreList":[],"sources":["../../src/utils/constants.js","../../src/utils/store.js","../../src/utils/meta.js","../../src/utils/validationExport.js","../../src/utils/manifests.js","../../src/utils/gisValidation.js","../../src/utils/validation.js","../../src/utils/permitTemplates.js","../../src/utils/formFields.js","../../src/utils/pdfAsync.js","../../src/utils/permitChecks.js","../../src/utils/pdfLayouts.js"],"sourcesContent":["// Clearance targets at midspan by surface category\nexport const SURFACE_CATEGORIES = {\n  pedestrian: { label: \"Pedestrian-only area\", commMin: 12, powerMin: 12 },\n  residentialDrive: {\n    label: \"Residential driveway/yard\",\n    commMin: 15.5,\n    powerMin: 16,\n  },\n  publicRoad: {\n    label: \"Public road (truck traffic)\",\n    commMin: 16,\n    powerMin: 18,\n  },\n  railroad: {\n    label: \"Railroad crossing (CSX, etc.)\",\n    commMin: 23.5,\n    powerMin: 25,\n  },\n};\n\n// Vertical separation requirements\nexport const VERTICAL_SEPARATION = {\n  powerToComm: 40 / 12,\n  commToComm: 12 / 12,\n};\n\n// Minimum attachment heights\nexport const MIN_ATTACH_HEIGHTS = {\n  primaryMin: 22,\n  secondaryMin: 18,\n  commMin: 15.5,\n};\n\n// Default sag percentages\nexport const SAG_DEFAULTS = {\n  ADSS: 0.015,\n  Coax: 0.02,\n  Copper: 0.02,\n  Triplex: 0.03,\n};\n\n// Suggested guy angle range\nexport const GUY_ANGLE_RANGE = { min: 30, max: 60 };\n\n// Wood pole class capacity hints\nexport const POLE_CLASS_HINT_LBF = {\n  \"Class 1\": 3800,\n  \"Class 2\": 3000,\n  \"Class 3\": 2400,\n  \"Class 4\": 2000,\n  \"Class 5\": 1600,\n};\n\n// FirstEnergy requirements\nexport const FE_REQUIRED = {\n  proposal: [\n    \"Company Name\",\n    \"Responsible Users\",\n    \"State\",\n    \"County\",\n    \"City/Village/Township\",\n    \"Location Description\",\n    \"Proposal Number\",\n    \"Project Summary\",\n    \"Attachment Type\",\n    \"Reason for Work\",\n    \"FirstEnergy Contract Number\",\n    \"Policy/Safety Acceptance\",\n    \"Attaching Company Approval/Date\",\n    \"Billing Address\",\n    \"Primary Contact\",\n  ],\n  poleProfileMeta: [\n    \"Pole Number\",\n    \"Street Location\",\n    \"Field Data Date\",\n    \"Pole Data Collector\",\n    \"Attachment Type\",\n    \"Field Class\",\n    \"Field Height\",\n    \"Transformer (Y/N)\",\n    \"Lamp (Y/N)\",\n    \"Guy Required (Y/N)\",\n    \"Conduit Riser (Y/N)\",\n    \"First Down Guy (Y/N)\",\n    \"Second Down Guy (Y/N)\",\n    \"Pole-to-Pole Guy (Y/N)\",\n    \"Sidewalk Guy (Y/N)\",\n    \"Brace Pole (Y/N)\",\n    \"Slack Span (Y/N)\",\n    \"Span Length (ft) Before\",\n    \"Span Length (ft) After\",\n    \"Lowest Power Supply (checkbox)\",\n    \"Lowest Power Side/Height/Midspan (Before/After)\",\n    \"Existing Comms owners/side/height/midspan\",\n    \"Proposed Side/Height/Midspan (worst case)\",\n    \"Span Environment\",\n    \"Make Ready Suggestions\",\n  ],\n};\n\n// West Virginia companies (seed list; not exhaustive)\nexport const WV_COMPANIES = {\n  power: [\n    {\n      name: \"Appalachian Power (AEP)\",\n      short: \"Appalachian Power\",\n      parent: \"AEP\",\n    },\n    { name: \"Wheeling Power (AEP)\", short: \"Wheeling Power\", parent: \"AEP\" },\n    {\n      name: \"Monongahela Power (Mon Power)\",\n      short: \"Mon Power\",\n      parent: \"FirstEnergy\",\n    },\n    { name: \"Potomac Edison\", short: \"Potomac Edison\", parent: \"FirstEnergy\" },\n    {\n      name: \"Harrison Rural Electrification Association (HREA)\",\n      short: \"HREA\",\n      parent: \"Cooperative\",\n    },\n    {\n      name: \"Black Diamond Power Company\",\n      short: \"Black Diamond Power\",\n      parent: \"Investor-owned\",\n    },\n    {\n      name: \"City of New Martinsville Electric\",\n      short: \"New Martinsville Electric\",\n      parent: \"Municipal\",\n    },\n    {\n      name: \"City of Philippi Electric\",\n      short: \"Philippi Electric\",\n      parent: \"Municipal\",\n    },\n  ],\n  communication: [\n    { name: \"Frontier Communications\", short: \"Frontier\" },\n    { name: \"Optimum (formerly Suddenlink)\", short: \"Optimum\" },\n    { name: \"Armstrong\", short: \"Armstrong\" },\n    { name: \"Citynet\", short: \"Citynet\" },\n    { name: \"Lumen (CenturyLink/Level 3)\", short: \"Lumen\" },\n    { name: \"Zayo\", short: \"Zayo\" },\n    { name: \"Segra (Lumos Networks)\", short: \"Segra\" },\n    { name: \"Comcast Xfinity\", short: \"Comcast\" },\n    { name: \"Charter Spectrum\", short: \"Spectrum\" },\n    { name: \"AT&T\", short: \"AT&T\" },\n    { name: \"Verizon\", short: \"Verizon\" },\n    { name: \"T-Mobile\", short: \"T-Mobile\" },\n  ],\n};\n","import { create } from \"zustand\";\nimport {\n  DEFAULTS as CALC_DEFAULTS,\n  getNESCClearances,\n  applyPresetToClearances,\n} from \"./calculations.js\";\nimport { persist, createJSONStorage } from \"zustand/middleware\";\n\n// Preflight: if persisted state is corrupt JSON, clear it to avoid runtime crash\ntry {\n  const key = \"pole-height-store\";\n  const raw = localStorage.getItem(key);\n  if (raw && typeof raw === \"string\") {\n    JSON.parse(raw);\n  }\n} catch {\n  console.warn(\"Clearing corrupt persisted state\");\n  try {\n    localStorage.removeItem(\"pole-height-store\");\n  } catch {\n    /* ignore */\n  }\n}\n\nconst useAppStore = create(\n  persist(\n    (set) => ({\n      // User and Organization Context\n      currentUser: null, // { id, email, name, role, organization_id }\n      setCurrentUser: (user) => set({ currentUser: user }),\n      currentOrganization: null, // { id, name, subscription_tier }\n      setCurrentOrganization: (org) => set({ currentOrganization: org }),\n      currentClient: null, // Optional client context for multi-tenant setups\n      setCurrentClient: (client) => set({ currentClient: client }),\n      isAuthenticated: false,\n      setIsAuthenticated: (value) => set({ isAuthenticated: value }),\n\n      // UI: per-section last saved timestamps\n      uiSectionSaved: {}, // e.g., { map: ISO, spans: ISO, existing: ISO, field: ISO }\n      setSectionSaved: (section) =>\n        set((s) => ({\n          uiSectionSaved: {\n            ...(s.uiSectionSaved || {}),\n            [section]: new Date().toISOString(),\n          },\n        })),\n      // Core pole data\n      poleHeight: \"\",\n      setPoleHeight: (height) => set({ poleHeight: height }),\n      poleClass: \"\",\n      setPoleClass: (poleClass) => set({ poleClass }),\n      presetProfile: \"\",\n      setPresetProfile: (presetProfile) => set({ presetProfile }),\n      customMinTopSpace: \"\",\n      setCustomMinTopSpace: (v) => set({ customMinTopSpace: v }),\n      customRoadClearance: \"\",\n      setCustomRoadClearance: (v) => set({ customRoadClearance: v }),\n      customCommToPower: \"\",\n      setCustomCommToPower: (v) => set({ customCommToPower: v }),\n      // User preferences\n      useTickMarkFormat: false, // true for 15' 6\", false for 15ft 6in\n      setUseTickMarkFormat: (value) => set({ useTickMarkFormat: value }),\n      // Prefer auto-calculated span length (from endpoint coordinates) over manual/estimated\n      preferAutoSpanLength: false,\n      setPreferAutoSpanLength: (value) => set({ preferAutoSpanLength: value }),\n      // Visual threshold for highlighting manual vs auto span length delta (ft)\n      spanLenDeltaThresholdFt: 10,\n      setSpanLenDeltaThresholdFt: (v) =>\n        set({ spanLenDeltaThresholdFt: Number(v) || 0 }),\n      // UI preferences\n      tableDensity: \"comfortable\", // 'compact' | 'comfortable'\n      setTableDensity: (v) =>\n        set({ tableDensity: v === \"compact\" ? \"compact\" : \"comfortable\" }),\n      spansColumnSegmentsVisible: true,\n      setSpansColumnSegmentsVisible: (v) =>\n        set({ spansColumnSegmentsVisible: !!v }),\n      spansColumnActionsVisible: true,\n      setSpansColumnActionsVisible: (v) =>\n        set({ spansColumnActionsVisible: !!v }),\n      // Project metadata for report\n      projectName: \"\",\n      setProjectName: (v) => set({ projectName: v }),\n      applicantName: \"\",\n      setApplicantName: (v) => set({ applicantName: v }),\n      jobNumber: \"\",\n      setJobNumber: (v) => set({ jobNumber: v }),\n      // Default utility Owner context at job level (e.g., Mon Power, Penelec)\n      jobOwner: \"\",\n      setJobOwner: (v) => set({ jobOwner: v }),\n      // Auto-select submission profile based on owner name hints\n      setJobOwnerAutoProfile: (owner) =>\n        set((s) => {\n          const o = String(owner || \"\").toLowerCase();\n          let match = s.currentSubmissionProfile || \"generic\";\n          if (\n            /first\\s*energy|mon\\s*power|penelec|potomac|west\\s*penn|jcp&l|jersey\\s*central|ohio\\s*edison|illuminating|toledo/i.test(\n              o,\n            )\n          ) {\n            match = \"firstEnergy\";\n          } else if (/duke/i.test(o)) {\n            match = \"duke\";\n          }\n          return { jobOwner: owner || \"\", currentSubmissionProfile: match };\n        }),\n      // GPS coordinates for the current pole/location\n      poleLatitude: \"\",\n      setPoleLatitude: (v) => set({ poleLatitude: v }),\n      poleLongitude: \"\",\n      setPoleLongitude: (v) => set({ poleLongitude: v }),\n      // Branding/logo for report\n      logoDataUrl: \"\",\n      setLogoDataUrl: (v) => set({ logoDataUrl: v }),\n      existingPowerHeight: \"\",\n      setExistingPowerHeight: (height) => set({ existingPowerHeight: height }),\n      existingPowerVoltage: \"distribution\",\n      setExistingPowerVoltage: (voltage) =>\n        set({ existingPowerVoltage: voltage }),\n      spanDistance: \"\",\n      setSpanDistance: (distance) => set({ spanDistance: distance }),\n      spanEnvironment: \"road\",\n      setSpanEnvironment: (environment) =>\n        set({ spanEnvironment: environment }),\n      isNewConstruction: true,\n      setIsNewConstruction: (isNew) => set({ isNewConstruction: isNew }),\n      attachmentType: \"communication\",\n      setAttachmentType: (type) => set({ attachmentType: type }),\n      cableDiameter: \"\",\n      setCableDiameter: (diameter) => set({ cableDiameter: diameter }),\n      windSpeed: \"90\",\n      setWindSpeed: (speed) => set({ windSpeed: speed }),\n      iceThicknessIn: \"0\",\n      setIceThicknessIn: (val) => set({ iceThicknessIn: val }),\n      hasTransformer: false,\n      setHasTransformer: (val) => set({ hasTransformer: val }),\n      hasStreetlight: false,\n      setHasStreetlight: (val) => set({ hasStreetlight: val }),\n      requiresGuying: false,\n      setRequiresGuying: (val) => set({ requiresGuying: val }),\n      streetLightHeight: \"\",\n      setStreetLightHeight: (height) => set({ streetLightHeight: height }),\n      dripLoopHeight: \"\",\n      setDripLoopHeight: (height) => set({ dripLoopHeight: height }),\n      powerReference: \"auto\",\n      setPowerReference: (v) => set({ powerReference: v }),\n      proposedLineHeight: \"\",\n      setProposedLineHeight: (height) => set({ proposedLineHeight: height }),\n      // Submission profiles (utility/region adjustable parameters and manifest targeting)\n      submissionProfiles: [\n        {\n          name: \"firstEnergy\",\n          label: \"FirstEnergy / Mon Power\",\n          commToPowerIn: 44,\n          minTopSpaceFt: 2.0,\n          roadClearanceFt: 18.0,\n          envRoadFt: 18.0,\n          envResidentialFt: 15.5,\n          envPedestrianFt: 15.5,\n          envFieldFt: 15.5,\n          envResidentialYardFt: 9.5,\n          envResidentialDrivewayFt: 15.5,\n          envNonResidentialDrivewayFt: 16.0,\n          envWaterwayFt: 14.0,\n          envWVHighwayFt: 18.0,\n          envPAHighwayFt: 18.0,\n          envOHHighwayFt: 18.0,\n          envMDHighwayFt: 18.0,\n          envInterstateFt: 18.0,\n          envInterstateNewCrossingFt: 21.0,\n          envRailroadFt: 27.0,\n          minCommAttachFt: 14.0,\n          manifestType: \"FE\",\n        },\n        {\n          name: \"aep\",\n          label: \"AEP (Generic)\",\n          commToPowerIn: 40,\n          minTopSpaceFt: 2.0,\n          roadClearanceFt: 18.0,\n          envRoadFt: 18.0,\n          envResidentialFt: 15.5,\n          envPedestrianFt: 15.5,\n          envFieldFt: 15.5,\n          envResidentialYardFt: 9.5,\n          envResidentialDrivewayFt: 15.5,\n          envNonResidentialDrivewayFt: 16.0,\n          envWaterwayFt: 14.0,\n          envWVHighwayFt: 18.0,\n          envPAHighwayFt: 18.0,\n          envOHHighwayFt: 18.0,\n          envMDHighwayFt: 18.0,\n          envInterstateFt: 18.0,\n          envInterstateNewCrossingFt: 21.0,\n          envRailroadFt: 27.0,\n          minCommAttachFt: 14.0,\n          manifestType: \"AEP\",\n        },\n        {\n          name: \"duke\",\n          label: \"Duke Energy\",\n          commToPowerIn: 40,\n          minTopSpaceFt: 1.0,\n          roadClearanceFt: 18.0,\n          envRoadFt: 18.0,\n          envResidentialFt: 15.5,\n          envPedestrianFt: 15.5,\n          envFieldFt: 15.5,\n          envResidentialYardFt: 9.5,\n          envResidentialDrivewayFt: 15.5,\n          envNonResidentialDrivewayFt: 16.0,\n          envWaterwayFt: 14.0,\n          envWVHighwayFt: 18.0,\n          envPAHighwayFt: 18.0,\n          envOHHighwayFt: 18.0,\n          envMDHighwayFt: 18.0,\n          envInterstateFt: 18.0,\n          envInterstateNewCrossingFt: 21.0,\n          envRailroadFt: 27.0,\n          minCommAttachFt: 14.0,\n          manifestType: \"DUKE\",\n        },\n        {\n          name: \"generic\",\n          label: \"Generic / NESC\",\n          commToPowerIn: 40,\n          minTopSpaceFt: 1.0,\n          roadClearanceFt: 18.0,\n          envRoadFt: 18.0,\n          envResidentialFt: 15.5,\n          envPedestrianFt: 15.5,\n          envFieldFt: 15.5,\n          envResidentialYardFt: 9.5,\n          envResidentialDrivewayFt: 15.5,\n          envNonResidentialDrivewayFt: 16.0,\n          envWaterwayFt: 14.0,\n          envWVHighwayFt: 18.0,\n          envPAHighwayFt: 18.0,\n          envOHHighwayFt: 18.0,\n          envMDHighwayFt: 18.0,\n          envInterstateFt: 18.0,\n          envInterstateNewCrossingFt: 21.0,\n          envRailroadFt: 27.0,\n          minCommAttachFt: 14.0,\n          manifestType: \"GEN\",\n        },\n      ],\n      currentSubmissionProfile: \"firstEnergy\",\n      setCurrentSubmissionProfile: (name) =>\n        set({ currentSubmissionProfile: name }),\n      updateSubmissionProfile: (name, patch) =>\n        set((s) => {\n          const arr = (s.submissionProfiles || []).map((p) =>\n            p.name === name ? { ...p, ...patch } : p,\n          );\n          return { submissionProfiles: arr };\n        }),\n      adjacentPoleHeight: \"\",\n      setAdjacentPoleHeight: (height) => set({ adjacentPoleHeight: height }),\n      existingLines: [\n        {\n          type: \"\",\n          height: \"\",\n          makeReady: false,\n          makeReadyHeight: \"\",\n          companyName: \"\",\n        },\n      ],\n      setExistingLines: (lines) => set({ existingLines: lines }),\n      makeReadyNotes: \"\",\n      setMakeReadyNotes: (notes) => set({ makeReadyNotes: notes }),\n      results: null,\n      setResults: (results) => set({ results }),\n      warnings: [],\n      setWarnings: (warnings) => set({ warnings }),\n      engineeringNotes: [],\n      setEngineeringNotes: (notes) => set({ engineeringNotes: notes }),\n      guyAnalysis: null,\n      setGuyAnalysis: (analysis) => set({ guyAnalysis: analysis }),\n      costAnalysis: null,\n      setCostAnalysis: (cost) => set({ costAnalysis: cost }),\n      // Batch-set analysis output to minimize re-renders and state updates\n      setAnalysis: (payload) =>\n        set(() => {\n          const { results, warnings, notes, cost } = payload || {};\n          return {\n            results: results ?? null,\n            warnings: warnings ?? [],\n            engineeringNotes: notes ?? [],\n            costAnalysis: cost ?? null,\n          };\n        }),\n      // UX helper: recommend attach height given min clearances and environment\n      recommendAttachHeight: (proposedFt, env = \"road\") => {\n        try {\n          const base = getNESCClearances(\"communication\", env);\n          const tuned = applyPresetToClearances(\n            base,\n            useAppStore.getState().currentSubmissionProfile,\n          );\n          const target = tuned?.roadClearance || base.roadClearance;\n          const attach = Math.max(Number(proposedFt) || 0, target + 1.0);\n          return { recommendedFt: attach, targetFt: target };\n        } catch {\n          return { recommendedFt: Number(proposedFt) || 0, targetFt: 0 };\n        }\n      },\n      // Scenario snapshots for A/B comparison\n      scenarioA: null,\n      setScenarioA: (scenario) => set({ scenarioA: scenario }),\n      scenarioB: null,\n      setScenarioB: (scenario) => set({ scenarioB: scenario }),\n      // Batch import support\n      mappingPreset: \"generic\",\n      setMappingPreset: (v) => set({ mappingPreset: v }),\n      mappingProfiles: [],\n      addMappingProfile: (name, mapping) =>\n        set((s) => {\n          const filtered = (s.mappingProfiles || []).filter(\n            (p) => p.name !== name,\n          );\n          return { mappingProfiles: [...filtered, { name, mapping }] };\n        }),\n      setMappingProfiles: (profiles) =>\n        set((s) => {\n          const map = new Map();\n          for (const p of s.mappingProfiles || []) map.set(p.name, p);\n          for (const p of profiles || [])\n            if (p?.name && p?.mapping) map.set(p.name, p);\n          return { mappingProfiles: Array.from(map.values()) };\n        }),\n      removeMappingProfile: (name) =>\n        set((s) => ({\n          mappingProfiles: (s.mappingProfiles || []).filter(\n            (p) => p.name !== name,\n          ),\n        })),\n      renameMappingProfile: (oldName, newName) =>\n        set((s) => {\n          const arr = (s.mappingProfiles || []).map((p) =>\n            p.name === oldName ? { ...p, name: newName } : p,\n          );\n          return { mappingProfiles: arr };\n        }),\n      importedPoles: [],\n      setImportedPoles: (arr) => set({ importedPoles: arr || [] }),\n      // Jobs (projects) management\n      // Job shape: {\n      //   id, name, applicantName, jobNumber, presetProfile, jobOwner, notes, createdAt,\n      //   commCompany,                    // Attaching communications company (for manifests/hints)\n      //   submissionProfileName,         // One of submissionProfiles[].name\n      //   submissionProfileOverrides,    // { commToPowerIn?, minTopSpaceFt?, roadClearanceFt?, manifestType? }\n      //   exportProfile,                 // One of EXPORT_PRESETS values (e.g., 'arcgis','ikegps','katapultPro','firstEnergy')\n      // }\n      jobs: [],\n      currentJobId: \"\",\n      addJob: (job) =>\n        set((s) => {\n          const id = job?.id || String(Date.now());\n          const newJob = {\n            id,\n            name: job?.name || \"Untitled Job\",\n            applicantName: job?.applicantName || \"\",\n            jobNumber: job?.jobNumber || \"\",\n            presetProfile: job?.presetProfile || \"\",\n            jobOwner: job?.jobOwner || \"\",\n            notes: job?.notes || \"\",\n            createdAt: job?.createdAt || new Date().toISOString(),\n            commCompany: job?.commCompany || \"\",\n            submissionProfileName:\n              job?.submissionProfileName ||\n              s.currentSubmissionProfile ||\n              \"generic\",\n            submissionProfileOverrides: job?.submissionProfileOverrides || {},\n            exportProfile: job?.exportProfile || \"generic\",\n          };\n          const merged = [...(s.jobs || []), newJob];\n          return {\n            jobs: merged,\n            currentJobId: id,\n            projectName: newJob.name,\n            applicantName: newJob.applicantName,\n            jobNumber: newJob.jobNumber,\n            presetProfile: newJob.presetProfile,\n            jobOwner: newJob.jobOwner,\n          };\n        }),\n      updateJob: (id, patch) =>\n        set((s) => {\n          const arr = (s.jobs || []).map((j) =>\n            j.id === id ? { ...j, ...patch } : j,\n          );\n          const current = arr.find((j) => j.id === s.currentJobId);\n          const updates = current\n            ? {\n                projectName: current.name,\n                applicantName: current.applicantName,\n                jobNumber: current.jobNumber,\n                presetProfile: current.presetProfile,\n                jobOwner: current.jobOwner || \"\",\n              }\n            : {};\n          return { jobs: arr, ...updates };\n        }),\n      removeJob: (id) =>\n        set((s) => {\n          const arr = (s.jobs || []).filter((j) => j.id !== id);\n          let currentJobId = s.currentJobId;\n          if (currentJobId === id) {\n            currentJobId = arr[0]?.id || \"\";\n          }\n          const current = arr.find((j) => j.id === currentJobId);\n          const updates = current\n            ? {\n                projectName: current.name,\n                applicantName: current.applicantName,\n                jobNumber: current.jobNumber,\n                presetProfile: current.presetProfile,\n                jobOwner: current.jobOwner || \"\",\n              }\n            : {};\n          return { jobs: arr, currentJobId, ...updates };\n        }),\n      setCurrentJobId: (id) =>\n        set((s) => {\n          const found = (s.jobs || []).find((j) => j.id === id);\n          if (!found) return { currentJobId: id };\n          return {\n            currentJobId: id,\n            projectName: found.name,\n            applicantName: found.applicantName,\n            jobNumber: found.jobNumber,\n            presetProfile: found.presetProfile,\n            jobOwner: found.jobOwner || \"\",\n          };\n        }),\n      // Field-collected poles (manual collection in the field)\n      collectedPoles: [],\n      setCollectedPoles: (arr) => set({ collectedPoles: arr || [] }),\n      addCollectedPole: (pole) =>\n        set((s) => {\n          const jobId = pole?.jobId || s.currentJobId || \"\";\n          return {\n            collectedPoles: [\n              ...(s.collectedPoles || []),\n              {\n                // planned vs as-built fields\n                asBuilt: {\n                  attachHeight: pole?.asBuilt?.attachHeight || \"\",\n                  powerHeight: pole?.asBuilt?.powerHeight || \"\",\n                },\n                ...pole,\n                jobId,\n              },\n            ],\n          };\n        }),\n      updateCollectedPole: (index, patch) =>\n        set((s) => {\n          const arr = (s.collectedPoles || []).slice();\n          if (index >= 0 && index < arr.length)\n            arr[index] = { ...arr[index], ...patch };\n          return { collectedPoles: arr };\n        }),\n      removeCollectedPole: (index) =>\n        set((s) => {\n          const arr = (s.collectedPoles || []).slice();\n          if (index >= 0 && index < arr.length) arr.splice(index, 1);\n          return { collectedPoles: arr };\n        }),\n      importedSpans: [],\n      setImportedSpans: (arr) => set({ importedSpans: arr || [] }),\n      updateImportedSpan: (index, patch) =>\n        set((s) => {\n          const arr = (s.importedSpans || []).slice();\n          if (index >= 0 && index < arr.length)\n            arr[index] = { ...arr[index], ...patch };\n          return { importedSpans: arr };\n        }),\n      // Cached midspan results (quick-save while working)\n      cachedMidspans: [],\n      addCachedMidspan: (item) =>\n        set((s) => ({\n          cachedMidspans: [\n            ...(s.cachedMidspans || []),\n            { id: String(Date.now()), ...item },\n          ],\n        })),\n      updateCachedMidspan: (id, patch) =>\n        set((s) => ({\n          cachedMidspans: (s.cachedMidspans || []).map((m) =>\n            m.id === id ? { ...m, ...patch } : m,\n          ),\n        })),\n      removeCachedMidspan: (id) =>\n        set((s) => ({\n          cachedMidspans: (s.cachedMidspans || []).filter((m) => m.id !== id),\n        })),\n      clearCachedMidspans: () => set({ cachedMidspans: [] }),\n      importedExistingLines: [],\n      setImportedExistingLines: (arr) =>\n        set({ importedExistingLines: arr || [] }),\n      existingLinesCSV: \"\",\n      setExistingLinesCSV: (v) => set({ existingLinesCSV: v }),\n      csvLineMapping: {\n        type: \"type\",\n        company: \"company\",\n        height: \"height\",\n        makeReady: \"makeReady\",\n        makeReadyHeight: \"makeReadyHeight\",\n      },\n      setCsvLineMapping: (m) => set({ csvLineMapping: m }),\n      // PDF overlay layout presets per job and environment\n      // Shape: pdfLayouts[jobId||'_global'][env][name] = layoutArray\n      pdfLayouts: {},\n      savePdfLayout: (env, name, layout) =>\n        set((s) => {\n          const jobId = s.currentJobId || \"_global\";\n          const layouts = { ...(s.pdfLayouts || {}) };\n          const byJob = { ...(layouts[jobId] || {}) };\n          const byEnv = { ...(byJob[env] || {}) };\n          byEnv[name || \"Default\"] = Array.isArray(layout) ? layout : [];\n          byJob[env] = byEnv;\n          layouts[jobId] = byJob;\n          return { pdfLayouts: layouts };\n        }),\n      removePdfLayout: (env, name) =>\n        set((s) => {\n          const jobId = s.currentJobId || \"_global\";\n          const layouts = { ...(s.pdfLayouts || {}) };\n          const byJob = { ...(layouts[jobId] || {}) };\n          const byEnv = { ...(byJob[env] || {}) };\n          if (name in byEnv) delete byEnv[name];\n          byJob[env] = byEnv;\n          layouts[jobId] = byJob;\n          return { pdfLayouts: layouts };\n        }),\n      // Reset all state\n      reset: () =>\n        set({\n          uiSectionSaved: {},\n          poleHeight: \"\",\n          poleClass: \"\",\n          presetProfile: \"\",\n          customMinTopSpace: \"\",\n          customRoadClearance: \"\",\n          customCommToPower: \"\",\n          useTickMarkFormat: false,\n          preferAutoSpanLength: false,\n          spanLenDeltaThresholdFt: 10,\n          tableDensity: \"comfortable\",\n          spansColumnSegmentsVisible: true,\n          spansColumnActionsVisible: true,\n          projectName: \"\",\n          applicantName: \"\",\n          jobNumber: \"\",\n          jobOwner: \"\",\n          logoDataUrl: \"\",\n          poleLatitude: \"\",\n          poleLongitude: \"\",\n          existingPowerHeight: \"\",\n          existingPowerVoltage: \"distribution\",\n          spanDistance: \"\",\n          spanEnvironment: \"road\",\n          isNewConstruction: true,\n          attachmentType: \"communication\",\n          cableDiameter: \"\",\n          windSpeed: \"90\",\n          iceThicknessIn: \"0\",\n          hasTransformer: false,\n          hasStreetlight: false,\n          requiresGuying: false,\n          streetLightHeight: \"\",\n          dripLoopHeight: \"\",\n          powerReference: \"auto\",\n          proposedLineHeight: \"\",\n          submissionProfiles: [\n            {\n              name: \"firstEnergy\",\n              label: \"FirstEnergy / Mon Power\",\n              commToPowerIn: 44,\n              minTopSpaceFt: 2.0,\n              roadClearanceFt: 18.0,\n              envRoadFt: 18.0,\n              envResidentialFt: 15.5,\n              envPedestrianFt: 15.5,\n              envFieldFt: 15.5,\n              envResidentialYardFt: 9.5,\n              envResidentialDrivewayFt: 15.5,\n              envNonResidentialDrivewayFt: 16.0,\n              envWaterwayFt: 14.0,\n              envWVHighwayFt: 18.0,\n              envPAHighwayFt: 18.0,\n              envOHHighwayFt: 18.0,\n              envMDHighwayFt: 18.0,\n              envInterstateFt: 18.0,\n              envInterstateNewCrossingFt: 21.0,\n              envRailroadFt: 27.0,\n              minCommAttachFt: 14.0,\n              manifestType: \"FE\",\n            },\n            {\n              name: \"aep\",\n              label: \"AEP (Generic)\",\n              commToPowerIn: 40,\n              minTopSpaceFt: 2.0,\n              roadClearanceFt: 18.0,\n              envRoadFt: 18.0,\n              envResidentialFt: 15.5,\n              envPedestrianFt: 15.5,\n              envFieldFt: 15.5,\n              envResidentialYardFt: 9.5,\n              envResidentialDrivewayFt: 15.5,\n              envNonResidentialDrivewayFt: 16.0,\n              envWaterwayFt: 14.0,\n              envWVHighwayFt: 18.0,\n              envPAHighwayFt: 18.0,\n              envOHHighwayFt: 18.0,\n              envMDHighwayFt: 18.0,\n              envInterstateFt: 18.0,\n              envInterstateNewCrossingFt: 21.0,\n              envRailroadFt: 27.0,\n              minCommAttachFt: 14.0,\n              manifestType: \"AEP\",\n            },\n            {\n              name: \"duke\",\n              label: \"Duke Energy\",\n              commToPowerIn: 40,\n              minTopSpaceFt: 1.0,\n              roadClearanceFt: 18.0,\n              envRoadFt: 18.0,\n              envResidentialFt: 15.5,\n              envPedestrianFt: 15.5,\n              envFieldFt: 15.5,\n              envResidentialYardFt: 9.5,\n              envResidentialDrivewayFt: 15.5,\n              envNonResidentialDrivewayFt: 16.0,\n              envWaterwayFt: 14.0,\n              envWVHighwayFt: 18.0,\n              envPAHighwayFt: 18.0,\n              envOHHighwayFt: 18.0,\n              envMDHighwayFt: 18.0,\n              envInterstateFt: 18.0,\n              envInterstateNewCrossingFt: 21.0,\n              envRailroadFt: 27.0,\n              minCommAttachFt: 14.0,\n              manifestType: \"DUKE\",\n            },\n            {\n              name: \"generic\",\n              label: \"Generic / NESC\",\n              commToPowerIn: 40,\n              minTopSpaceFt: 1.0,\n              roadClearanceFt: 18.0,\n              envRoadFt: 18.0,\n              envResidentialFt: 15.5,\n              envPedestrianFt: 15.5,\n              envFieldFt: 15.5,\n              envResidentialYardFt: 9.5,\n              envResidentialDrivewayFt: 15.5,\n              envNonResidentialDrivewayFt: 16.0,\n              envWaterwayFt: 14.0,\n              envWVHighwayFt: 18.0,\n              envPAHighwayFt: 18.0,\n              envOHHighwayFt: 18.0,\n              envMDHighwayFt: 18.0,\n              envInterstateFt: 18.0,\n              envInterstateNewCrossingFt: 21.0,\n              envRailroadFt: 27.0,\n              minCommAttachFt: 14.0,\n              manifestType: \"GEN\",\n            },\n          ],\n          currentSubmissionProfile: \"firstEnergy\",\n          adjacentPoleHeight: \"\",\n          existingLines: [\n            {\n              type: \"\",\n              height: \"\",\n              makeReady: false,\n              makeReadyHeight: \"\",\n              companyName: \"\",\n            },\n          ],\n          makeReadyNotes: \"\",\n          results: null,\n          warnings: [],\n          engineeringNotes: [],\n          guyAnalysis: null,\n          costAnalysis: null,\n          scenarioA: null,\n          scenarioB: null,\n          mappingPreset: \"generic\",\n          mappingProfiles: [],\n          importedPoles: [],\n          collectedPoles: [],\n          importedSpans: [],\n          cachedMidspans: [],\n          importedExistingLines: [],\n          existingLinesCSV: \"\",\n          csvLineMapping: {\n            type: \"type\",\n            company: \"company\",\n            height: \"height\",\n            makeReady: \"makeReady\",\n            makeReadyHeight: \"makeReadyHeight\",\n          },\n          pdfLayouts: {},\n        }),\n    }),\n    {\n      name: \"pole-height-store\",\n      storage: createJSONStorage(() => localStorage),\n    },\n  ),\n);\n\nexport default useAppStore;\n","export function setPageMeta({ title, description }) {\n  try {\n    if (title) document.title = title;\n    let meta = document.querySelector('meta[name=\"description\"]');\n    if (!meta) {\n      meta = document.createElement(\"meta\");\n      meta.setAttribute(\"name\", \"description\");\n      document.head.appendChild(meta);\n    }\n    if (description) meta.setAttribute(\"content\", description);\n  } catch {\n    // ignore in non-DOM environments (tests)\n  }\n}\n","export function errorsToCSV(errors = []) {\n  const header = \"index,error\";\n  return [\n    header,\n    ...errors.map((e, i) => `${i},\"${String(e).replace(/\"/g, '\"\"')}\"`),\n  ].join(\"\\n\");\n}\n\nexport function downloadErrorsCSV(errors, filename = \"validation_errors.csv\") {\n  if (!errors?.length) return;\n  const csv = errorsToCSV(errors);\n  const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = filename;\n  document.body.appendChild(a);\n  a.click();\n  setTimeout(() => {\n    URL.revokeObjectURL(url);\n    a.remove();\n  }, 0);\n}\n","// Manifest builder for utility export packages\n// Profiles supported: 'firstEnergy', 'aep', 'duke', 'generic'\n\nexport function buildManifest(profileName, poles, job) {\n  const profile = profileName || \"generic\";\n  const j = job || {};\n  switch (profile) {\n    case \"firstEnergy\": {\n      const header = [\n        \"id\",\n        \"latitude\",\n        \"longitude\",\n        \"height\",\n        \"class\",\n        \"powerHeight\",\n        \"voltage\",\n        \"hasTransformer\",\n        \"spanDistance\",\n        \"adjacentPoleHeight\",\n        \"attachmentType\",\n        \"status\",\n        \"hasPhoto\",\n        \"timestamp\",\n        \"jobId\",\n        \"asBuiltAttachHeight\",\n        \"asBuiltPowerHeight\",\n        \"varianceIn\",\n        \"variancePass\",\n        \"commCompany\",\n      ];\n      const rows = poles.map((p) => [\n        p.id || \"\",\n        p.latitude || \"\",\n        p.longitude || \"\",\n        p.height || \"\",\n        p.poleClass || \"\",\n        p.powerHeight || \"\",\n        p.voltage || \"\",\n        p.hasTransformer ? \"Y\" : \"N\",\n        p.spanDistance || \"\",\n        p.adjacentPoleHeight || \"\",\n        p.attachmentType || \"\",\n        p.status || \"draft\",\n        p.photoDataUrl ? \"Y\" : \"N\",\n        p.timestamp || \"\",\n        p.jobId || \"\",\n        p.asBuilt?.attachHeight || \"\",\n        p.asBuilt?.powerHeight || \"\",\n        p._varianceIn || \"\",\n        p._variancePass || \"\",\n        j.commCompany || \"\",\n      ]);\n      return { header, rows, fileLabel: \"fe-spans-package\" };\n    }\n    case \"aep\": {\n      const header = [\n        \"PoleID\",\n        \"Lat\",\n        \"Lon\",\n        \"PoleHtFt\",\n        \"Class\",\n        \"PowerHt\",\n        \"Voltage\",\n        \"XFMR\",\n        \"SpanFt\",\n        \"AdjPoleFt\",\n        \"Cable\",\n        \"Status\",\n        \"Photo\",\n        \"Timestamp\",\n        \"JobId\",\n        \"CommCompany\",\n      ];\n      const rows = poles.map((p) => [\n        p.id || \"\",\n        p.latitude || \"\",\n        p.longitude || \"\",\n        p.height || \"\",\n        p.poleClass || \"\",\n        p.powerHeight || \"\",\n        p.voltage || \"\",\n        p.hasTransformer ? \"Y\" : \"N\",\n        p.spanDistance || \"\",\n        p.adjacentPoleHeight || \"\",\n        p.attachmentType || \"\",\n        p.status || \"draft\",\n        p.photoDataUrl ? \"Y\" : \"N\",\n        p.timestamp || \"\",\n        p.jobId || \"\",\n        j.commCompany || \"\",\n      ]);\n      return { header, rows, fileLabel: \"aep-application-package\" };\n    }\n    case \"duke\": {\n      // Duke Energy style application manifest (plausible schema)\n      const header = [\n        \"PoleTag\",\n        \"Latitude\",\n        \"Longitude\",\n        \"PoleHeightFt\",\n        \"Class\",\n        \"PowerHtFt\",\n        \"VoltageClass\",\n        \"HasXFMR\",\n        \"SpanLengthFt\",\n        \"AdjPoleHtFt\",\n        \"Attachment\",\n        \"Status\",\n        \"PhotoIncluded\",\n        \"Timestamp\",\n        \"JobId\",\n        \"CommCompany\",\n      ];\n      const rows = poles.map((p) => [\n        p.id || \"\",\n        p.latitude || \"\",\n        p.longitude || \"\",\n        p.height || \"\",\n        p.poleClass || \"\",\n        p.powerHeight || \"\",\n        p.voltage || \"\",\n        p.hasTransformer ? \"Y\" : \"N\",\n        p.spanDistance || \"\",\n        p.adjacentPoleHeight || \"\",\n        p.attachmentType || \"\",\n        p.status || \"draft\",\n        p.photoDataUrl ? \"Y\" : \"N\",\n        p.timestamp || \"\",\n        p.jobId || \"\",\n        j.commCompany || \"\",\n      ]);\n      return { header, rows, fileLabel: \"duke-application-package\" };\n    }\n    default: {\n      const header = [\n        \"id\",\n        \"lat\",\n        \"lon\",\n        \"height\",\n        \"class\",\n        \"span\",\n        \"status\",\n        \"photo\",\n        \"jobId\",\n        \"commCompany\",\n      ];\n      const rows = poles.map((p) => [\n        p.id || \"\",\n        p.latitude || \"\",\n        p.longitude || \"\",\n        p.height || \"\",\n        p.poleClass || \"\",\n        p.spanDistance || \"\",\n        p.status || \"draft\",\n        p.photoDataUrl ? \"Y\" : \"N\",\n        p.jobId || \"\",\n        j.commCompany || \"\",\n      ]);\n      return { header, rows, fileLabel: \"utility-package\" };\n    }\n  }\n}\n\nexport function csvFrom(header, rows) {\n  const safe = (v) => String(v ?? \"\").replaceAll('\"', '\"\"');\n  return [header.join(\",\"), ...rows.map((r) => r.map(safe).join(\",\"))].join(\n    \"\\n\",\n  );\n}\n","/**\n * GIS/GPS Validation Utilities\n * Validates coordinates, geometries, and geospatial data\n */\n\n/**\n * Coordinate validation errors\n */\nexport class CoordinateValidationError extends Error {\n  constructor(message, field, value) {\n    super(message);\n    this.name = \"CoordinateValidationError\";\n    this.field = field;\n    this.value = value;\n  }\n}\n\n/**\n * Validate latitude value\n * @param {number|string} lat - Latitude value\n * @returns {{ valid: boolean, value?: number, error?: string }}\n */\nexport function validateLatitude(lat) {\n  const num = typeof lat === \"number\" ? lat : parseFloat(lat);\n\n  if (isNaN(num)) {\n    return {\n      valid: false,\n      error: \"Latitude must be a valid number\",\n    };\n  }\n\n  if (num < -90 || num > 90) {\n    return {\n      valid: false,\n      error: \"Latitude must be between -90 and 90 degrees\",\n    };\n  }\n\n  return { valid: true, value: num };\n}\n\n/**\n * Validate longitude value\n * @param {number|string} lon - Longitude value\n * @returns {{ valid: boolean, value?: number, error?: string }}\n */\nexport function validateLongitude(lon) {\n  const num = typeof lon === \"number\" ? lon : parseFloat(lon);\n\n  if (isNaN(num)) {\n    return {\n      valid: false,\n      error: \"Longitude must be a valid number\",\n    };\n  }\n\n  if (num < -180 || num > 180) {\n    return {\n      valid: false,\n      error: \"Longitude must be between -180 and 180 degrees\",\n    };\n  }\n\n  return { valid: true, value: num };\n}\n\n/**\n * Validate coordinate pair\n * @param {number|string} lat - Latitude\n * @param {number|string} lon - Longitude\n * @returns {{ valid: boolean, coordinates?: [number, number], errors?: string[] }}\n */\nexport function validateCoordinates(lat, lon) {\n  const errors = [];\n\n  const latResult = validateLatitude(lat);\n  if (!latResult.valid) {\n    errors.push(latResult.error);\n  }\n\n  const lonResult = validateLongitude(lon);\n  if (!lonResult.valid) {\n    errors.push(lonResult.error);\n  }\n\n  if (errors.length > 0) {\n    return { valid: false, errors };\n  }\n\n  return {\n    valid: true,\n    coordinates: [lonResult.value, latResult.value], // GeoJSON format [lon, lat]\n  };\n}\n\n/**\n * Validate GeoJSON Point geometry\n * @param {any} point - Point geometry object\n * @returns {{ valid: boolean, geometry?: any, error?: string }}\n */\nexport function validatePointGeometry(point) {\n  if (!point || typeof point !== \"object\") {\n    return {\n      valid: false,\n      error: \"Point geometry must be an object\",\n    };\n  }\n\n  if (point.type !== \"Point\") {\n    return {\n      valid: false,\n      error: `Expected Point geometry, got ${point.type}`,\n    };\n  }\n\n  if (!Array.isArray(point.coordinates) || point.coordinates.length !== 2) {\n    return {\n      valid: false,\n      error: \"Point coordinates must be an array of [longitude, latitude]\",\n    };\n  }\n\n  const [lon, lat] = point.coordinates;\n  const result = validateCoordinates(lat, lon);\n\n  if (!result.valid) {\n    return {\n      valid: false,\n      error: result.errors.join(\"; \"),\n    };\n  }\n\n  return {\n    valid: true,\n    geometry: {\n      type: \"Point\",\n      coordinates: result.coordinates,\n    },\n  };\n}\n\n/**\n * Validate GeoJSON LineString geometry\n * @param {any} lineString - LineString geometry object\n * @returns {{ valid: boolean, geometry?: any, error?: string }}\n */\nexport function validateLineStringGeometry(lineString) {\n  if (!lineString || typeof lineString !== \"object\") {\n    return {\n      valid: false,\n      error: \"LineString geometry must be an object\",\n    };\n  }\n\n  if (lineString.type !== \"LineString\") {\n    return {\n      valid: false,\n      error: `Expected LineString geometry, got ${lineString.type}`,\n    };\n  }\n\n  if (\n    !Array.isArray(lineString.coordinates) ||\n    lineString.coordinates.length < 2\n  ) {\n    return {\n      valid: false,\n      error: \"LineString must have at least 2 coordinate pairs\",\n    };\n  }\n\n  const validatedCoordinates = [];\n  const errors = [];\n\n  lineString.coordinates.forEach((coord, index) => {\n    if (!Array.isArray(coord) || coord.length !== 2) {\n      errors.push(`Invalid coordinate at index ${index}`);\n      return;\n    }\n\n    const [lon, lat] = coord;\n    const result = validateCoordinates(lat, lon);\n\n    if (!result.valid) {\n      errors.push(`Coordinate ${index}: ${result.errors.join(\", \")}`);\n    } else {\n      validatedCoordinates.push(result.coordinates);\n    }\n  });\n\n  if (errors.length > 0) {\n    return {\n      valid: false,\n      error: errors.join(\"; \"),\n    };\n  }\n\n  return {\n    valid: true,\n    geometry: {\n      type: \"LineString\",\n      coordinates: validatedCoordinates,\n    },\n  };\n}\n\n/**\n * Validate GeoJSON Feature\n * @param {any} feature - GeoJSON Feature object\n * @returns {{ valid: boolean, feature?: any, errors?: string[] }}\n */\nexport function validateGeoJSONFeature(feature) {\n  const errors = [];\n\n  if (!feature || typeof feature !== \"object\") {\n    return {\n      valid: false,\n      errors: [\"Feature must be an object\"],\n    };\n  }\n\n  if (feature.type !== \"Feature\") {\n    errors.push(`Expected Feature type, got ${feature.type}`);\n  }\n\n  if (!feature.geometry) {\n    errors.push(\"Feature must have a geometry property\");\n  } else {\n    let geometryResult;\n\n    switch (feature.geometry.type) {\n      case \"Point\":\n        geometryResult = validatePointGeometry(feature.geometry);\n        break;\n      case \"LineString\":\n        geometryResult = validateLineStringGeometry(feature.geometry);\n        break;\n      default:\n        errors.push(`Unsupported geometry type: ${feature.geometry.type}`);\n    }\n\n    if (geometryResult && !geometryResult.valid) {\n      errors.push(geometryResult.error);\n    }\n  }\n\n  if (errors.length > 0) {\n    return { valid: false, errors };\n  }\n\n  return {\n    valid: true,\n    feature: {\n      type: \"Feature\",\n      geometry: feature.geometry,\n      properties: feature.properties || {},\n    },\n  };\n}\n\n/**\n * Calculate distance between two coordinates (Haversine formula)\n * @param {[number, number]} coord1 - [lon, lat]\n * @param {[number, number]} coord2 - [lon, lat]\n * @returns {number} Distance in meters\n */\nexport function calculateDistance(coord1, coord2) {\n  const R = 6371e3; // Earth's radius in meters\n  const [lon1, lat1] = coord1;\n  const [lon2, lat2] = coord2;\n\n  const φ1 = (lat1 * Math.PI) / 180;\n  const φ2 = (lat2 * Math.PI) / 180;\n  const Δφ = ((lat2 - lat1) * Math.PI) / 180;\n  const Δλ = ((lon2 - lon1) * Math.PI) / 180;\n\n  const a =\n    Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\n    Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n  return R * c;\n}\n\n/**\n * Validate that coordinates are within a reasonable distance\n * @param {[number, number]} coord1 - [lon, lat]\n * @param {[number, number]} coord2 - [lon, lat]\n * @param {number} maxDistanceMeters - Maximum allowed distance\n * @returns {{ valid: boolean, distance?: number, error?: string }}\n */\nexport function validateDistanceBetweenPoints(\n  coord1,\n  coord2,\n  maxDistanceMeters = 10000,\n) {\n  const distance = calculateDistance(coord1, coord2);\n\n  if (distance > maxDistanceMeters) {\n    return {\n      valid: false,\n      distance,\n      error: `Distance between points (${Math.round(distance)}m) exceeds maximum allowed (${maxDistanceMeters}m)`,\n    };\n  }\n\n  return {\n    valid: true,\n    distance,\n  };\n}\n\n/**\n * Validate pole coordinates with context\n * @param {any} pole - Pole object with latitude/longitude\n * @returns {{ valid: boolean, errors?: string[], warnings?: string[] }}\n */\nexport function validatePoleCoordinates(pole) {\n  const errors = [];\n  const warnings = [];\n\n  // Check if both coordinates are missing (distinguish from 0,0)\n  if (pole.latitude === undefined && pole.longitude === undefined) {\n    warnings.push(\"No coordinates provided for pole\");\n    return { valid: true, warnings };\n  }\n\n  if (\n    pole.latitude !== undefined &&\n    pole.latitude !== null &&\n    (pole.longitude === undefined || pole.longitude === null)\n  ) {\n    errors.push(\"Latitude provided without longitude\");\n  }\n\n  if (\n    pole.longitude !== undefined &&\n    pole.longitude !== null &&\n    (pole.latitude === undefined || pole.latitude === null)\n  ) {\n    errors.push(\"Longitude provided without latitude\");\n  }\n\n  if (\n    pole.latitude !== undefined &&\n    pole.latitude !== null &&\n    pole.longitude !== undefined &&\n    pole.longitude !== null\n  ) {\n    const result = validateCoordinates(pole.latitude, pole.longitude);\n    if (!result.valid) {\n      errors.push(...result.errors);\n    }\n\n    // Check if coordinates are at [0, 0] (likely an error)\n    if (\n      result.valid &&\n      result.coordinates[0] === 0 &&\n      result.coordinates[1] === 0\n    ) {\n      warnings.push(\"Coordinates are at [0, 0] - this is likely unintentional\");\n    }\n\n    // Check if coordinates are very close to [0, 0] (null island proximity)\n    if (result.valid) {\n      const lat = Math.abs(result.coordinates[1]);\n      const lon = Math.abs(result.coordinates[0]);\n      if (lat < 0.001 && lon < 0.001 && !(lat === 0 && lon === 0)) {\n        warnings.push(\"Coordinates very close to [0, 0] - please verify\");\n      }\n    }\n  }\n\n  return {\n    valid: errors.length === 0,\n    errors, // Always return array\n    warnings: warnings.length > 0 ? warnings : [],\n  };\n}\n\n/**\n * Batch validate multiple poles\n * @param {any[]} poles - Array of pole objects\n * @returns {{ valid: boolean, results: any[], summary: any }}\n */\nexport function validatePoleBatch(poles) {\n  const results = poles.map((pole, index) => ({\n    index,\n    poleId: pole.id,\n    ...validatePoleCoordinates(pole),\n  }));\n\n  const errors = results.filter((r) => !r.valid);\n  const warnings = results.filter((r) => r.warnings && r.warnings.length > 0);\n\n  return {\n    valid: errors.length === 0,\n    results,\n    summary: {\n      total: poles.length,\n      valid: poles.length - errors.length,\n      errors: errors.length,\n      warnings: warnings.length,\n    },\n  };\n}\n","import { z } from \"zod\";\n\n// Schemas aligned with importer output field names\nexport const PoleSchema = z.object({\n  id: z.string().optional(),\n  latitude: z.union([z.number().finite(), z.null()]).optional(),\n  longitude: z.union([z.number().finite(), z.null()]).optional(),\n  height: z.union([z.number(), z.string()]).optional(),\n  class: z.string().optional(),\n  powerHeight: z.union([z.number(), z.string()]).optional(),\n  voltage: z.string().optional(),\n  hasTransformer: z.boolean().optional(),\n  incomingBearingDeg: z.number().min(0).max(360).optional(),\n  outgoingBearingDeg: z.number().min(0).max(360).optional(),\n  PULL_ft: z.number().min(0).optional(),\n});\n\nexport const SpanSchema = z.object({\n  id: z.string().optional(),\n  fromId: z.any().optional(),\n  toId: z.any().optional(),\n  length: z.number().min(0).optional(),\n  proposedAttach: z.union([z.number(), z.string()]).optional(),\n  environment: z.string().optional(),\n  incomingBearingDeg: z.number().min(0).max(360).optional(),\n  outgoingBearingDeg: z.number().min(0).max(360).optional(),\n  PULL_ft: z.number().min(0).optional(),\n});\n\nexport function validatePoles(poles) {\n  if (!Array.isArray(poles))\n    return { errors: [\"Poles must be an array\"], data: [] };\n  const errors = [];\n  const data = [];\n  poles.forEach((p, idx) => {\n    const r = PoleSchema.safeParse(p);\n    if (r.success) data.push(r.data);\n    else\n      errors.push(\n        `Pole[${idx}]: ${r.error.issues.map((i) => i.message).join(\"; \")}`,\n      );\n  });\n  return { errors, data };\n}\n\nexport function validateSpans(spans) {\n  if (!Array.isArray(spans))\n    return { errors: [\"Spans must be an array\"], data: [] };\n  const errors = [];\n  const data = [];\n  spans.forEach((s, idx) => {\n    const r = SpanSchema.safeParse(s);\n    if (r.success) data.push(r.data);\n    else\n      errors.push(\n        `Span[${idx}]: ${r.error.issues.map((i) => i.message).join(\"; \")}`,\n      );\n  });\n  return { errors, data };\n}\n","// Manifest of official permit resources by agency and environment.\n// We only include URLs and guidance, not the templates themselves.\n\nconst permitTemplates = {\n  agencies: {\n    wvdot: {\n      name: \"West Virginia Division of Highways (WVDOT)\",\n      environments: [\"wvHighway\"],\n      resources: [\n        {\n          label: \"MM-109 Right of Way Entry Permit (PDF)\",\n          url: \"https://transportation.wv.gov/highways/right-of-way/Documents/Railroads%20%26%20Utils%202023/MM-109%20Right%20of%20Way%20Entry%20Permit%20Application.pdf\",\n          notes:\n            \"Primary application for right-of-way entry; attach plans, traffic control, and calculations.\",\n        },\n        {\n          label: \"Alternate MM-109 link\",\n          url: \"https://transportation.wv.gov/highways/engineering/files/MM-109.pdf\",\n          notes: \"Alternate mirror link referenced by WV regulations.\",\n        },\n      ],\n      requirements: [\n        \"Completed MM-109 application with applicant and contact info\",\n        \"Location details with GPS where available\",\n        \"Plan/profile drawing showing ground clearance and midspan\",\n        \"Traffic control plan (if work impacts traffic)\",\n        \"Bond/deposit as required by district\",\n        \"Proof of utility coordination as applicable\",\n      ],\n    },\n    penndot: {\n      name: \"PennDOT (Pennsylvania Department of Transportation)\",\n      environments: [\"paHighway\"],\n      resources: [\n        {\n          label: \"HOP ePermitting Portal\",\n          url: \"https://www.epermitting.penndot.gov/EPS/home/home.jsp\",\n          notes:\n            \"Highway Occupancy Permit (HOP) applications are submitted online.\",\n        },\n        {\n          label: \"Form M-945A: Application for Highway Occupancy Permit (PDF)\",\n          url: \"https://www.pa.gov/content/dam/copapwp-pagov/en/penndot/documents/public/pubsforms/forms/m-945a.pdf\",\n          notes:\n            \"Reference application document. Actual submission via ePermitting.\",\n        },\n        {\n          label: \"General HOP Guidance\",\n          url: \"https://www.pa.gov/services/penndot/apply-for-a-penndot-highway-occupancy-permit.html\",\n          notes: \"Overview of HOP process and forms.\",\n        },\n      ],\n      requirements: [\n        \"Online application via HOP ePermitting\",\n        \"Location plan and traffic control (if applicable)\",\n        \"Utility coordination and restoration details\",\n        \"Clearance calculations and drawings for overhead crossings\",\n      ],\n    },\n    odot: {\n      name: \"Ohio Department of Transportation (ODOT)\",\n      environments: [\"ohHighway\"],\n      resources: [\n        {\n          label: \"ODOT Permits (Utility)\",\n          url: \"https://www.transportation.ohio.gov/wps/portal/gov/odot/programs/utility\",\n          notes:\n            \"Utility accommodation and permitting resources for state routes.\",\n        },\n      ],\n      requirements: [\n        \"Utility permit application through ODOT district\",\n        \"Plans showing location, clearances, and traffic control\",\n        \"Compliance with utility accommodation policy\",\n      ],\n    },\n    mdot: {\n      name: \"Maryland DOT State Highway Administration (MDOT SHA)\",\n      environments: [\"mdHighway\"],\n      resources: [\n        {\n          label: \"MDOT SHA Utility Permits\",\n          url: \"https://www.roads.maryland.gov/Pages/default.aspx?PageId=775\",\n          notes: \"Utility permit information and contacts for state highways.\",\n        },\n      ],\n      requirements: [\n        \"Utility permit application with location plans\",\n        \"Clearance/encroachment drawings and traffic control where needed\",\n        \"District coordination and conditions\",\n      ],\n    },\n    csx: {\n      name: \"CSX Transportation (Railroad)\",\n      environments: [\"railroad\"],\n      resources: [\n        {\n          label: \"CSX Property Portal – Utility Permits\",\n          url: \"https://www.csx.com/index.cfm/customers/value-added-services/property-real-estate/permitting-utility-wireless-infrastructure-installations-and-rights-of-entry/utility-permits/\",\n          notes: \"Submit applications online; see fees and processing info.\",\n        },\n        {\n          label: \"Application for Facility/Utility Installations (sample PDF)\",\n          url: \"https://www.csx.com/index.cfm/library/files/customers/property-real-estate/permitting/utility-permits/facility-encroachment-application/\",\n          notes: \"Reference form; current process uses CSX Property Portal.\",\n        },\n      ],\n      requirements: [\n        \"Online application via CSX Property Portal\",\n        \"Plan/profile drawings with vertical and horizontal clearances\",\n        \"Insurance and fee payment per CSX requirements\",\n      ],\n    },\n  },\n};\n\nexport function getTemplatesForEnvironment(env) {\n  const out = [];\n  const { agencies } = permitTemplates;\n  for (const key of Object.keys(agencies)) {\n    const a = agencies[key];\n    if ((a.environments || []).includes(env)) out.push({ key, ...a });\n  }\n  return out;\n}\n\nexport function buildTemplatesText(env) {\n  const templates = getTemplatesForEnvironment(env) || [];\n  if (!templates.length) return \"\";\n  const lines = [];\n  for (const t of templates) {\n    lines.push(`Agency: ${t.name}`);\n    if (t.resources?.length) {\n      lines.push(\"Resources:\");\n      for (const r of t.resources) {\n        lines.push(`- ${r.label}: ${r.url}`);\n        if (r.notes) lines.push(`  Notes: ${r.notes}`);\n      }\n    }\n    if (t.requirements?.length) {\n      lines.push(\"Common Requirements:\");\n      for (const req of t.requirements) lines.push(`- ${req}`);\n    }\n    lines.push(\"\");\n  }\n  return lines.join(\"\\n\");\n}\n\nexport default permitTemplates;\n","// Build normalized key-value maps for official form field population.\n// These do not embed official templates; instead, they provide a consistent\n// set of fields that can be transcribed into agency forms.\n\nfunction baseFields(summary) {\n  const s = summary || {};\n  return {\n    type: s.type || \"\",\n    applicant: s.job?.applicant || \"\",\n    jobName: s.job?.name || \"\",\n    jobNumber: s.job?.jobNumber || \"\",\n    owner: s.job?.owner || \"\",\n    commCompany: s.job?.commCompany || \"\",\n    submissionProfileName: s.job?.submissionProfileName || \"\",\n    manifestType: s.profile?.manifestType || \"\",\n    environment: s.environment || \"\",\n    poleHeightFt: s.pole?.heightFt ?? \"\",\n    poleClass: s.pole?.class || \"\",\n    poleLatitude: s.pole?.gps?.lat || \"\",\n    poleLongitude: s.pole?.gps?.lon || \"\",\n    // Geospatial from controlling midspan\n    midLatitude: s.span?.midLatitude || \"\",\n    midLongitude: s.span?.midLongitude || \"\",\n    fromPoleId: s.span?.endpoints?.from?.id || \"\",\n    toPoleId: s.span?.endpoints?.to?.id || \"\",\n    fromLatitude: s.span?.endpoints?.from?.latitude || \"\",\n    fromLongitude: s.span?.endpoints?.from?.longitude || \"\",\n    toLatitude: s.span?.endpoints?.to?.latitude || \"\",\n    toLongitude: s.span?.endpoints?.to?.longitude || \"\",\n    powerVoltage: s.power?.voltage || \"\",\n    powerHeight: s.power?.heightFt || \"\",\n    spanLengthFt: s.span?.lengthFt ?? \"\",\n    midspanFt: s.span?.midspanFt ?? \"\",\n    targetGroundClearanceFt: s.span?.targetFt ?? \"\",\n    computedGroundClearanceFt: s.span?.computedGroundClearanceFt ?? \"\",\n    targetSource: s.span?.targetSource || \"\",\n    attachProposedFt: s.attach?.proposedFt ?? \"\",\n    attachBasis: s.attach?.basis || \"\",\n    attachDetail: s.attach?.detail || \"\",\n    generatedAt: s.timestamps?.generatedAt || new Date().toISOString(),\n  };\n}\n\nexport function buildMM109Fields(summary) {\n  const f = baseFields(summary);\n  // WVDOH-specific aliases (keys named after common MM-109 concepts)\n  return {\n    ...f,\n    // Aliases for convenience (can be extended later as needed)\n    applicantCompany: f.applicant,\n    roadwayType: f.environment,\n    latitude: f.poleLatitude,\n    longitude: f.poleLongitude,\n  };\n}\n\nexport function buildCSXFields(summary) {\n  const f = baseFields(summary);\n  // CSX-specific aliases\n  return {\n    ...f,\n    applicantCompany: f.applicant,\n    crossingType: f.environment,\n    latitude: f.poleLatitude,\n    longitude: f.poleLongitude,\n  };\n}\n\nexport function buildStateHighwayFields(summary, agencyLabel) {\n  const f = baseFields(summary);\n  return {\n    ...f,\n    agency: agencyLabel || \"State DOT\",\n    roadwayType: f.environment,\n    latitude: f.poleLatitude,\n    longitude: f.poleLongitude,\n  };\n}\n\nexport default { buildMM109Fields, buildCSXFields, buildStateHighwayFields };\n","// Thin async boundary for loading pdf-lib heavy code paths via CDN.\n// Centralizing here helps create a single dynamic import point for pdf-lib\n// so that unrelated routes and early interactions avoid downloading the PDF code.\n\nlet pdfLibCache = null;\n\nasync function loadPdfLibFromCDN() {\n  if (pdfLibCache) return pdfLibCache;\n\n  try {\n    // Check if PDFLib is already available globally (from CDN)\n    if (window.PDFLib) {\n      pdfLibCache = window.PDFLib;\n      return window.PDFLib;\n    }\n\n    // Load pdf-lib from CDN to reduce bundle size\n    const script = document.createElement(\"script\");\n    script.src =\n      \"https://cdn.jsdelivr.net/npm/pdf-lib@1.17.1/dist/pdf-lib.min.js\";\n    script.async = true;\n\n    const loadPromise = new Promise((resolve, reject) => {\n      script.onload = () => {\n        if (window.PDFLib) {\n          pdfLibCache = window.PDFLib;\n          resolve(window.PDFLib);\n        } else {\n          reject(new Error(\"PDF-lib failed to load from CDN\"));\n        }\n      };\n      script.onerror = () =>\n        reject(new Error(\"PDF-lib CDN script failed to load\"));\n    });\n\n    document.head.appendChild(script);\n    return await loadPromise;\n  } catch (error) {\n    console.warn(\"CDN load failed, falling back to dynamic import:\", error);\n    // Fallback to dynamic import if CDN fails\n    try {\n      const mod = await import(\"pdf-lib\");\n      pdfLibCache = mod;\n      return mod;\n    } catch (importError) {\n      console.error(\"Both CDN and dynamic import failed:\", importError);\n      throw new Error(\"Unable to load PDF library\");\n    }\n  }\n}\n\nexport async function withPdfLib(fn) {\n  const mod = await loadPdfLibFromCDN();\n  return fn(mod);\n}\n\nexport async function createPdfDocument() {\n  const mod = await loadPdfLibFromCDN();\n  return mod.PDFDocument.create();\n}\n\nexport async function loadPdfLib() {\n  return loadPdfLibFromCDN();\n}\n","// Utility for detecting missing/invalid fields before generating permit packs\n\n/**\n * Detects missing or invalid fields from a permit summary.\n * Returns a string[] of issue descriptions.\n * @param {object} summary - The object produced by makePermitSummary\n * @returns {string[]}\n */\nexport function detectPermitIssues(summary) {\n  const issues = [];\n  if (!summary || typeof summary !== \"object\") return [\"Invalid summary\"];\n  if (!summary.job?.name) issues.push(\"Missing job.name\");\n  if (!summary.job?.jobNumber) issues.push(\"Missing job.jobNumber\");\n  if (!summary.job?.applicant) issues.push(\"Missing job.applicant\");\n  if (!summary.pole?.heightFt) issues.push(\"Missing pole.heightFt\");\n  if (!summary.power?.heightFt) issues.push(\"Missing power.heightFt\");\n  if (!summary.pole?.gps?.lat || !summary.pole?.gps?.lon)\n    issues.push(\"Missing pole GPS coordinates\");\n  if (!summary.span?.lengthFt) issues.push(\"Missing span.lengthFt\");\n  if (summary.span?.midspanFt == null) issues.push(\"Missing span.midspanFt\");\n  if (!summary.span?.targetFt) issues.push(\"Missing span.targetFt\");\n\n  // Environment-specific ground clearance checks based on profile targets\n  const env = summary.environment;\n  const p = summary.profile || {};\n  const targetFt = toNum(summary.span?.targetFt);\n  const computedGC = toNum(summary.span?.computedGroundClearanceFt);\n  const mid = toNum(summary.span?.midspanFt);\n  const checks = [\n    { key: \"envWVHighwayFt\", envValue: \"wvHighway\", fallback: 18 },\n    { key: \"envPAHighwayFt\", envValue: \"paHighway\", fallback: 18 },\n    { key: \"envOHHighwayFt\", envValue: \"ohHighway\", fallback: 18 },\n    { key: \"envMDHighwayFt\", envValue: \"mdHighway\", fallback: 18 },\n    { key: \"envRailroadFt\", envValue: \"railroad\", fallback: 27 },\n    {\n      key: \"envInterstateNewCrossingFt\",\n      envValue: \"interstateNewCrossing\",\n      fallback: 21,\n    },\n    { key: \"envInterstateFt\", envValue: \"interstate\", fallback: undefined },\n    { key: \"envRoadFt\", envValue: \"road\", fallback: undefined },\n  ];\n  const row = checks.find((c) => c.envValue === env);\n  if (row) {\n    const profVal = toNum(p[row.key]);\n    const req = Number.isFinite(profVal) ? profVal : row.fallback;\n    if (Number.isFinite(req)) {\n      if (Number.isFinite(targetFt) && targetFt < req) {\n        issues.push(\n          `${labelForEnv(env)} ground clearance target below ${req} ft`,\n        );\n      }\n      if (Number.isFinite(computedGC) && computedGC < req) {\n        issues.push(`Computed ground clearance below ${req} ft`);\n      }\n    }\n  }\n\n  // Midspan should meet or exceed target\n  if (Number.isFinite(mid) && Number.isFinite(targetFt) && mid < targetFt) {\n    issues.push(`Midspan (${mid} ft) below target (${targetFt} ft)`);\n  }\n\n  // Minimum communication attach height if defined in profile\n  const minAttach = toNum(p.minCommAttachFt);\n  const attach = toNum(summary.attach?.proposedFt);\n  if (\n    Number.isFinite(minAttach) &&\n    Number.isFinite(attach) &&\n    attach < minAttach\n  ) {\n    issues.push(`Proposed attach below minimum ${minAttach} ft`);\n  }\n  return issues;\n}\n\nexport default { detectPermitIssues };\n\n// Helpers\nfunction toNum(v) {\n  if (typeof v === \"number\") return v;\n  if (v == null) return NaN;\n  const s = String(v);\n  // quick parse for formats like '35ft 0in'\n  const ftMatch = s.match(/(-?\\d+(?:\\.\\d+)?)\\s*ft/);\n  const inMatch = s.match(/(-?\\d+(?:\\.\\d+)?)\\s*in/);\n  if (ftMatch || inMatch) {\n    const ft = ftMatch ? parseFloat(ftMatch[1]) : 0;\n    const inches = inMatch ? parseFloat(inMatch[1]) : 0;\n    return ft + inches / 12;\n  }\n  const n = Number(s);\n  return Number.isFinite(n) ? n : NaN;\n}\n\nfunction labelForEnv(env) {\n  switch (env) {\n    case \"wvHighway\":\n      return \"WV Highway\";\n    case \"paHighway\":\n      return \"PA Highway\";\n    case \"ohHighway\":\n      return \"OH Highway\";\n    case \"mdHighway\":\n      return \"MD Highway\";\n    case \"railroad\":\n      return \"Railroad\";\n    case \"interstate\":\n      return \"Interstate\";\n    case \"interstateNewCrossing\":\n      return \"Interstate (New Crossing)\";\n    case \"road\":\n      return \"Road\";\n    default:\n      return \"Environment\";\n  }\n}\n","// Default PDF overlay layouts for common agency forms.\n// Coordinates are in PDF user space points (origin bottom-left).\n// These presets aim to be \"close\" for standard letter-size forms; small tweaks\n// may be needed for latest versions or scanned variants.\n\n/**\n * Build a key for picking a layout based on PDF metadata.\n * meta example: { pages: 1, firstPage: { width: 612, height: 792 } }\n */\nfunction metaKey(meta) {\n  if (!meta || !meta.firstPage) return \"unknown\";\n  const w = Math.round(meta.firstPage.width);\n  const h = Math.round(meta.firstPage.height);\n  return `${meta.pages}:${w}x${h}`; // e.g., '1:612x792'\n}\n\n// Layout registry keyed by environment, then optional metaKey\n// Each layout is an array of { key, pageIndex, x, y, size }\nconst registry = {\n  wvHighway: {\n    // Letter portrait\n    \"1:612x792\": [\n      { key: \"applicant\", pageIndex: 0, x: 120, y: 720, size: 10 },\n      { key: \"jobName\", pageIndex: 0, x: 120, y: 704, size: 10 },\n      { key: \"jobNumber\", pageIndex: 0, x: 120, y: 688, size: 10 },\n      { key: \"poleLatitude\", pageIndex: 0, x: 440, y: 720, size: 10 },\n      { key: \"poleLongitude\", pageIndex: 0, x: 440, y: 704, size: 10 },\n      {\n        key: \"targetGroundClearanceFt\",\n        pageIndex: 0,\n        x: 440,\n        y: 560,\n        size: 10,\n      },\n      { key: \"spanLengthFt\", pageIndex: 0, x: 440, y: 544, size: 10 },\n      { key: \"midspanFt\", pageIndex: 0, x: 440, y: 528, size: 10 },\n      { key: \"proposedAttachFt\", pageIndex: 0, x: 440, y: 512, size: 10 },\n    ],\n    default: [\n      { key: \"applicant\", pageIndex: 0, x: 110, y: 710, size: 10 },\n      { key: \"jobName\", pageIndex: 0, x: 110, y: 694, size: 10 },\n      { key: \"jobNumber\", pageIndex: 0, x: 110, y: 678, size: 10 },\n      { key: \"poleLatitude\", pageIndex: 0, x: 420, y: 710, size: 10 },\n      { key: \"poleLongitude\", pageIndex: 0, x: 420, y: 694, size: 10 },\n    ],\n  },\n  paHighway: {\n    \"1:612x792\": [\n      { key: \"applicant\", pageIndex: 0, x: 120, y: 730, size: 10 },\n      { key: \"commCompany\", pageIndex: 0, x: 120, y: 714, size: 10 },\n      { key: \"jobName\", pageIndex: 0, x: 120, y: 698, size: 10 },\n      { key: \"jobNumber\", pageIndex: 0, x: 120, y: 682, size: 10 },\n      { key: \"poleLatitude\", pageIndex: 0, x: 440, y: 730, size: 10 },\n      { key: \"poleLongitude\", pageIndex: 0, x: 440, y: 714, size: 10 },\n      {\n        key: \"targetGroundClearanceFt\",\n        pageIndex: 0,\n        x: 440,\n        y: 560,\n        size: 10,\n      },\n    ],\n    default: [\n      { key: \"applicant\", pageIndex: 0, x: 110, y: 720, size: 10 },\n      { key: \"jobName\", pageIndex: 0, x: 110, y: 704, size: 10 },\n    ],\n  },\n  ohHighway: {\n    \"1:612x792\": [\n      { key: \"applicant\", pageIndex: 0, x: 120, y: 730, size: 10 },\n      { key: \"jobName\", pageIndex: 0, x: 120, y: 714, size: 10 },\n      { key: \"jobNumber\", pageIndex: 0, x: 120, y: 698, size: 10 },\n      {\n        key: \"targetGroundClearanceFt\",\n        pageIndex: 0,\n        x: 440,\n        y: 560,\n        size: 10,\n      },\n    ],\n    default: [\n      { key: \"applicant\", pageIndex: 0, x: 110, y: 720, size: 10 },\n      { key: \"jobName\", pageIndex: 0, x: 110, y: 704, size: 10 },\n    ],\n  },\n  mdHighway: {\n    \"1:612x792\": [\n      { key: \"applicant\", pageIndex: 0, x: 120, y: 730, size: 10 },\n      { key: \"jobName\", pageIndex: 0, x: 120, y: 714, size: 10 },\n      { key: \"jobNumber\", pageIndex: 0, x: 120, y: 698, size: 10 },\n      { key: \"poleLatitude\", pageIndex: 0, x: 440, y: 730, size: 10 },\n      { key: \"poleLongitude\", pageIndex: 0, x: 440, y: 714, size: 10 },\n    ],\n    default: [\n      { key: \"applicant\", pageIndex: 0, x: 110, y: 720, size: 10 },\n      { key: \"jobName\", pageIndex: 0, x: 110, y: 704, size: 10 },\n    ],\n  },\n  railroad: {\n    \"1:612x792\": [\n      { key: \"applicant\", pageIndex: 0, x: 120, y: 730, size: 10 },\n      { key: \"commCompany\", pageIndex: 0, x: 120, y: 714, size: 10 },\n      { key: \"jobName\", pageIndex: 0, x: 120, y: 698, size: 10 },\n      {\n        key: \"targetGroundClearanceFt\",\n        pageIndex: 0,\n        x: 440,\n        y: 560,\n        size: 10,\n      },\n      { key: \"spanLengthFt\", pageIndex: 0, x: 440, y: 544, size: 10 },\n      { key: \"midspanFt\", pageIndex: 0, x: 440, y: 528, size: 10 },\n      { key: \"proposedAttachFt\", pageIndex: 0, x: 440, y: 512, size: 10 },\n    ],\n    default: [\n      { key: \"applicant\", pageIndex: 0, x: 110, y: 720, size: 10 },\n      { key: \"jobName\", pageIndex: 0, x: 110, y: 704, size: 10 },\n    ],\n  },\n};\n\nexport function getLayoutFor(env, meta) {\n  const bucket = registry[env] || {};\n  const key = metaKey(meta);\n  return bucket[key] || bucket.default || [];\n}\n\nexport default { getLayoutFor };\n"],"file":"assets/app-utils-BDwnIIkN.js"}