{"version":3,"mappings":"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","names":["JobSetup","store","useAppStore","name","setName","React","applicantName","setApplicantName","jobNumber","setJobNumber","presetProfile","setPresetProfile","jobOwner","setJobOwner","commCompany","setCommCompany","submissionProfileName","setSubmissionProfileName","exportProfile","setExportProfile","overrideCommToPowerIn","setOverrideCommToPowerIn","overrideMinTopSpaceFt","setOverrideMinTopSpaceFt","overrideRoadClearanceFt","setOverrideRoadClearanceFt","overrideEnvRoadFt","setOverrideEnvRoadFt","overrideEnvResidentialFt","setOverrideEnvResidentialFt","overrideEnvPedestrianFt","setOverrideEnvPedestrianFt","overrideMinCommAttachFt","setOverrideMinCommAttachFt","notes","setNotes","current","j","_b","_a","_d","_c","_f","_e","_h","_g","_j","_i","_l","_k","_n","_m","onCreate","onUpdate","onDelete","onDuplicate","job","copy","onImportBundle","file","JSZip","__vitePreload","__vite_default__","n","buf","zip","readJSON","path","f","txt","jobJson","stateJson","importedPoles","importedSpans","existingLines","cachedMidspans","newJob","m","logoFile","blob","reader","resolve","e","onExportBundle","pick","o","keys","a","k","state","url","safe","jsxs","jsx","c","p","EXPORT_PRESETS","ErrorBoundary","Component","props","error","info","SiteChrome","children","title","site","logo","nav","Fragment","Link","item","i"],"ignoreList":[],"sources":["../../src/components/JobSetup.jsx","../../src/components/ErrorBoundary.jsx","../../src/components/SiteChrome.jsx"],"sourcesContent":["import React from \"react\";\nimport { WV_COMPANIES } from \"../utils/constants\";\nimport useAppStore from \"../utils/store\";\nimport { EXPORT_PRESETS } from \"../utils/exporters\";\n\nexport default function JobSetup() {\n  const store = useAppStore();\n  const [name, setName] = React.useState(store.projectName || \"\");\n  const [applicantName, setApplicantName] = React.useState(\n    store.applicantName || \"\",\n  );\n  const [jobNumber, setJobNumber] = React.useState(store.jobNumber || \"\");\n  const [presetProfile, setPresetProfile] = React.useState(\n    store.presetProfile || \"\",\n  );\n  const [jobOwner, setJobOwner] = React.useState(store.jobOwner || \"\");\n  const [commCompany, setCommCompany] = React.useState(\"\");\n  const [submissionProfileName, setSubmissionProfileName] = React.useState(\n    store.currentSubmissionProfile || \"generic\",\n  );\n  const [exportProfile, setExportProfile] = React.useState(\"generic\");\n  const [overrideCommToPowerIn, setOverrideCommToPowerIn] = React.useState(\"\");\n  const [overrideMinTopSpaceFt, setOverrideMinTopSpaceFt] = React.useState(\"\");\n  const [overrideRoadClearanceFt, setOverrideRoadClearanceFt] =\n    React.useState(\"\");\n  const [overrideEnvRoadFt, setOverrideEnvRoadFt] = React.useState(\"\");\n  const [overrideEnvResidentialFt, setOverrideEnvResidentialFt] =\n    React.useState(\"\");\n  const [overrideEnvPedestrianFt, setOverrideEnvPedestrianFt] =\n    React.useState(\"\");\n  const [overrideMinCommAttachFt, setOverrideMinCommAttachFt] =\n    React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  React.useEffect(() => {\n    setName(store.projectName || \"\");\n    setApplicantName(store.applicantName || \"\");\n    setJobNumber(store.jobNumber || \"\");\n    setPresetProfile(store.presetProfile || \"\");\n    setJobOwner(store.jobOwner || \"\");\n    const current = (store.jobs || []).find((j) => j.id === store.currentJobId);\n    setCommCompany(current?.commCompany || \"\");\n    setSubmissionProfileName(\n      current?.submissionProfileName ||\n        store.currentSubmissionProfile ||\n        \"generic\",\n    );\n    setExportProfile(current?.exportProfile || \"generic\");\n    setOverrideCommToPowerIn(\n      String(current?.submissionProfileOverrides?.commToPowerIn ?? \"\"),\n    );\n    setOverrideMinTopSpaceFt(\n      String(current?.submissionProfileOverrides?.minTopSpaceFt ?? \"\"),\n    );\n    setOverrideRoadClearanceFt(\n      String(current?.submissionProfileOverrides?.roadClearanceFt ?? \"\"),\n    );\n    setOverrideEnvRoadFt(\n      String(current?.submissionProfileOverrides?.envRoadFt ?? \"\"),\n    );\n    setOverrideEnvResidentialFt(\n      String(current?.submissionProfileOverrides?.envResidentialFt ?? \"\"),\n    );\n    setOverrideEnvPedestrianFt(\n      String(current?.submissionProfileOverrides?.envPedestrianFt ?? \"\"),\n    );\n    setOverrideMinCommAttachFt(\n      String(current?.submissionProfileOverrides?.minCommAttachFt ?? \"\"),\n    );\n  }, [\n    store.projectName,\n    store.applicantName,\n    store.jobNumber,\n    store.presetProfile,\n    store.jobOwner,\n    store.currentJobId,\n    store.jobs,\n    store.currentSubmissionProfile,\n  ]);\n\n  const onCreate = () => {\n    store.addJob({\n      name,\n      applicantName,\n      jobNumber,\n      presetProfile,\n      jobOwner,\n      notes,\n      commCompany,\n      submissionProfileName,\n      exportProfile,\n      submissionProfileOverrides: {\n        commToPowerIn: overrideCommToPowerIn\n          ? Number(overrideCommToPowerIn)\n          : undefined,\n        minTopSpaceFt: overrideMinTopSpaceFt\n          ? Number(overrideMinTopSpaceFt)\n          : undefined,\n        roadClearanceFt: overrideRoadClearanceFt\n          ? Number(overrideRoadClearanceFt)\n          : undefined,\n        envRoadFt: overrideEnvRoadFt ? Number(overrideEnvRoadFt) : undefined,\n        envResidentialFt: overrideEnvResidentialFt\n          ? Number(overrideEnvResidentialFt)\n          : undefined,\n        envPedestrianFt: overrideEnvPedestrianFt\n          ? Number(overrideEnvPedestrianFt)\n          : undefined,\n        minCommAttachFt: overrideMinCommAttachFt\n          ? Number(overrideMinCommAttachFt)\n          : undefined,\n      },\n    });\n  };\n  const onUpdate = () => {\n    if (!store.currentJobId) return;\n    store.updateJob(store.currentJobId, {\n      name,\n      applicantName,\n      jobNumber,\n      presetProfile,\n      jobOwner,\n      notes,\n      commCompany,\n      submissionProfileName,\n      exportProfile,\n      submissionProfileOverrides: {\n        commToPowerIn: overrideCommToPowerIn\n          ? Number(overrideCommToPowerIn)\n          : undefined,\n        minTopSpaceFt: overrideMinTopSpaceFt\n          ? Number(overrideMinTopSpaceFt)\n          : undefined,\n        roadClearanceFt: overrideRoadClearanceFt\n          ? Number(overrideRoadClearanceFt)\n          : undefined,\n        envRoadFt: overrideEnvRoadFt ? Number(overrideEnvRoadFt) : undefined,\n        envResidentialFt: overrideEnvResidentialFt\n          ? Number(overrideEnvResidentialFt)\n          : undefined,\n        envPedestrianFt: overrideEnvPedestrianFt\n          ? Number(overrideEnvPedestrianFt)\n          : undefined,\n        minCommAttachFt: overrideMinCommAttachFt\n          ? Number(overrideMinCommAttachFt)\n          : undefined,\n      },\n    });\n  };\n  const onDelete = () => {\n    if (!store.currentJobId) return;\n    if (!confirm(\"Delete this job?\")) return;\n    store.removeJob(store.currentJobId);\n  };\n  const onDuplicate = () => {\n    const job = (store.jobs || []).find((j) => j.id === store.currentJobId);\n    if (!job) return;\n    const copy = {\n      name: `${job.name || \"Job\"} (Copy)`,\n      applicantName: job.applicantName || \"\",\n      jobNumber: job.jobNumber || \"\",\n      presetProfile: job.presetProfile || \"\",\n      jobOwner: job.jobOwner || \"\",\n      notes: job.notes || \"\",\n      commCompany: job.commCompany || \"\",\n      submissionProfileName:\n        job.submissionProfileName ||\n        store.currentSubmissionProfile ||\n        \"generic\",\n      submissionProfileOverrides: { ...(job.submissionProfileOverrides || {}) },\n      exportProfile: job.exportProfile || \"generic\",\n    };\n    store.addJob(copy);\n  };\n\n  const onImportBundle = async (file) => {\n    try {\n      if (!file) return;\n      const JSZip = (await import(\"jszip\")).default;\n      const buf = await file.arrayBuffer();\n      const zip = await JSZip.loadAsync(buf);\n      const readJSON = async (path) => {\n        const f = zip.file(path);\n        if (!f) return null;\n        const txt = await f.async(\"string\");\n        try {\n          return JSON.parse(txt);\n        } catch {\n          return null;\n        }\n      };\n      const jobJson = await readJSON(\"job/job.json\");\n      const stateJson = await readJSON(\"job/state.json\");\n      const importedPoles = await readJSON(\"data/imported-poles.json\");\n      const importedSpans = await readJSON(\"data/imported-spans.json\");\n      const existingLines = await readJSON(\"data/existing-lines.json\");\n      const cachedMidspans = await readJSON(\"data/cached-midspans.json\");\n      // Create the job from job.json (fallbacks applied)\n      const newJob = {\n        name: jobJson?.name || jobJson?.job?.name || \"Imported Job\",\n        applicantName: jobJson?.applicantName || \"\",\n        jobNumber: jobJson?.jobNumber || \"\",\n        presetProfile: jobJson?.presetProfile || \"\",\n        jobOwner: jobJson?.jobOwner || \"\",\n        notes: jobJson?.notes || \"\",\n        commCompany: jobJson?.commCompany || \"\",\n        submissionProfileName:\n          jobJson?.submissionProfileName ||\n          stateJson?.submissionProfileName ||\n          store.currentSubmissionProfile ||\n          \"generic\",\n        submissionProfileOverrides: jobJson?.submissionProfileOverrides || {},\n        exportProfile: jobJson?.exportProfile || \"generic\",\n      };\n      store.addJob(newJob);\n      // Merge/replace state slices for active session\n      if (Array.isArray(stateJson?.mappingProfiles)) {\n        store.setMappingProfiles(stateJson.mappingProfiles);\n      }\n      if (Array.isArray(importedPoles)) store.setImportedPoles(importedPoles);\n      if (Array.isArray(importedSpans)) store.setImportedSpans(importedSpans);\n      if (Array.isArray(existingLines)) store.setExistingLines(existingLines);\n      if (Array.isArray(cachedMidspans)) {\n        store.clearCachedMidspans();\n        for (const m of cachedMidspans) store.addCachedMidspan(m);\n      }\n      // Load logo if present\n      const logoFile =\n        zip.file(/assets\\/logo(\\.[A-Za-z0-9]+)?$/)?.[0] ||\n        zip.file(\"assets/logo\")?.[0];\n      if (logoFile) {\n        const blob = await logoFile.async(\"blob\");\n        const reader = new FileReader();\n        await new Promise((resolve) => {\n          reader.onload = () => {\n            resolve();\n          };\n          reader.readAsDataURL(blob);\n        });\n        store.setLogoDataUrl(reader.result);\n      }\n      alert(\"Job bundle imported. Switched to new job.\");\n    } catch (e) {\n      alert(`Import failed: ${e?.message || e}`);\n    }\n  };\n\n  const onExportBundle = async () => {\n    try {\n      const JSZip = (await import(\"jszip\")).default;\n      const zip = new JSZip();\n      const job = (store.jobs || []).find((j) => j.id === store.currentJobId);\n      const pick = (o, keys) =>\n        keys.reduce((a, k) => {\n          if (k in o) a[k] = o[k];\n          return a;\n        }, {});\n      // Include job meta and overrides\n      zip.file(\"job/job.json\", JSON.stringify(job || {}, null, 2));\n      // Include small slices of state relevant for sharing\n      const state = {\n        project: pick(store, [\n          \"projectName\",\n          \"applicantName\",\n          \"jobNumber\",\n          \"jobOwner\",\n        ]),\n        submissionProfiles: store.submissionProfiles,\n        mappingProfiles: store.mappingProfiles,\n        preferAutoSpanLength: store.preferAutoSpanLength,\n        spanLenDeltaThresholdFt: store.spanLenDeltaThresholdFt,\n      };\n      zip.file(\"job/state.json\", JSON.stringify(state, null, 2));\n      // Include current imported data (scoped where possible)\n      if ((store.importedPoles || []).length)\n        zip.file(\n          \"data/imported-poles.json\",\n          JSON.stringify(store.importedPoles, null, 2),\n        );\n      if ((store.importedSpans || []).length)\n        zip.file(\n          \"data/imported-spans.json\",\n          JSON.stringify(store.importedSpans, null, 2),\n        );\n      if ((store.existingLines || []).length)\n        zip.file(\n          \"data/existing-lines.json\",\n          JSON.stringify(store.existingLines, null, 2),\n        );\n      if ((store.cachedMidspans || []).length)\n        zip.file(\n          \"data/cached-midspans.json\",\n          JSON.stringify(store.cachedMidspans, null, 2),\n        );\n      // Include logo if present\n      if (store.logoDataUrl) {\n        const res = await fetch(store.logoDataUrl);\n        const buf = await res.arrayBuffer();\n        zip.file(\"assets/logo\", buf);\n      }\n      const blob = await zip.generateAsync({ type: \"blob\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      const safe = (job?.name || \"job\").replace(/[^A-Za-z0-9_-]/g, \"_\");\n      a.href = url;\n      a.download = `${safe}_bundle.zip`;\n      a.click();\n      URL.revokeObjectURL(url);\n    } catch (e) {\n      alert(`Bundle export failed: ${e?.message || e}`);\n    }\n  };\n\n  return (\n    <div id=\"job\" className=\"app-section anchor-offset\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"section-title\">Job Setup</div>\n        <div className=\"text-xs text-gray-600\">\n          Jobs: {(store.jobs || []).length}\n        </div>\n      </div>\n      <div className=\"section-grid mt-2 sm:grid-cols-2 lg:grid-cols-4\">\n        <label className=\"grid gap-1 text-sm\">\n          <span className=\"font-medium\">Select Job</span>\n          <div className=\"flex gap-2 items-center\">\n            <select\n              className=\"border rounded px-2 py-1\"\n              value={store.currentJobId || \"\"}\n              onChange={(e) => store.setCurrentJobId(e.target.value)}\n            >\n              <option value=\"\">-- None --</option>\n              {(store.jobs || []).map((j) => (\n                <option key={j.id} value={j.id}>\n                  {j.name}\n                </option>\n              ))}\n            </select>\n            <button\n              className=\"text-xs px-2 py-1 border rounded\"\n              onClick={() => store.setCurrentJobId(\"\")}\n            >\n              Clear\n            </button>\n          </div>\n        </label>\n        <label className=\"grid gap-1 text-sm\">\n          <span className=\"font-medium\">Job Name</span>\n          <input\n            className=\"border rounded px-2 py-1\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Project name\"\n          />\n        </label>\n        <label className=\"grid gap-1 text-sm\">\n          <span className=\"font-medium\">Applicant</span>\n          <input\n            className=\"border rounded px-2 py-1\"\n            value={applicantName}\n            onChange={(e) => setApplicantName(e.target.value)}\n            placeholder=\"Applicant name\"\n          />\n        </label>\n        <label className=\"grid gap-1 text-sm\">\n          <span className=\"font-medium\">Job #</span>\n          <input\n            className=\"border rounded px-2 py-1\"\n            value={jobNumber}\n            onChange={(e) => setJobNumber(e.target.value)}\n            placeholder=\"Job number\"\n          />\n        </label>\n        <label className=\"grid gap-1 text-sm\">\n          <span className=\"font-medium\">Preset</span>\n          <select\n            className=\"border rounded px-2 py-1\"\n            value={presetProfile}\n            onChange={(e) => setPresetProfile(e.target.value)}\n          >\n            <option value=\"\">default</option>\n            <option value=\"firstEnergy\">FirstEnergy</option>\n            <option value=\"firstEnergyMonPower\">FirstEnergy - Mon Power</option>\n            <option value=\"pse\">PSE</option>\n            <option value=\"duke\">Duke</option>\n            <option value=\"nationalGrid\">National Grid</option>\n          </select>\n        </label>\n        <label className=\"grid gap-1 text-sm\">\n          <span className=\"font-medium\">Owner (utility)</span>\n          <input\n            list=\"wv-power-companies\"\n            className=\"border rounded px-2 py-1\"\n            value={jobOwner}\n            onChange={(e) => setJobOwner(e.target.value)}\n            placeholder=\"e.g., Mon Power, Penelec\"\n          />\n          <datalist id=\"wv-power-companies\">\n            {WV_COMPANIES.power.map((c) => (\n              <option key={c.name} value={c.short || c.name}>\n                {c.name}\n              </option>\n            ))}\n          </datalist>\n          <span className=\"text-xs text-gray-500\">\n            Hint: Typing a FirstEnergy subsidiary (e.g., Mon Power) enables FE\n            44\" rules automatically.\n          </span>\n        </label>\n        <label className=\"grid gap-1 text-sm\">\n          <span className=\"font-medium\">Attaching Communications Company</span>\n          <input\n            list=\"wv-comm-companies\"\n            className=\"border rounded px-2 py-1\"\n            value={commCompany}\n            onChange={(e) => setCommCompany(e.target.value)}\n            placeholder=\"e.g., Frontier, Optimum\"\n          />\n          <datalist id=\"wv-comm-companies\">\n            {WV_COMPANIES.communication.map((c) => (\n              <option key={c.name} value={c.short || c.name}>\n                {c.name}\n              </option>\n            ))}\n          </datalist>\n        </label>\n\n        {/* Job-level Standards/Profile */}\n        <div className=\"sm:col-span-2 lg:col-span-4 border rounded p-2 vertical-rhythm\">\n          <div className=\"font-medium text-sm\">\n            Job Standards & Export Profile\n          </div>\n          <div className=\"grid gap-2 sm:grid-cols-2 lg:grid-cols-4\">\n            <label className=\"grid gap-1 text-sm\">\n              <span className=\"font-medium\">Submission Profile</span>\n              <select\n                className=\"border rounded px-2 py-1\"\n                value={submissionProfileName}\n                onChange={(e) => setSubmissionProfileName(e.target.value)}\n              >\n                {(store.submissionProfiles || []).map((p) => (\n                  <option key={p.name} value={p.name}>\n                    {p.label}\n                  </option>\n                ))}\n              </select>\n            </label>\n            <label className=\"grid gap-1 text-sm\">\n              <span className=\"font-medium\">Export Profile</span>\n              <select\n                className=\"border rounded px-2 py-1\"\n                value={exportProfile}\n                onChange={(e) => setExportProfile(e.target.value)}\n              >\n                {(EXPORT_PRESETS || []).map((p) => (\n                  <option key={p.value} value={p.value}>\n                    {p.label}\n                  </option>\n                ))}\n              </select>\n            </label>\n            <label className=\"grid gap-1 text-sm\">\n              <span className=\"font-medium\">Override Comm→Power (in)</span>\n              <input\n                className=\"border rounded px-2 py-1\"\n                value={overrideCommToPowerIn}\n                onChange={(e) => setOverrideCommToPowerIn(e.target.value)}\n                placeholder=\"blank = use profile\"\n              />\n            </label>\n            <label className=\"grid gap-1 text-sm\">\n              <span className=\"font-medium\">Override Min Top Space (ft)</span>\n              <input\n                className=\"border rounded px-2 py-1\"\n                value={overrideMinTopSpaceFt}\n                onChange={(e) => setOverrideMinTopSpaceFt(e.target.value)}\n                placeholder=\"blank = use profile\"\n              />\n            </label>\n            <label className=\"grid gap-1 text-sm\">\n              <span className=\"font-medium\">Override Road Clearance (ft)</span>\n              <input\n                className=\"border rounded px-2 py-1\"\n                value={overrideRoadClearanceFt}\n                onChange={(e) => setOverrideRoadClearanceFt(e.target.value)}\n                placeholder=\"blank = use profile\"\n              />\n            </label>\n            <label className=\"grid gap-1 text-sm\">\n              <span className=\"font-medium\">\n                Override Road Midspan Target (ft)\n              </span>\n              <input\n                className=\"border rounded px-2 py-1\"\n                value={overrideEnvRoadFt}\n                onChange={(e) => setOverrideEnvRoadFt(e.target.value)}\n                placeholder=\"blank = use profile\"\n              />\n            </label>\n            <label className=\"grid gap-1 text-sm\">\n              <span className=\"font-medium\">\n                Override Residential Midspan Target (ft)\n              </span>\n              <input\n                className=\"border rounded px-2 py-1\"\n                value={overrideEnvResidentialFt}\n                onChange={(e) => setOverrideEnvResidentialFt(e.target.value)}\n                placeholder=\"blank = use profile\"\n              />\n            </label>\n            <label className=\"grid gap-1 text-sm\">\n              <span className=\"font-medium\">\n                Override Pedestrian Midspan Target (ft)\n              </span>\n              <input\n                className=\"border rounded px-2 py-1\"\n                value={overrideEnvPedestrianFt}\n                onChange={(e) => setOverrideEnvPedestrianFt(e.target.value)}\n                placeholder=\"blank = use profile\"\n              />\n            </label>\n            <label className=\"grid gap-1 text-sm\">\n              <span className=\"font-medium\">Min Comm Attach Height (ft)</span>\n              <input\n                className=\"border rounded px-2 py-1\"\n                value={overrideMinCommAttachFt}\n                onChange={(e) => setOverrideMinCommAttachFt(e.target.value)}\n                placeholder=\"blank = use profile\"\n              />\n              <span className=\"text-xs text-gray-500\">\n                Applied after separation; will be clamped to maintain required\n                power separation.\n              </span>\n            </label>\n            <label className=\"grid gap-1 text-sm\">\n              <span className=\"font-medium\">\n                Δ Threshold for Span Length (ft)\n              </span>\n              <input\n                className=\"border rounded px-2 py-1\"\n                type=\"number\"\n                min=\"0\"\n                step=\"1\"\n                value={store.spanLenDeltaThresholdFt ?? 10}\n                onChange={(e) =>\n                  store.setSpanLenDeltaThresholdFt(e.target.value)\n                }\n              />\n              <span className=\"text-xs text-gray-500\">\n                Used in Spans editor to highlight manual vs auto length\n                differences.\n              </span>\n            </label>\n          </div>\n          <div className=\"text-xs text-gray-600\">\n            Defaults follow NESC unless the Owner maps to utilities like\n            FirstEnergy (44\" separation, 18 ft road). Overrides let you tune\n            job-specific specs.\n          </div>\n        </div>\n        <label className=\"grid gap-1 text-sm sm:col-span-2 lg:col-span-4\">\n          <span className=\"font-medium\">Notes</span>\n          <textarea\n            className=\"border rounded px-2 py-1\"\n            rows={2}\n            value={notes}\n            onChange={(e) => setNotes(e.target.value)}\n            placeholder=\"Optional job notes\"\n          />\n        </label>\n      </div>\n      <div className=\"section-divider\" />\n      <div className=\"mt-2 flex flex-wrap gap-2\">\n        <button className=\"px-3 py-1 border rounded\" onClick={onCreate}>\n          Create\n        </button>\n        <button\n          className=\"px-3 py-1 border rounded\"\n          onClick={onUpdate}\n          disabled={!store.currentJobId}\n        >\n          Update\n        </button>\n        <button\n          className=\"px-3 py-1 border rounded text-red-700\"\n          onClick={onDelete}\n          disabled={!store.currentJobId}\n        >\n          Delete\n        </button>\n        <button\n          className=\"px-3 py-1 border rounded\"\n          onClick={onExportBundle}\n          disabled={!store.currentJobId}\n          title=\"Download job settings and datasets as a ZIP\"\n        >\n          Export Job Bundle\n        </button>\n        <button\n          className=\"px-3 py-1 border rounded\"\n          onClick={onDuplicate}\n          disabled={!store.currentJobId}\n        >\n          Duplicate Job\n        </button>\n        <label className=\"px-3 py-1 border rounded cursor-pointer inline-flex items-center gap-2\">\n          <span>Import Job Bundle</span>\n          <input\n            type=\"file\"\n            className=\"hidden\"\n            accept=\"application/zip,.zip\"\n            onChange={(e) => onImportBundle(e.target.files?.[0])}\n          />\n        </label>\n      </div>\n      {store.currentJobId ? (\n        <div className=\"mt-2 text-xs text-gray-700\">\n          Active job:{\" \"}\n          <strong>\n            {(store.jobs || []).find((j) => j.id === store.currentJobId)?.name}\n          </strong>{\" \"}\n          (ID: {store.currentJobId})\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","// @ts-nocheck\nimport React, { Component } from \"react\";\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n  componentDidCatch(error, info) {\n    console.error(\"ErrorBoundary caught:\", error, info);\n  }\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div style={{ padding: 16 }}>\n          <h1>Something went wrong.</h1>\n          <pre style={{ whiteSpace: \"pre-wrap\" }}>\n            {String(this.state.error)}\n          </pre>\n          <button onClick={() => window.location.reload()}>Reload</button>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport site from \"../../content/site.json\";\n\nexport default function SiteChrome({ children }) {\n  const title = site?.siteTitle || \"Pole Plan Pro\";\n  const logo = site?.logo || \"/pwa-192.png\";\n  const nav =\n    Array.isArray(site?.navigation) && site.navigation.length > 0\n      ? site.navigation\n      : [\n          { label: \"Home\", url: \"/\" },\n          { label: \"App\", url: \"/app\" },\n        ];\n\n  return (\n    <>\n      <a href=\"#main-content\" className=\"skip-link\">\n        Skip to main content\n      </a>\n      <header role=\"banner\" className=\"top-nav\" aria-label=\"Primary\">\n        <Link to=\"/\" className=\"brand\" aria-label={`${title} home`}>\n          <img src={logo} alt=\"\" width=\"24\" height=\"24\" />\n          <span className=\"brand-title\">{title}</span>\n        </Link>\n        <nav aria-label=\"Primary navigation\" className=\"nav-links\">\n          {nav.map((item, i) => (\n            <Link key={i} to={item.url}>\n              {item.label}\n            </Link>\n          ))}\n        </nav>\n      </header>\n      <main id=\"main-content\" role=\"main\">\n        {children}\n      </main>\n      <style>{`\n        .skip-link{position:absolute;left:-9999px;top:auto;width:1px;height:1px;overflow:hidden}\n        .skip-link:focus{position:fixed;left:16px;top:16px;width:auto;height:auto;padding:8px 12px;background:#111827;color:#fff;border-radius:6px;z-index:10000}\n        .top-nav{position:fixed;top:0;left:0;right:0;display:flex;gap:12px;align-items:center;padding:8px 12px;background:rgba(255,255,255,0.8);backdrop-filter:saturate(180%) blur(6px);z-index:9999}\n        .top-nav .brand{display:flex;align-items:center;gap:8px;color:#0f172a;text-decoration:none;font-weight:700}\n        .top-nav .nav-links{display:flex;gap:12px;margin-left:auto}\n        .top-nav a{color:#0f172a;text-decoration:none;font-weight:600}\n        body{padding-top:44px}\n      `}</style>\n    </>\n  );\n}\n"],"file":"assets/app-components-BCHETAP-.js"}