{
  "name": "pole-height-app",
  "private": true,
  "version": "0.1.1",
  "type": "module",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JHARB47/pole-height-app.git"
  },
  "bugs": {
    "url": "https://github.com/JHARB47/pole-height-app/issues"
  },
  "homepage": "https://poleplanpro.com/",
  "scripts": {
    "audit:fix:prod": "npm audit fix --omit dev --audit-level=high || true",
    "audit:report": "npm audit --omit dev --audit-level=high || true",
    "dev": "vite",
    "dev:backend": "node --env-file=.env --watch server/index.js",
    "dev:full": "cross-env NODE_ENV=development concurrently \"npm:dev\" \"npm:dev:backend\"",
    "dev:netlify": "NETLIFY_NEXT_PLUGIN_SKIP=true npx netlify dev",
    "dev:visual-editor": "npm run dev & npx netlify dev --dir=dist --functions=netlify/functions",
    "doctor": "node scripts/dev/doctor.mjs",
    "build": "vite build",
    "build:no-sw": "cross-env VITE_ENABLE_SW=false vite build",
    "lint": "eslint src/ scripts/ netlify/ *.config.js *.config.cjs",
    "preview": "vite preview",
    "preview:no-sw": "cross-env VITE_ENABLE_SW=false vite preview",
    "test": "node scripts/test/run-vitest.mjs",
    "test:ci": "node scripts/test/run-vitest.mjs run --reporter=verbose",
    "test:api": "cross-env NODE_ENV=test node scripts/test/run-vitest.mjs run --config vitest.config.server.js",
    "test:watch": "node scripts/test/run-vitest.mjs watch --watch",
    "test:coverage": "node scripts/test/run-vitest.mjs run --coverage",
    "test:coverage:full": "npm run test:coverage && npm run test:api -- --coverage",
    "test:full": "npm run test && npm run test:api",
    "lint:css": "stylelint \"src/**/*.css\" --allow-empty-input",
    "lint:css:fix": "stylelint \"src/**/*.css\" --allow-empty-input --fix",
    "start": "vite dev",
    "prestart": "npm run lint",
    "verify": "npm run check:health && npm run lint && npm run test:ci && npm run build && npm run check:bundle && npm run format:check",
    "check:health": "node scripts/dev/doctor.mjs",
    "check:bundle": "node scripts/ci/check-bundle-size.mjs",
    "check:env": "node scripts/ci/check-env.mjs",
    "format:check": "prettier --check src/",
    "size": "size-limit",
    "prebuild": "npm run db:pre-build --if-present",
    "postbuild": "npm run db:post-build --if-present",
    "migrate": "node server/scripts/migrate.js",
    "rebuild": "rm -rf node_modules dist && npm ci && npm run build",
    "server:dev": "cd server && npm run dev",
    "server:build": "cd server && npm run build",
    "server:start": "cd server && npm start",
    "docker:dev": "docker-compose up --build",
    "docker:prod": "docker-compose -f docker-compose.prod.yml up --build",
    "docker:test": "docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit",
    "db:migrate": "netlify dev:exec drizzle-kit migrate",
    "db:seed": "cd server && npm run seed",
    "test:integration": "node scripts/test/run-vitest.mjs run --config vitest.integration.config.js",
    "test:e2e": "npx playwright test",
    "security:audit": "npm audit --audit-level=moderate",
    "security:scan": "npx retire --path src/",
    "security:validate": "node scripts/security/validate.mjs",
    "security:full": "npm run security:audit && npm run security:scan && npm run security:validate",
    "verify:production": "node scripts/deploy/production-check.mjs",
    "verify:staging": "cross-env DEPLOY_ENV=staging node scripts/deploy/production-check.mjs",
    "bundle:check": "node scripts/ci/check-bundle-size.mjs",
    "deploy:netlify": "npm run verify:staging && NETLIFY_NEXT_PLUGIN_SKIP=true npx netlify deploy --prod --build",
    "analyze": "cross-env VISUALIZE=true vite build && npx rollup-plugin-visualizer --template treemap --gzip --brotli --open dist/stats.html",
    "clean": "rimraf dist .vite .rollup.cache .cache",
    "db:reset": "node scripts/db/reset.mjs",
    "perf": "node ./scripts/perf/profile.mjs",
    "perf:quick": "PERF_MODE=quick node ./scripts/perf/profile.mjs",
    "prepare": "husky",
    "sync:deploy": "git add -A && git commit -m 'chore: auto-sync before deploy' || true && git push",
    "deploy:git": "npm run verify && npm run sync:deploy",
    "release:patch": "npm version patch -m 'chore(release): %s' && git push --follow-tags",
    "release:minor": "npm version minor -m 'chore(release): %s' && git push --follow-tags",
    "release:major": "npm version major -m 'chore(release): %s' && git push --follow-tags",
    "db:generate": "drizzle-kit generate",
    "db:studio": "netlify dev:exec drizzle-kit studio"
  },
  "dependencies": {
    "@node-saml/passport-saml": "^5.1.0",
    "@sentry/node": "^10.19.0",
    "@sentry/profiling-node": "^10.19.0",
    "@sentry/react": "^10.19.0",
    "@sentry/tracing": "^7.120.4",
    "@tmcw/togeojson": "^7.1.2",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "dotenv": "^17.2.3",
    "exifr": "^7.1.3",
    "express": "^5.1.0",
    "express-rate-limit": "^8.1.0",
    "helmet": "^8.0.0",
    "jsonwebtoken": "^9.0.2",
    "jszip": "^3.10.1",
    "papaparse": "^5.4.1",
    "passport": "^0.7.0",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pdf-lib": "^1.17.1",
    "pg": "^8.12.0",
    "pino": "9.13.1",
    "pino-pretty": "^13.1.2",
    "prop-types": "^15.8.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.30.1",
    "tokml": "^0.4.0",
    "web-vitals": "^5.1.0",
    "winston": "^3.15.0",
    "zustand": "^5.0.8"
  },
  "devDependencies": {
    "@cyclonedx/cyclonedx-npm": "^4.0.3",
    "@eslint/js": "^9.37.0",
    "@playwright/test": "^1.48.0",
    "@size-limit/preset-app": "^11.2.0",
    "@stackbit/cms-git": "^1.0.35",
    "@stackbit/types": "^2.1.14",
    "@tailwindcss/postcss": "^4.1.14",
    "@tailwindcss/vite": "^4.1.14",
    "@testing-library/react": "^16.3.0",
    "@types/node": "^22.18.9",
    "@types/pg": "^8.11.10",
    "@types/react": "^18.3.26",
    "@types/react-dom": "^18.3.7",
    "@vitejs/plugin-react": "^5.0.1",
    "autoprefixer": "^10.4.21",
    "axe-core": "^4.11.0",
    "concurrently": "^9.1.0",
    "cross-env": "^7.0.3",
    "depcheck": "^1.4.7",
    "esbuild": "^0.25.10",
    "eslint": "^9.37.0",
    "eslint-plugin-react": "^7.35.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "husky": "^9.1.6",
    "jsdom": "^26.1.0",
    "knip": "^5.64.3",
    "lighthouse": "^12.2.1",
    "lint-staged": "^16.1.5",
    "node-pg-migrate": "^8.0.3",
    "pg-mem": "^3.0.5",
    "postcss": "^8.5.6",
    "prettier": "^3.3.3",
    "retire": "^5.2.4",
    "shpjs": "^6.1.0",
    "size-limit": "^11.2.0",
    "stylelint": "^16.25.0",
    "supertest": "^7.1.1",
    "tailwindcss": "^4.0.0",
    "testcontainers": "^11.7.1",
    "typescript": "^5.9.2",
    "vite": "^7.1.9",
    "vitest": "^1.6.0"
  },
  "optionalDependencies": {
    "zod": "^3.23.8"
  },
  "overrides": {
    "object-inspect": "^1.13.2",
    "minimist": "^1.2.8",
    "lodash.pick": "npm:@babel/runtime@^7.25.0",
    "lodash.set": "npm:@babel/runtime@^7.25.0",
    "lodash.get": "npm:@babel/runtime@^7.25.0",
    "lodash.omit": "npm:@babel/runtime@^7.25.0",
    "lodash.isequal": "npm:@babel/runtime@^7.25.0",
    "tmp": "^0.2.4",
    "uglify-js": "^3.19.0",
    "sourcemap-codec": "npm:@jridgewell/sourcemap-codec@^1.5.0",
    "rimraf": "^5.0.10",
    "debug": "^4.3.7",
    "@node-saml/node-saml": "^5.1.0",
    "esbuild": "^0.25.10",
    "minimatch": "^9.0.5",
    "@octokit/request": "^8.4.1",
    "@octokit/request-error": "^5.1.1",
    "@octokit/plugin-paginate-rest": "^9.2.2",
    "glob": "^10.4.5",
    "inflight": "npm:@isaacs/inflight@^1.0.4",
    "string-similarity": "npm:fastest-levenshtein@^1.0.16",
    "sudo-prompt": "npm:@vscode/sudo-prompt@^9.0.1",
    "yurnalist": "npm:npmlog@^7.0.1",
    "tokml": {
      "strxml": "npm:fast-xml-parser@^4.5.0",
      "tap": "npm:@vitest/utils@^1.6.0"
    }
  },
  "size-limit": [
    {
      "name": "Bundle size",
      "path": "dist/**/*.js",
      "limit": "1450 KB",
      "gzip": true,
      "brotli": false,
      "running": false
    }
  ],
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix"
    ],
    "*.{css,scss}": [
      "stylelint --fix"
    ],
    "*.{js,jsx,ts,tsx,json,css,md}": [
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">=22 <23",
    "npm": ">=10"
  },
  "browserslist": [
    "defaults",
    "not op_mini all",
    "maintained node versions"
  ]
}
