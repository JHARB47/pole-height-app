name: CI Robust
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  schedule:
    - cron: "0 6 * * 1"  # Weekly hygiene (Mon 06:00 UTC)

concurrency:
  group: poleplanpro-${{ github.ref }}
  cancel-in-progress: true

jobs:
  verify:
    runs-on: ubuntu-latest
    env:
      CI: true
      NODE_ENV: ci
      NETLIFY_NEXT_PLUGIN_SKIP: true
      VITE_ENABLE_SW: false
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm

      # Enforce lock determinism
      - name: Use deterministic install
        run: npm ci

      # Guard against missing versions (prevents ETARGET)
      - name: Guard critical versions
        run: |
          test "$(npm view esbuild version || echo fail)" != "fail"

      # Prod-surface audit only gates merges
      - name: Audit (production surface)
        run: |
          npm audit --omit=dev --audit-level=high || (echo "High/critical prod vulnerability found"; exit 1)

      # Full tree audit prints warnings but doesn't fail (dev-only)
      - name: Audit (full tree, warn only)
        run: npm audit || true

      - name: Run comprehensive verification (with secrets)
        run: npm run verify
        if: ${{ secrets.DATABASE_URL && secrets.JWT_SECRET && secrets.REFRESH_TOKEN_SECRET }}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}

      - name: Run comprehensive verification (no secrets)
        run: npm run verify
        if: ${{ !secrets.DATABASE_URL || !secrets.JWT_SECRET || !secrets.REFRESH_TOKEN_SECRET }}
          
      - name: Build production bundle
        run: npm run build

      # Minimal export-path smoke (non-destructive)
      - name: KML export smoke (isolated path)
        run: node -e "console.log('tokml lazy path will be tested post-deploy via smoke.sh');"

  deploy:
    needs: verify
    if: github.ref == 'refs/heads/main' && secrets.NETLIFY_BUILD_HOOK_URL
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Netlify build hook
        run: curl -sS -X POST "$NETLIFY_BUILD_HOOK_URL"
        env:
          NETLIFY_BUILD_HOOK_URL: ${{ secrets.NETLIFY_BUILD_HOOK_URL }}

  weekly-hygiene:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - run: npm ci
      - run: npm run knip --if-present || true
      - run: npm run depcheck --if-present || true
      - run: npm run size || true
      - name: Print actionable report
        run: |
          echo "::notice::Weekly hygiene complete. Review knip/depcheck/size output in logs."
