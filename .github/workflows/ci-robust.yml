name: CI Robust
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  schedule:
    - cron: "0 6 * * 1"  # Weekly hygiene (Mon 06:00 UTC)

concurrency:
  group: poleplanpro-${{ github.ref }}
  cancel-in-progress: true

jobs:
  verify:
    permissions:
      contents: read
      pull-requests: write
      statuses: write
      checks: write
    runs-on: ubuntu-latest
    env:
      CI: true
      NODE_ENV: ci
      NETLIFY_NEXT_PLUGIN_SKIP: true
      VITE_ENABLE_SW: false
      CUSTOM_DOMAIN: poleplanpro.com
      NETLIFY_SITE_SUBDOMAIN: poleplanpro
    steps:
      - uses: actions/checkout@v4

      # Lint GitHub Actions workflows (pinned action, warn-only)
      - name: Workflow lint (actionlint)
        uses: reviewdog/action-actionlint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check
          level: warning
          fail_level: none

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm

      # Enforce lock determinism
      - name: Use deterministic install
        run: npm ci

      # Guard against missing versions (prevents ETARGET)
      - name: Guard critical versions
        run: |
          test "$(npm view esbuild version || echo fail)" != "fail"

      # Prod-surface audit only gates merges
      - name: Audit (production surface)
        run: |
          npm audit --omit=dev --audit-level=high || (echo "High/critical prod vulnerability found"; exit 1)

      # Full tree audit prints warnings but doesn't fail (dev-only)
      - name: Audit (full tree, warn only)
        run: npm audit || true

      - name: Run comprehensive verification
        run: npm run verify
          
      - name: Build production bundle
        run: npm run build

      # Minimal export-path smoke (non-destructive)
      - name: KML export smoke (isolated path)
        run: node -e "console.log('tokml lazy path will be tested post-deploy via smoke.sh');"

      # Set a commit status with the Netlify branch deploy URL
      - name: Commit status - Netlify preview URL
        uses: actions/github-script@v7
        env:
          NETLIFY_SITE_SUBDOMAIN: ${{ env.NETLIFY_SITE_SUBDOMAIN }}
        with:
          script: |
            const isPR = context.eventName === 'pull_request';
            const sha = isPR ? context.payload.pull_request.head.sha : context.sha;
            const branch = isPR ? context.payload.pull_request.head.ref : context.ref.replace('refs/heads/','');
            const sub = branch.toLowerCase()
              .replace(/[^a-z0-9-]/g, '-')
              .replace(/^-+|-+$/g, '')
              .replace(/-+/g, '-');
            const target_url = `https://${sub}--${process.env.NETLIFY_SITE_SUBDOMAIN}.netlify.app`;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state: 'success',
              target_url,
              context: 'Preview: Netlify',
              description: 'Netlify branch deploy is available',
            });

      # Create a rich GitHub Check Run with preview links
      - name: Check Run - Preview links
        uses: actions/github-script@v7
        env:
          CUSTOM_DOMAIN: ${{ env.CUSTOM_DOMAIN }}
          NETLIFY_SITE_SUBDOMAIN: ${{ env.NETLIFY_SITE_SUBDOMAIN }}
        with:
          script: |
            const isPR = context.eventName === 'pull_request';
            const sha = isPR ? context.payload.pull_request.head.sha : context.sha;
            const branch = isPR ? context.payload.pull_request.head.ref : context.ref.replace('refs/heads/','');
            const sub = branch.toLowerCase()
              .replace(/[^a-z0-9-]/g, '-')
              .replace(/^-+|-+$/g, '')
              .replace(/-+/g, '-');
            const customUrl = `https://${sub}.${process.env.CUSTOM_DOMAIN}`;
            const netlifyUrl = `https://${sub}--${process.env.NETLIFY_SITE_SUBDOMAIN}.netlify.app`;
            const summary = [
              `â€¢ Custom domain (requires wildcard CNAME): ${customUrl}`,
              `â€¢ Netlify branch deploy: ${netlifyUrl}`
            ].join('\n');
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Preview: Links',
              head_sha: sha,
              status: 'completed',
              conclusion: 'success',
              details_url: netlifyUrl,
              output: {
                title: 'Branch preview links',
                summary,
              },
            });

      # Print expected branch subdomain URL (for wildcard CNAME setup)
      - name: Branch subdomain hint
        if: ${{ github.ref != 'refs/heads/main' && github.event_name != 'schedule' }}
        run: |
          BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}"
          SUB=$(echo "$BRANCH" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9-]/-/g; s/^-+//; s/-+$//; s/-+/-/g')
          echo "Expected branch subdomain (requires wildcard CNAME): https://${SUB}.${CUSTOM_DOMAIN}"
          echo "Netlify branch deploy URL: https://${SUB}--${NETLIFY_SITE_SUBDOMAIN}.netlify.app"

      # Comment the branch subdomain on PRs for quick access
      - name: Comment branch subdomain on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        env:
          CUSTOM_DOMAIN: ${{ env.CUSTOM_DOMAIN }}
          NETLIFY_SITE_SUBDOMAIN: ${{ env.NETLIFY_SITE_SUBDOMAIN }}
        with:
          script: |
            // This script comments branch preview links on PRs for quick access, including custom domain and Netlify URLs.
            const branch = context.payload.pull_request.head.ref;
            const sub = branch.toLowerCase()
              .replace(/[^a-z0-9-]/g, '-')
              .replace(/^-+|-+$/g, '')
              .replace(/-+/g, '-');
            const customUrl = `https://${sub}.${process.env.CUSTOM_DOMAIN}`;
            const netlifyUrl = `https://${sub}--${process.env.NETLIFY_SITE_SUBDOMAIN}.netlify.app`;
            const marker = '<!-- preview-links-marker -->';
            const newBody = [
              marker,
              `ðŸ”— Branch preview (custom domain; requires wildcard CNAME): ${customUrl}`,
              `ðŸ”— Netlify branch deploy (always available): ${netlifyUrl}`
            ].join('\n');

            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;

            // Try to find an existing bot comment with our marker
            const comments = await github.paginate(github.rest.issues.listComments, { owner, repo, issue_number });
            const existing = comments.find(c => c.body && c.body.includes(marker));

            if (existing) {
              await github.rest.issues.updateComment({ owner, repo, comment_id: existing.id, body: newBody });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number, body: newBody });
            }

  deploy:
    needs: verify
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Trigger Netlify build hook
        if: ${{ secrets.NETLIFY_BUILD_HOOK_URL != '' && secrets.NETLIFY_BUILD_HOOK_URL != null }}
        run: |
          curl -sS -X POST "$NETLIFY_BUILD_HOOK_URL"
        env:
          NETLIFY_BUILD_HOOK_URL: ${{ secrets.NETLIFY_BUILD_HOOK_URL }}
      
      - name: Fail deployment (no hook configured)
        if: ${{ secrets.NETLIFY_BUILD_HOOK_URL == '' }}
        run: |
          echo "::error::NETLIFY_BUILD_HOOK_URL secret not configured. Deployment cannot proceed."
          exit 1
        env:
          NETLIFY_BUILD_HOOK_URL: ${{ secrets.NETLIFY_BUILD_HOOK_URL }}

  weekly-hygiene:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - name: Run knip (report errors)
        run: |
          npm run knip --if-present || { echo "::warning::knip failed. See logs above for details."; }
      - name: Run depcheck (report errors)
        run: |
          npm run depcheck --if-present || { echo "::warning::depcheck failed. See logs above for details."; }
      - name: Run size (report errors)
        run: |
          npm run size || { echo "::warning::size check failed. See logs above for details."; }
      - run: npm run size || true
      - name: Print actionable report
        run: |
          echo "::notice::Weekly hygiene complete. Review knip/depcheck/size output in logs."
