name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  # Primary runtime version; kept for reference but setup-node now reads from .nvmrc
  NODE_VERSION: '22.12.0'

jobs:
  lint:
    name: Lint and Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --progress=false

      - name: ESLint
        run: npm run lint

      - name: Stylelint
        run: npm run lint:css

      - name: Check for security vulnerabilities
        run: |
          echo "Running npm audit (non-blocking)"
          npm audit --audit-level=high --production || true

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --progress=false

      - name: Run tests
        run: npm test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: coverage/
          if-no-files-found: warn

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --progress=false

      - name: Build application
        run: npm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed: dist directory not created"
            exit 1
          fi
          if [ ! -f "dist/index.html" ]; then
            echo "Build failed: index.html not found"
            exit 1
          fi
          echo "Build verification successful"

      - name: Check bundle size
        run: |
          BUNDLE_SIZE=$(du -sh dist | cut -f1)
          echo "Bundle size: $BUNDLE_SIZE"
          # Warn if bundle is larger than 10MB
          SIZE_BYTES=$(du -s dist | cut -f1)
          if [ $SIZE_BYTES -gt 10240 ]; then
            echo "Warning: Bundle size is larger than 10MB"
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/
          retention-days: 30

  verify-optional-deps:
    name: Verify Optional Dependencies
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install core dependencies only
        run: npm ci --omit=optional

      - name: Test without optional dependencies
        run: npm test

      - name: Build without optional dependencies
        run: npm run build

      - name: Verify graceful degradation
        run: |
          echo "Testing application without optional GIS dependencies"
          # This verifies the application can build and run without tokml, shpjs, @mapbox/shp-write
          if [ -f "dist/index.html" ]; then
            echo "✓ Application builds successfully without optional dependencies"
          else
            echo "✗ Application failed to build without optional dependencies"
            exit 1
          fi
