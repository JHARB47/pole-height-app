name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  verify:
    runs-on: ubuntu-latest
    env:
      CI: true
      NODE_ENV: ci
      NETLIFY_NEXT_PLUGIN_SKIP: true
      VITE_ENABLE_SW: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install dependencies
        run: npm ci --no-audit --progress=false

      - name: Verify build
        run: npm run verify
        env:
          SKIP_INSTALL: 'true'

      - name: Build PWA bundle for Lighthouse
        if: success()
        run: |
          rm -rf dist
          VITE_ENABLE_SW=true npm run build

      - name: Lighthouse PWA audit
        if: success()
        run: npx @lhci/cli@0.11.0 autorun --config=.lighthouserc.cjs

      - name: Upload dist artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: CI/CD Pipeline
          path: dist/
          retention-days: 7

  staging-profile:
    name: Staging Profile Check
    needs: verify
    runs-on: ubuntu-latest
    env:
      CI: true
      NODE_ENV: ci
      DEPLOY_ENV: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install dependencies
        run: npm ci --no-audit --progress=false

      - name: Prepare staging environment config
        run: |
          cat <<'ENV' > server/.env
          JWT_SECRET=dummy
          REFRESH_TOKEN_SECRET=dummy
          DATABASE_URL=postgres://placeholder
          ENV

      - name: Run staging deployment checklist
        run: node scripts/deploy/production-check.mjs